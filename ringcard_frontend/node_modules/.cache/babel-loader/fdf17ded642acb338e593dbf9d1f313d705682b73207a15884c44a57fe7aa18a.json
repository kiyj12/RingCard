{"ast":null,"code":"import QuestionNote from\"./QuestionNoteAnony\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function AnswerForTheQuestion(answer,question){if(answer.questionId===question.id){return answer;}}function findAnswer(answer,question){if(answer.getQuestionId===question.id){console.log(question);console.log(answer);return answer;}}function QuestionNoteList(props){var answerList=props.answerList;// answerList.forEach(AnswerForTheQuestion);\n// const answer = answerList.find(AnswerForTheQuestion(question));\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"question-notes-container\",children:props.questionList.map(function(question,idx){return/*#__PURE__*/ (// answerList.find(a => a.questionId === question.id);\n_jsx(QuestionNote,{idx:idx,question:question,answerList:answerList},idx));})})});}export default QuestionNoteList;","map":{"version":3,"names":["QuestionNote","React","AnswerForTheQuestion","answer","question","questionId","id","findAnswer","getQuestionId","console","log","QuestionNoteList","props","answerList","questionList","map","idx"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNote from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tquestionList: IQuestion[];\n\tanswerList: IAnswer[];\n}\n\nfunction AnswerForTheQuestion(\n\tanswer: { questionId: any },\n\tquestion: { id: any }\n) {\n\tif (answer.questionId === question.id) {\n\t\treturn answer;\n\t}\n}\n\nfunction findAnswer(answer: any, question: any) {\n\tif (answer.getQuestionId === question.id) {\n\t\tconsole.log(question);\n\t\tconsole.log(answer);\n\t\treturn answer;\n\t}\n}\n\nfunction QuestionNoteList(props: Props) {\n\tconst answerList = props.answerList;\n\t// answerList.forEach(AnswerForTheQuestion);\n\t// const answer = answerList.find(AnswerForTheQuestion(question));\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{props.questionList.map((question, idx) => (\n\t\t\t\t\t// answerList.find(a => a.questionId === question.id);\n\n\t\t\t\t\t<QuestionNote\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\tanswerList={answerList}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":"AAMA,MAAOA,aAAY,KAAM,qBAAqB,CAC9C,MAAOC,MAAK,KAAM,OAAO,CAAC,gGAO1B,QAASC,qBAAoB,CAC5BC,MAA2B,CAC3BC,QAAqB,CACpB,CACD,GAAID,MAAM,CAACE,UAAU,GAAKD,QAAQ,CAACE,EAAE,CAAE,CACtC,MAAOH,OAAM,CACd,CACD,CAEA,QAASI,WAAU,CAACJ,MAAW,CAAEC,QAAa,CAAE,CAC/C,GAAID,MAAM,CAACK,aAAa,GAAKJ,QAAQ,CAACE,EAAE,CAAE,CACzCG,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC,CACrBK,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC,CACnB,MAAOA,OAAM,CACd,CACD,CAEA,QAASQ,iBAAgB,CAACC,KAAY,CAAE,CACvC,GAAMC,WAAU,CAAGD,KAAK,CAACC,UAAU,CACnC;AACA;AACA,mBACC,sCACC,YAAK,SAAS,CAAC,0BAA0B,UACvCD,KAAK,CAACE,YAAY,CAACC,GAAG,CAAC,SAACX,QAAQ,CAAEY,GAAG,sBACrC;AAEA,KAAC,YAAY,EAEZ,GAAG,CAAEA,GAAI,CACT,QAAQ,CAAEZ,QAAS,CACnB,UAAU,CAAES,UAAW,EAHlBG,GAAG,CAIP,GACF,CAAC,EACG,EACJ,CAEL,CAEA,cAAeL,iBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}