{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\home\\\\HomeUnanswered.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../../styles/layout/layout.css\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeUnanswered = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query'); // test\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n\n  // const [questionList, setQuestionList] = useState<any[]>([]);\n  // const getQuestionList = (questionList:any) => {setQuestionList(questionList);};\n  // const [totalPages, setTotalPages] = useState<number>();\n  // const getTotalPages = (totalPages:any) => {\n  //   setTotalPages(totalPages);\n  // };\n  // const [pageNumber, setPageNumber] = useState(0);\n  // const getPageNumber = (pageNumber:any) => {\n  //   setPageNumber(pageNumber);\n  // };\n  // const pageAddress = \"unanswered\";\n\n  // \tuseEffect(() => {\n  // \t\taxios\n  // \t\t\t.get(\"/home/unanswered/\"+pageNumber)\n  // \t\t\t.then((res) => {\n  // \t\t\t\tconsole.log(res.data);\n  // \t\t\t\tsetQuestionList(res.data.content);\n  // \t\t\t\tsetTotalPages(res.data.totalPages);\n  // \t\t\t\tsetPageNumber(res.data.number);\n  // \t\t\t})\n  // \t\t\t.catch((err) => {\n  // \t\t\t\tconsole.log(err);\n  // \t\t\t});\n  // \t}, []);\n\n  // \treturn (\n  // \t\t<div className=\"container\">\n  // \t\t\t{/* <PageLoad/> */}\n  // \t\t\t<Header />\n  // \t\t\t<Navigation pageAddress={pageAddress} totalPages={totalPages} getTotalPages={getTotalPages} pageNumber={pageNumber} getPageNumber={getPageNumber} questionList={questionList} getQuestionList={getQuestionList}/>\n\n  // \t\t\t<div className=\"container-body\">\n  // \t\t\t\t<QuestionNoteList questionList={questionList} />\n  // \t\t\t</div>\n  // \t\t</div>\n  // \t);\n};\n_s(HomeUnanswered, \"HWxNQEGJGSlsPJ3ubBB3081mtng=\", false, function () {\n  return [useSearchParams];\n});\n_c = HomeUnanswered;\nexport default HomeUnanswered;\nvar _c;\n$RefreshReg$(_c, \"HomeUnanswered\");","map":{"version":3,"names":["React","useSearchParams","HomeUnanswered","searchParams","query","get"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/home/HomeUnanswered.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport Header from \"../../components/Header\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst HomeUnanswered = () => {\r\n\tconst [searchParams] = useSearchParams();\r\n  const query = searchParams.get('query'); // test\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t<div>{query}</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\t// const [questionList, setQuestionList] = useState<any[]>([]);\r\n\t// const getQuestionList = (questionList:any) => {setQuestionList(questionList);};\r\n\t// const [totalPages, setTotalPages] = useState<number>();\r\n\t// const getTotalPages = (totalPages:any) => {\r\n  //   setTotalPages(totalPages);\r\n  // };\r\n\t// const [pageNumber, setPageNumber] = useState(0);\r\n\t// const getPageNumber = (pageNumber:any) => {\r\n  //   setPageNumber(pageNumber);\r\n  // };\r\n\t// const pageAddress = \"unanswered\";\r\n\r\n// \tuseEffect(() => {\r\n// \t\taxios\r\n// \t\t\t.get(\"/home/unanswered/\"+pageNumber)\r\n// \t\t\t.then((res) => {\r\n// \t\t\t\tconsole.log(res.data);\r\n// \t\t\t\tsetQuestionList(res.data.content);\r\n// \t\t\t\tsetTotalPages(res.data.totalPages);\r\n// \t\t\t\tsetPageNumber(res.data.number);\r\n// \t\t\t})\r\n// \t\t\t.catch((err) => {\r\n// \t\t\t\tconsole.log(err);\r\n// \t\t\t});\r\n// \t}, []);\r\n\t\r\n\r\n// \treturn (\r\n// \t\t<div className=\"container\">\r\n// \t\t\t{/* <PageLoad/> */}\r\n// \t\t\t<Header />\r\n// \t\t\t<Navigation pageAddress={pageAddress} totalPages={totalPages} getTotalPages={getTotalPages} pageNumber={pageNumber} getPageNumber={getPageNumber} questionList={questionList} getQuestionList={getQuestionList}/>\r\n\t\t\t\r\n// \t\t\t<div className=\"container-body\">\r\n// \t\t\t\t<QuestionNoteList questionList={questionList} />\r\n// \t\t\t</div>\r\n// \t\t</div>\r\n// \t);\r\n}\r\n\r\nexport default HomeUnanswered;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA+B,OAAO;AAElD,OAAO,gCAAgC;AAIvC,SAASC,eAAe,QAAQ,kBAAkB;AAAC;AAEnD,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC5B,MAAM,CAACC,YAAY,CAAC,GAAGF,eAAe,EAAE;EACvC,MAAMG,KAAK,GAAGD,YAAY,CAACE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE1C,oBACC;IAAK,SAAS,EAAC,WAAW;IAAA,uBAC1B;MAAA,UAAMD;IAAK;MAAA;MAAA;MAAA;IAAA;EAAO;IAAA;IAAA;IAAA;EAAA,QACZ;;EAGP;EACA;EACA;EACA;EACC;EACA;EACD;EACA;EACC;EACA;EACD;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;AACA,CAAC;AAAA,GAhDKF,cAAc;EAAA,QACID,eAAe;AAAA;AAAA,KADjCC,cAAc;AAkDpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}