{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteAnony.tsx\",\n  _s = $RefreshSig$();\nimport \"../styles/question.css\";\nimport NowDate from \"./NowDate\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionNote(props) {\n  _s();\n  const idx = props.idx;\n  const question = props.question;\n  const answer = props.answer;\n  const [showAnswer, setShowAnswer] = useState(false);\n  const handleShowAnswerClick = async () => {\n    setShowAnswer(!showAnswer);\n  };\n  function FindAnswer(e) {\n    if (e.questionId === question.id) {\n      return e;\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // <div\n    // \tclassName=\"question-note\"\n    // \tkey={idx}\n    // \tstyle={{\n    // \t\tbackgroundImage: `url(\"/notes/yellow-note.png\")`,\n    // \t}}\n    // >\n    // \t<div className=\"note-header\">\n    // \t\t<div className=\"note-profile-pic\">\n    // \t\t\t<img src=\"/test-anony-profile-pic.jpg\" alt=\"\" />\n    // \t\t</div>\n    // \t\t{/* <div className=\"note-time\">{nowDate}</div> */}\n    // \t\t<NowDate questionUploadTime={question.uploadTime} />\n    // \t</div>\n    // \t<div className=\"QuestionNoteAnony-note-content-box\">\n    // \t\t<div className=\"note-content\">{question.questionContents}</div>\n    // \t</div>\n    // \t<hr className=\"note-hr\" />\n    // \t<div className=\"QuestionNoteAnony-note-footer\">\n    // \t\t<div className=\"QuestionNoteAnony-note-footer-btns-container\">\n    // \t\t\t<button onClick={handleShowAnswerClick}>\n    // \t\t\t\t{/* TODO: 얘 이미지 오면 바꾸기 */}\n    // \t\t\t\t<img\n    // \t\t\t\t\tclassName=\"note-send-answer-btn\"\n    // \t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\n    // \t\t\t\t\talt=\"\"\n    // \t\t\t\t/>\n    // \t\t\t</button>\n    // \t\t</div>\n    // \t\t{showAnswer ? (\n    // \t\t\t<div className=\"QuestionNoteAnony-note-content-answer\">\n    // \t\t\t\t{answer.answerContents}\n    // \t\t\t</div>\n    // \t\t) : undefined}\n    // \t</div>\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-question-note-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"each-question-note-header-edge-img-box\",\n          style: {\n            backgroundImage: `url(\"/notes/yellow-note-top-edge.png\")`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"each-question-note-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-note-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-profile-pic\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/test-anony-profile-pic.jpg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(NowDate, {\n              questionUploadTime: question.uploadTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-note-content-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-note-content\",\n              children: question.questionContents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"note-hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"each-question-note-footer-edge-img-box\",\n          style: {\n            backgroundImage: `url(\"/notes/yellow-note-edge.png\")`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(QuestionNote, \"/brvs1xZF/PooFi4VTtMp3zSWWA=\");\n_c = QuestionNote;\nexport default QuestionNote;\nvar _c;\n$RefreshReg$(_c, \"QuestionNote\");","map":{"version":3,"names":["NowDate","React","useState","QuestionNote","props","idx","question","answer","showAnswer","setShowAnswer","handleShowAnswerClick","FindAnswer","e","questionId","id","backgroundImage","uploadTime","questionContents"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteAnony.tsx"],"sourcesContent":["import { IAnswer, IQuestion } from \"./types\";\nimport QuestionFooter from \"./QuestionNoteFooter\";\nimport \"../styles/question.css\";\nimport NowDate from \"./NowDate\";\nimport React, { useState } from \"react\";\n\nexport interface Props {\n\tidx: number;\n\tquestion: IQuestion;\n\tanswer: IAnswer;\n}\n\nfunction QuestionNote(props: Props) {\n\tconst idx = props.idx;\n\tconst question = props.question;\n\tconst answer = props.answer;\n\tconst [showAnswer, setShowAnswer] = useState<boolean>(false);\n\n\tconst handleShowAnswerClick = async () => {\n\t\tsetShowAnswer(!showAnswer);\n\t};\n\n\tfunction FindAnswer(e: { questionId: number }) {\n\t\tif (e.questionId === question.id) {\n\t\t\treturn e;\n\t\t}\n\t}\n\n\treturn (\n\t\t// <div\n\t\t// \tclassName=\"question-note\"\n\t\t// \tkey={idx}\n\t\t// \tstyle={{\n\t\t// \t\tbackgroundImage: `url(\"/notes/yellow-note.png\")`,\n\t\t// \t}}\n\t\t// >\n\t\t// \t<div className=\"note-header\">\n\t\t// \t\t<div className=\"note-profile-pic\">\n\t\t// \t\t\t<img src=\"/test-anony-profile-pic.jpg\" alt=\"\" />\n\t\t// \t\t</div>\n\t\t// \t\t{/* <div className=\"note-time\">{nowDate}</div> */}\n\t\t// \t\t<NowDate questionUploadTime={question.uploadTime} />\n\t\t// \t</div>\n\t\t// \t<div className=\"QuestionNoteAnony-note-content-box\">\n\t\t// \t\t<div className=\"note-content\">{question.questionContents}</div>\n\t\t// \t</div>\n\t\t// \t<hr className=\"note-hr\" />\n\t\t// \t<div className=\"QuestionNoteAnony-note-footer\">\n\t\t// \t\t<div className=\"QuestionNoteAnony-note-footer-btns-container\">\n\t\t// \t\t\t<button onClick={handleShowAnswerClick}>\n\t\t// \t\t\t\t{/* TODO: 얘 이미지 오면 바꾸기 */}\n\t\t// \t\t\t\t<img\n\t\t// \t\t\t\t\tclassName=\"note-send-answer-btn\"\n\t\t// \t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\n\t\t// \t\t\t\t\talt=\"\"\n\t\t// \t\t\t\t/>\n\t\t// \t\t\t</button>\n\t\t// \t\t</div>\n\t\t// \t\t{showAnswer ? (\n\t\t// \t\t\t<div className=\"QuestionNoteAnony-note-content-answer\">\n\t\t// \t\t\t\t{answer.answerContents}\n\t\t// \t\t\t</div>\n\t\t// \t\t) : undefined}\n\t\t// \t</div>\n\t\t// </div>\n\n\t\t<>\n\t\t\t<div className=\"each-question-note-box\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"each-question-note-header-edge-img-box\"\n\t\t\t\t\tstyle={{ backgroundImage: `url(\"/notes/yellow-note-top-edge.png\")` }}\n\t\t\t\t></div>\n\t\t\t\t<div className=\"each-question-note-body\">\n\t\t\t\t\t<div className=\"each-note-header\">\n\t\t\t\t\t\t<div className=\"note-profile-pic\">\n\t\t\t\t\t\t\t<img src=\"/test-anony-profile-pic.jpg\" alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<NowDate questionUploadTime={question.uploadTime} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"each-note-content-box\">\n\t\t\t\t\t\t<div className=\"each-note-content\">{question.questionContents}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<hr className=\"note-hr\" />\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"each-question-note-footer-edge-img-box\"\n\t\t\t\t\tstyle={{ backgroundImage: `url(\"/notes/yellow-note-edge.png\")` }}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNote;\n"],"mappings":";;AAEA,OAAO,wBAAwB;AAC/B,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAQxC,SAASC,YAAY,CAACC,KAAY,EAAE;EAAA;EACnC,MAAMC,GAAG,GAAGD,KAAK,CAACC,GAAG;EACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;EAC/B,MAAMC,MAAM,GAAGH,KAAK,CAACG,MAAM;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAU,KAAK,CAAC;EAE5D,MAAMQ,qBAAqB,GAAG,YAAY;IACzCD,aAAa,CAAC,CAACD,UAAU,CAAC;EAC3B,CAAC;EAED,SAASG,UAAU,CAACC,CAAyB,EAAE;IAC9C,IAAIA,CAAC,CAACC,UAAU,KAAKP,QAAQ,CAACQ,EAAE,EAAE;MACjC,OAAOF,CAAC;IACT;EACD;EAEA;IAAA;IACC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;MAAA,uBACC;QAAK,SAAS,EAAC,wBAAwB;QAAA,wBACtC;UACC,SAAS,EAAC,wCAAwC;UAClD,KAAK,EAAE;YAAEG,eAAe,EAAG;UAAwC;QAAE;UAAA;UAAA;UAAA;QAAA,QAC/D,eACP;UAAK,SAAS,EAAC,yBAAyB;UAAA,wBACvC;YAAK,SAAS,EAAC,kBAAkB;YAAA,wBAChC;cAAK,SAAS,EAAC,kBAAkB;cAAA,uBAChC;gBAAK,GAAG,EAAC,6BAA6B;gBAAC,GAAG,EAAC;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YAAG;cAAA;cAAA;cAAA;YAAA,QAC3C,eACN,QAAC,OAAO;cAAC,kBAAkB,EAAET,QAAQ,CAACU;YAAW;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QAC/C,eACN;YAAK,SAAS,EAAC,uBAAuB;YAAA,uBACrC;cAAK,SAAS,EAAC,mBAAmB;cAAA,UAAEV,QAAQ,CAACW;YAAgB;cAAA;cAAA;cAAA;YAAA;UAAO;YAAA;YAAA;YAAA;UAAA,QAC/D,eACN;YAAI,SAAS,EAAC;UAAS;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAErB,eACN;UACC,SAAS,EAAC,wCAAwC;UAClD,KAAK,EAAE;YAAEF,eAAe,EAAG;UAAoC;QAAE;UAAA;UAAA;UAAA;QAAA,QAC3D;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;EACJ;AAEL;AAAC,GAhFQZ,YAAY;AAAA,KAAZA,YAAY;AAkFrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}