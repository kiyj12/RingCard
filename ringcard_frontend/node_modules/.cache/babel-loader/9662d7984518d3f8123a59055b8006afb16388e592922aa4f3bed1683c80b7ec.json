{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RequestParamHelpers = void 0;\nvar form_data_helper_1 = require(\"./form-data.helper\");\nvar oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\n/* Helpers functions that are specific to this class but do not depends on instance */\nvar RequestParamHelpers = /*#__PURE__*/function () {\n  function RequestParamHelpers() {\n    _classCallCheck(this, RequestParamHelpers);\n  }\n  _createClass(RequestParamHelpers, null, [{\n    key: \"formatQueryToString\",\n    value: function formatQueryToString(query) {\n      var formattedQuery = {};\n      for (var prop in query) {\n        if (typeof query[prop] === 'string') {\n          formattedQuery[prop] = query[prop];\n        } else if (typeof query[prop] !== 'undefined') {\n          formattedQuery[prop] = String(query[prop]);\n        }\n      }\n      return formattedQuery;\n    }\n  }, {\n    key: \"autoDetectBodyType\",\n    value: function autoDetectBodyType(url) {\n      if (url.pathname.startsWith('/2/') || url.pathname.startsWith('/labs/2/')) {\n        // oauth2 takes url encoded\n        if (url.password.startsWith('/2/oauth2')) {\n          return 'url';\n        }\n        // Twitter API v2 has JSON-encoded requests for everything else\n        return 'json';\n      }\n      if (url.hostname === 'upload.twitter.com') {\n        if (url.pathname === '/1.1/media/upload.json') {\n          return 'form-data';\n        }\n        // json except for media/upload command, that is form-data.\n        return 'json';\n      }\n      var endpoint = url.pathname.split('/1.1/', 2)[1];\n      if (this.JSON_1_1_ENDPOINTS.has(endpoint)) {\n        return 'json';\n      }\n      return 'url';\n    }\n  }, {\n    key: \"addQueryParamsToUrl\",\n    value: function addQueryParamsToUrl(url, query) {\n      var queryEntries = Object.entries(query);\n      if (queryEntries.length) {\n        var search = '';\n        var _iterator = _createForOfIteratorHelper(queryEntries),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              value = _step$value[1];\n            search += (search.length ? '&' : '?') + \"\".concat(oauth1_helper_1.default.percentEncode(key), \"=\").concat(oauth1_helper_1.default.percentEncode(value));\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        url.search = search;\n      }\n    }\n  }, {\n    key: \"constructBodyParams\",\n    value: function constructBodyParams(body, headers, mode) {\n      if (body instanceof Buffer) {\n        return body;\n      }\n      if (mode === 'json') {\n        headers['content-type'] = 'application/json;charset=UTF-8';\n        return JSON.stringify(body);\n      } else if (mode === 'url') {\n        headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n        if (Object.keys(body).length) {\n          return new URLSearchParams(body).toString().replace(/\\*/g, '%2A'); // URLSearchParams doesnt encode '*', but Twitter wants it encoded.\n        }\n\n        return '';\n      } else if (mode === 'raw') {\n        throw new Error('You can only use raw body mode with Buffers. To give a string, use Buffer.from(str).');\n      } else {\n        var form = new form_data_helper_1.FormDataHelper();\n        for (var parameter in body) {\n          form.append(parameter, body[parameter]);\n        }\n        var formHeaders = form.getHeaders();\n        headers['content-type'] = formHeaders['content-type'];\n        return form.getBuffer();\n      }\n    }\n  }, {\n    key: \"setBodyLengthHeader\",\n    value: function setBodyLengthHeader(options, body) {\n      var _a;\n      options.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : {};\n      if (typeof body === 'string') {\n        options.headers['content-length'] = Buffer.byteLength(body);\n      } else {\n        options.headers['content-length'] = body.length;\n      }\n    }\n  }, {\n    key: \"isOAuthSerializable\",\n    value: function isOAuthSerializable(item) {\n      return !(item instanceof Buffer);\n    }\n  }, {\n    key: \"mergeQueryAndBodyForOAuth\",\n    value: function mergeQueryAndBodyForOAuth(query, body) {\n      var parameters = {};\n      for (var prop in query) {\n        parameters[prop] = query[prop];\n      }\n      if (this.isOAuthSerializable(body)) {\n        for (var _prop in body) {\n          var bodyProp = body[_prop];\n          if (this.isOAuthSerializable(bodyProp)) {\n            parameters[_prop] = typeof bodyProp === 'object' && bodyProp !== null && 'toString' in bodyProp ? bodyProp.toString() : bodyProp;\n          }\n        }\n      }\n      return parameters;\n    }\n  }, {\n    key: \"moveUrlQueryParamsIntoObject\",\n    value: function moveUrlQueryParamsIntoObject(url, query) {\n      var _iterator2 = _createForOfIteratorHelper(url.searchParams),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            param = _step2$value[0],\n            value = _step2$value[1];\n          query[param] = value;\n        }\n        // Remove the query string\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      url.search = '';\n      return url;\n    }\n    /**\n     * Replace URL parameters available in pathname, like `:id`, with data given in `parameters`:\n     * `https://twitter.com/:id.json` + `{ id: '20' }` => `https://twitter.com/20.json`\n     */\n  }, {\n    key: \"applyRequestParametersToUrl\",\n    value: function applyRequestParametersToUrl(url, parameters) {\n      url.pathname = url.pathname.replace(/:([A-Z_-]+)/ig, function (fullMatch, paramName) {\n        if (parameters[paramName] !== undefined) {\n          return String(parameters[paramName]);\n        }\n        return fullMatch;\n      });\n      return url;\n    }\n  }]);\n  return RequestParamHelpers;\n}();\nexports.RequestParamHelpers = RequestParamHelpers;\nRequestParamHelpers.JSON_1_1_ENDPOINTS = new Set(['direct_messages/events/new.json', 'direct_messages/welcome_messages/new.json', 'direct_messages/welcome_messages/rules/new.json', 'media/metadata/create.json', 'collections/entries/curate.json']);\nexports.default = RequestParamHelpers;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","RequestParamHelpers","form_data_helper_1","require","oauth1_helper_1","query","formattedQuery","prop","String","url","pathname","startsWith","password","hostname","endpoint","split","JSON_1_1_ENDPOINTS","has","queryEntries","entries","length","search","key","default","percentEncode","body","headers","mode","Buffer","JSON","stringify","keys","URLSearchParams","toString","replace","Error","form","FormDataHelper","parameter","append","formHeaders","getHeaders","getBuffer","options","_a","byteLength","item","parameters","isOAuthSerializable","bodyProp","searchParams","param","fullMatch","paramName","undefined","Set"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/twitter-api-v2/dist/client-mixins/request-param.helper.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestParamHelpers = void 0;\nconst form_data_helper_1 = require(\"./form-data.helper\");\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\n/* Helpers functions that are specific to this class but do not depends on instance */\nclass RequestParamHelpers {\n    static formatQueryToString(query) {\n        const formattedQuery = {};\n        for (const prop in query) {\n            if (typeof query[prop] === 'string') {\n                formattedQuery[prop] = query[prop];\n            }\n            else if (typeof query[prop] !== 'undefined') {\n                formattedQuery[prop] = String(query[prop]);\n            }\n        }\n        return formattedQuery;\n    }\n    static autoDetectBodyType(url) {\n        if (url.pathname.startsWith('/2/') || url.pathname.startsWith('/labs/2/')) {\n            // oauth2 takes url encoded\n            if (url.password.startsWith('/2/oauth2')) {\n                return 'url';\n            }\n            // Twitter API v2 has JSON-encoded requests for everything else\n            return 'json';\n        }\n        if (url.hostname === 'upload.twitter.com') {\n            if (url.pathname === '/1.1/media/upload.json') {\n                return 'form-data';\n            }\n            // json except for media/upload command, that is form-data.\n            return 'json';\n        }\n        const endpoint = url.pathname.split('/1.1/', 2)[1];\n        if (this.JSON_1_1_ENDPOINTS.has(endpoint)) {\n            return 'json';\n        }\n        return 'url';\n    }\n    static addQueryParamsToUrl(url, query) {\n        const queryEntries = Object.entries(query);\n        if (queryEntries.length) {\n            let search = '';\n            for (const [key, value] of queryEntries) {\n                search += (search.length ? '&' : '?') + `${oauth1_helper_1.default.percentEncode(key)}=${oauth1_helper_1.default.percentEncode(value)}`;\n            }\n            url.search = search;\n        }\n    }\n    static constructBodyParams(body, headers, mode) {\n        if (body instanceof Buffer) {\n            return body;\n        }\n        if (mode === 'json') {\n            headers['content-type'] = 'application/json;charset=UTF-8';\n            return JSON.stringify(body);\n        }\n        else if (mode === 'url') {\n            headers['content-type'] = 'application/x-www-form-urlencoded;charset=UTF-8';\n            if (Object.keys(body).length) {\n                return new URLSearchParams(body)\n                    .toString()\n                    .replace(/\\*/g, '%2A'); // URLSearchParams doesnt encode '*', but Twitter wants it encoded.\n            }\n            return '';\n        }\n        else if (mode === 'raw') {\n            throw new Error('You can only use raw body mode with Buffers. To give a string, use Buffer.from(str).');\n        }\n        else {\n            const form = new form_data_helper_1.FormDataHelper();\n            for (const parameter in body) {\n                form.append(parameter, body[parameter]);\n            }\n            const formHeaders = form.getHeaders();\n            headers['content-type'] = formHeaders['content-type'];\n            return form.getBuffer();\n        }\n    }\n    static setBodyLengthHeader(options, body) {\n        var _a;\n        options.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : {};\n        if (typeof body === 'string') {\n            options.headers['content-length'] = Buffer.byteLength(body);\n        }\n        else {\n            options.headers['content-length'] = body.length;\n        }\n    }\n    static isOAuthSerializable(item) {\n        return !(item instanceof Buffer);\n    }\n    static mergeQueryAndBodyForOAuth(query, body) {\n        const parameters = {};\n        for (const prop in query) {\n            parameters[prop] = query[prop];\n        }\n        if (this.isOAuthSerializable(body)) {\n            for (const prop in body) {\n                const bodyProp = body[prop];\n                if (this.isOAuthSerializable(bodyProp)) {\n                    parameters[prop] = typeof bodyProp === 'object' && bodyProp !== null && 'toString' in bodyProp\n                        ? bodyProp.toString()\n                        : bodyProp;\n                }\n            }\n        }\n        return parameters;\n    }\n    static moveUrlQueryParamsIntoObject(url, query) {\n        for (const [param, value] of url.searchParams) {\n            query[param] = value;\n        }\n        // Remove the query string\n        url.search = '';\n        return url;\n    }\n    /**\n     * Replace URL parameters available in pathname, like `:id`, with data given in `parameters`:\n     * `https://twitter.com/:id.json` + `{ id: '20' }` => `https://twitter.com/20.json`\n     */\n    static applyRequestParametersToUrl(url, parameters) {\n        url.pathname = url.pathname.replace(/:([A-Z_-]+)/ig, (fullMatch, paramName) => {\n            if (parameters[paramName] !== undefined) {\n                return String(parameters[paramName]);\n            }\n            return fullMatch;\n        });\n        return url;\n    }\n}\nexports.RequestParamHelpers = RequestParamHelpers;\nRequestParamHelpers.JSON_1_1_ENDPOINTS = new Set([\n    'direct_messages/events/new.json',\n    'direct_messages/welcome_messages/new.json',\n    'direct_messages/welcome_messages/rules/new.json',\n    'media/metadata/create.json',\n    'collections/entries/curate.json',\n]);\nexports.default = RequestParamHelpers;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}