{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote.tsx\";\nimport QuestionFooter from \"./QuestionNoteFooter\";\nimport \"../styles/question.css\";\nimport NowDate from \"./NowDate\";\nimport HyperlinkBox from \"./HyperlinkBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionNote(props) {\n  const idx = props.idx;\n  const question = props.question;\n\n  // making tape 동적 삽입\n  const tapeList = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  const cntTape = tapeList.length;\n  const tapePositionList = [\"width: 120px; height: 28px; transform: rotate(-30deg); margin: -10px auto -15px -40px;\", \"width: 130px; height: 28px; transform: rotate(-18deg); margin: -20px auto -30px -30px;\", \"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -25px;\", \"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -22.5px; transform: rotate(6deg);\", \"width: 130px; height: 28px; transform: rotate(20deg); margin: -12px -40px -10px auto;\"];\n  const cntPosition = tapePositionList.length;\n\n  // const tapeImages = document.getElementsByClassName(\n  // \t\"QuestionNote-maskingTape-img\"\n  // );\n  // var tapeImageList = Array.from(tapeImages);\n  const tapeImage = document.getElementsByClassName(\"QuestionNote-maskingTape-img\");\n  var tapeType = String(question.tapeType);\n  // console.log(tapeType);\n\n  // tapeImageList.forEach((tapeImage) => {\n  const chosenPosition = tapePositionList[Math.floor(Math.random() * cntPosition)];\n  tapeImage.setAttribute(\"style\", chosenPosition);\n  tapeImage.setAttribute(\"src\", `/masking-tapes/tape${tapeType}.svg`);\n  console.log(`${tapeType}`);\n\n  // if (question.tapeType !== 0) {\n  // \tconst customizedTape = String(question.tapeType);\n  // \ttapeImage.setAttribute(\"src\", `/masking-tapes/tape${customizedTape}.svg`);\n  // \ttapeType = customizedTape;\n  // } else {\n  // \tconst chosenTape = tapeList[Math.floor(Math.random() * cntTape)];\n  // \ttapeImage.setAttribute(\"src\", `/masking-tapes/tape${chosenTape}.svg`);\n  // \ttapeType = chosenTape;\n  // }\n  // });\n\n  const noteList = [\"1\", \"2\", \"3\", \"4\"];\n  const cntNote = noteList.length;\n  const noteImages = document.getElementsByClassName(\"question-note\");\n  var noteImageList = Array.from(noteImages);\n  noteImageList.forEach(noteImage => {\n    noteImage.setAttribute(\"src\", `/masking-tapes/tape${question.noteType}.svg`);\n    // if (question.noteType !== 0) {\n    // \tconst customizedNote = String(question.noteType);\n    // \tnoteImage.setAttribute(\n    // \t\t\"style\",\n    // \t\t`/masking-tapes/tape${customizedNote}.svg`\n    // \t);\n    // \tnoteType = customizedNote;\n    // } else {\n    // \tconst chosenNote = noteList[Math.floor(Math.random() * cntNote)];\n    // \t// TODO: note chosenNote로 바꾸기\n    // \tnoteImage.setAttribute(\n    // \t\t\"style\",\n    // \t\t`background-image: url(\"/notes/note1.png\")`\n    // \t);\n    // \t// TODO: note chosenNote로 바꾸기\n    // \tnoteType = \"1\";\n    // }\n  });\n\n  // const tapeBoxes = document.getElementsByClassName(\n  // \t\"QuestionNote-maskingTape-box\"\n  // );\n\n  // var tapeBoxList = Array.from(tapeBoxes);\n  // tapeBoxList.forEach((tapeBox) => {\n  // \tconsole.log(tapeBox)\n  // \tvar tapeImage = document.createElement(\"img\");\n  // \tconst tape = tapeBox.appendChild(tapeImage);\n\n  // \tvar chosenTape = tapeList[Math.floor(Math.random() * tapeList.length)];\n  // \ttape.setAttribute(\"src\", `../masking-tapes/${chosenTape}`);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-note\",\n    style: {\n      backgroundImage: `url(\"/notes/note1.png\")`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionNote-maskingTape-box\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"QuestionNote-maskingTape-img\",\n        src: \"\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-profile-pic\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/test-anony-profile-pic.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NowDate, {\n        questionUploadTime: question.uploadTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        children: question.questionContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this), question.questionHyperlink == null || question.questionHyperlink === \"\" ? undefined : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionNote-note-hyperlink-box\",\n      children: /*#__PURE__*/_jsxDEV(HyperlinkBox, {\n        hyperlinkContent: question.questionHyperlink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"note-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(QuestionFooter, {\n      question: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this)]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n}\n_c = QuestionNote;\nexport default QuestionNote;\nvar _c;\n$RefreshReg$(_c, \"QuestionNote\");","map":{"version":3,"names":["QuestionFooter","NowDate","HyperlinkBox","QuestionNote","props","idx","question","tapeList","cntTape","length","tapePositionList","cntPosition","tapeImage","document","getElementsByClassName","tapeType","String","chosenPosition","Math","floor","random","setAttribute","console","log","noteList","cntNote","noteImages","noteImageList","Array","from","forEach","noteImage","noteType","backgroundImage","uploadTime","questionContents","questionHyperlink","undefined"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote.tsx"],"sourcesContent":["import { IQuestion } from \"./types\";\nimport QuestionFooter from \"./QuestionNoteFooter\";\nimport \"../styles/question.css\";\nimport NowDate from \"./NowDate\";\nimport HyperlinkBox from \"./HyperlinkBox\";\nimport { useEffect } from \"react\";\nimport { forEachChild } from \"typescript\";\n\nexport interface Props {\n\tidx: number;\n\tquestion: IQuestion;\n}\n\nfunction QuestionNote(props: Props) {\n\tconst idx = props.idx;\n\tconst question = props.question;\n\n\t// making tape 동적 삽입\n\tconst tapeList = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n\tconst cntTape = tapeList.length;\n\tconst tapePositionList = [\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: -10px auto -15px -40px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: -20px auto -30px -30px;\",\n\t\t\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -25px;\",\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -22.5px; transform: rotate(6deg);\",\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: -12px -40px -10px auto;\",\n\t];\n\tconst cntPosition = tapePositionList.length;\n\n\t// const tapeImages = document.getElementsByClassName(\n\t// \t\"QuestionNote-maskingTape-img\"\n\t// );\n\t// var tapeImageList = Array.from(tapeImages);\n\tconst tapeImage = document.getElementsByClassName(\n\t\t\"QuestionNote-maskingTape-img\"\n\t);\n\n\tvar tapeType = String(question.tapeType);\n\t// console.log(tapeType);\n\n\t// tapeImageList.forEach((tapeImage) => {\n\tconst chosenPosition =\n\t\ttapePositionList[Math.floor(Math.random() * cntPosition)];\n\ttapeImage.setAttribute(\"style\", chosenPosition);\n\n\ttapeImage.setAttribute(\"src\", `/masking-tapes/tape${tapeType}.svg`);\n\tconsole.log(`${tapeType}`);\n\n\t// if (question.tapeType !== 0) {\n\t// \tconst customizedTape = String(question.tapeType);\n\t// \ttapeImage.setAttribute(\"src\", `/masking-tapes/tape${customizedTape}.svg`);\n\t// \ttapeType = customizedTape;\n\t// } else {\n\t// \tconst chosenTape = tapeList[Math.floor(Math.random() * cntTape)];\n\t// \ttapeImage.setAttribute(\"src\", `/masking-tapes/tape${chosenTape}.svg`);\n\t// \ttapeType = chosenTape;\n\t// }\n\t// });\n\n\tconst noteList = [\"1\", \"2\", \"3\", \"4\"];\n\tconst cntNote = noteList.length;\n\n\tconst noteImages = document.getElementsByClassName(\"question-note\");\n\n\tvar noteImageList = Array.from(noteImages);\n\tnoteImageList.forEach((noteImage) => {\n\t\tnoteImage.setAttribute(\n\t\t\t\"src\",\n\t\t\t`/masking-tapes/tape${question.noteType}.svg`\n\t\t);\n\t\t// if (question.noteType !== 0) {\n\t\t// \tconst customizedNote = String(question.noteType);\n\t\t// \tnoteImage.setAttribute(\n\t\t// \t\t\"style\",\n\t\t// \t\t`/masking-tapes/tape${customizedNote}.svg`\n\t\t// \t);\n\t\t// \tnoteType = customizedNote;\n\t\t// } else {\n\t\t// \tconst chosenNote = noteList[Math.floor(Math.random() * cntNote)];\n\t\t// \t// TODO: note chosenNote로 바꾸기\n\t\t// \tnoteImage.setAttribute(\n\t\t// \t\t\"style\",\n\t\t// \t\t`background-image: url(\"/notes/note1.png\")`\n\t\t// \t);\n\t\t// \t// TODO: note chosenNote로 바꾸기\n\t\t// \tnoteType = \"1\";\n\t\t// }\n\t});\n\n\t// const tapeBoxes = document.getElementsByClassName(\n\t// \t\"QuestionNote-maskingTape-box\"\n\t// );\n\n\t// var tapeBoxList = Array.from(tapeBoxes);\n\t// tapeBoxList.forEach((tapeBox) => {\n\t// \tconsole.log(tapeBox)\n\t// \tvar tapeImage = document.createElement(\"img\");\n\t// \tconst tape = tapeBox.appendChild(tapeImage);\n\n\t// \tvar chosenTape = tapeList[Math.floor(Math.random() * tapeList.length)];\n\t// \ttape.setAttribute(\"src\", `../masking-tapes/${chosenTape}`);\n\t// });\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"question-note\"\n\t\t\tkey={idx}\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url(\"/notes/note1.png\")`,\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"QuestionNote-maskingTape-box\">\n\t\t\t\t<img className=\"QuestionNote-maskingTape-img\" src=\"\" alt=\"\" />\n\t\t\t</div>\n\t\t\t<div className=\"note-header\">\n\t\t\t\t<div className=\"note-profile-pic\">\n\t\t\t\t\t<img src=\"/test-anony-profile-pic.jpg\" alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t{/* <div className=\"note-time\">{nowDate}</div> */}\n\t\t\t\t<NowDate questionUploadTime={question.uploadTime} />\n\t\t\t</div>\n\t\t\t<div className=\"note-content-box\">\n\t\t\t\t<div className=\"note-content\">{question.questionContents}</div>\n\t\t\t</div>\n\t\t\t{question.questionHyperlink == null ||\n\t\t\tquestion.questionHyperlink === \"\" ? undefined : (\n\t\t\t\t<div className=\"QuestionNote-note-hyperlink-box\">\n\t\t\t\t\t<HyperlinkBox hyperlinkContent={question.questionHyperlink} />\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<hr className=\"note-hr\" />\n\t\t\t<QuestionFooter question={question} />\n\t\t</div>\n\t);\n}\n\nexport default QuestionNote;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}