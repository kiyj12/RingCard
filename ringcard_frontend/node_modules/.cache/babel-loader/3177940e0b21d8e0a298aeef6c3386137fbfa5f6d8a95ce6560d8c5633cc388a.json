{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientRequestMaker = void 0;\nvar types_1 = require(\"../types\");\nvar TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nvar helpers_1 = require(\"../plugins/helpers\");\nvar helpers_2 = require(\"../helpers\");\nvar oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\nvar request_handler_helper_1 = __importDefault(require(\"./request-handler.helper\"));\nvar request_param_helper_1 = __importDefault(require(\"./request-param.helper\"));\nvar oauth2_helper_1 = require(\"./oauth2.helper\");\nvar ClientRequestMaker = /*#__PURE__*/function () {\n  function ClientRequestMaker(settings) {\n    _classCallCheck(this, ClientRequestMaker);\n    this.rateLimits = {};\n    this.clientSettings = {};\n    if (settings) {\n      this.clientSettings = settings;\n    }\n  }\n  /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */\n  _createClass(ClientRequestMaker, [{\n    key: \"getRateLimits\",\n    value: function getRateLimits() {\n      return this.rateLimits;\n    }\n  }, {\n    key: \"saveRateLimit\",\n    value: function saveRateLimit(originalUrl, rateLimit) {\n      this.rateLimits[originalUrl] = rateLimit;\n    }\n    /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(requestParams) {\n        var _a, _b, _c, _d, _e, possibleResponse, args, options, enableRateLimitSave, request, response, responseOverride;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length)) {\n                  _context.next = 6;\n                  break;\n                }\n                _context.next = 3;\n                return this.applyPreRequestConfigHooks(requestParams);\n              case 3:\n                possibleResponse = _context.sent;\n                if (!possibleResponse) {\n                  _context.next = 6;\n                  break;\n                }\n                return _context.abrupt(\"return\", possibleResponse);\n              case 6:\n                args = this.getHttpRequestArgs(requestParams);\n                options = {\n                  method: args.method,\n                  headers: args.headers,\n                  timeout: requestParams.timeout,\n                  agent: this.clientSettings.httpAgent\n                };\n                enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n                if (args.body) {\n                  request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n                }\n                // Pre-request hooks\n                if (!((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length)) {\n                  _context.next = 13;\n                  break;\n                }\n                _context.next = 13;\n                return this.applyPreRequestHooks(requestParams, args, options);\n              case 13:\n                request = new request_handler_helper_1.default({\n                  url: args.url,\n                  options: options,\n                  body: args.body,\n                  rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n                  requestEventDebugHandler: requestParams.requestEventDebugHandler,\n                  compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,\n                  forceParseMode: requestParams.forceParseMode\n                }).makeRequest();\n                if ((0, helpers_1.hasRequestErrorPlugins)(this)) {\n                  request = this.applyResponseErrorHooks(requestParams, args, options, request);\n                }\n                _context.next = 17;\n                return request;\n              case 17:\n                response = _context.sent;\n                if (!((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length)) {\n                  _context.next = 24;\n                  break;\n                }\n                _context.next = 21;\n                return this.applyPostRequestHooks(requestParams, args, options, response);\n              case 21:\n                responseOverride = _context.sent;\n                if (!responseOverride) {\n                  _context.next = 24;\n                  break;\n                }\n                return _context.abrupt(\"return\", responseOverride.value);\n              case 24:\n                return _context.abrupt(\"return\", response);\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function send(_x) {\n        return _send.apply(this, arguments);\n      }\n      return send;\n    }()\n  }, {\n    key: \"sendStream\",\n    value: function sendStream(requestParams) {\n      var _a, _b;\n      // Pre-request hooks\n      if (this.clientSettings.plugins) {\n        this.applyPreStreamRequestConfigHooks(requestParams);\n      }\n      var args = this.getHttpRequestArgs(requestParams);\n      var options = {\n        method: args.method,\n        headers: args.headers,\n        agent: this.clientSettings.httpAgent\n      };\n      var enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n      var enableAutoConnect = requestParams.autoConnect !== false;\n      if (args.body) {\n        request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n      }\n      var requestData = {\n        url: args.url,\n        options: options,\n        body: args.body,\n        rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n        payloadIsError: requestParams.payloadIsError,\n        compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true\n      };\n      var stream = new TweetStream_1.default(requestData);\n      if (!enableAutoConnect) {\n        return stream;\n      }\n      return stream.connect();\n    }\n    /* Token helpers */\n  }, {\n    key: \"initializeToken\",\n    value: function initializeToken(token) {\n      if (typeof token === 'string') {\n        this.bearerToken = token;\n      } else if (typeof token === 'object' && 'appKey' in token) {\n        this.consumerToken = token.appKey;\n        this.consumerSecret = token.appSecret;\n        if (token.accessToken && token.accessSecret) {\n          this.accessToken = token.accessToken;\n          this.accessSecret = token.accessSecret;\n        }\n        this._oauth = this.buildOAuth();\n      } else if (typeof token === 'object' && 'username' in token) {\n        var key = encodeURIComponent(token.username) + ':' + encodeURIComponent(token.password);\n        this.basicToken = Buffer.from(key).toString('base64');\n      } else if (typeof token === 'object' && 'clientId' in token) {\n        this.clientId = token.clientId;\n        this.clientSecret = token.clientSecret;\n      }\n    }\n  }, {\n    key: \"getActiveTokens\",\n    value: function getActiveTokens() {\n      if (this.bearerToken) {\n        return {\n          type: 'oauth2',\n          bearerToken: this.bearerToken\n        };\n      } else if (this.basicToken) {\n        return {\n          type: 'basic',\n          token: this.basicToken\n        };\n      } else if (this.consumerSecret && this._oauth) {\n        return {\n          type: 'oauth-1.0a',\n          appKey: this.consumerToken,\n          appSecret: this.consumerSecret,\n          accessToken: this.accessToken,\n          accessSecret: this.accessSecret\n        };\n      } else if (this.clientId) {\n        return {\n          type: 'oauth2-user',\n          clientId: this.clientId\n        };\n      }\n      return {\n        type: 'none'\n      };\n    }\n  }, {\n    key: \"buildOAuth\",\n    value: function buildOAuth() {\n      if (!this.consumerSecret || !this.consumerToken) throw new Error('Invalid consumer tokens');\n      return new oauth1_helper_1.default({\n        consumerKeys: {\n          key: this.consumerToken,\n          secret: this.consumerSecret\n        }\n      });\n    }\n  }, {\n    key: \"getOAuthAccessTokens\",\n    value: function getOAuthAccessTokens() {\n      if (!this.accessSecret || !this.accessToken) return;\n      return {\n        key: this.accessToken,\n        secret: this.accessSecret\n      };\n    }\n    /* Plugin helpers */\n  }, {\n    key: \"getPlugins\",\n    value: function getPlugins() {\n      var _a;\n      return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];\n    }\n  }, {\n    key: \"hasPlugins\",\n    value: function hasPlugins() {\n      var _a;\n      return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);\n    }\n  }, {\n    key: \"applyPluginMethod\",\n    value: function () {\n      var _applyPluginMethod = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(method, args) {\n        var _a, returnValue, _iterator, _step, plugin, value;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _iterator = _createForOfIteratorHelper(this.getPlugins());\n                _context2.prev = 1;\n                _iterator.s();\n              case 3:\n                if ((_step = _iterator.n()).done) {\n                  _context2.next = 11;\n                  break;\n                }\n                plugin = _step.value;\n                _context2.next = 7;\n                return (_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args);\n              case 7:\n                value = _context2.sent;\n                if (value && value instanceof types_1.TwitterApiPluginResponseOverride) {\n                  returnValue = value;\n                }\n              case 9:\n                _context2.next = 3;\n                break;\n              case 11:\n                _context2.next = 16;\n                break;\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](1);\n                _iterator.e(_context2.t0);\n              case 16:\n                _context2.prev = 16;\n                _iterator.f();\n                return _context2.finish(16);\n              case 19:\n                return _context2.abrupt(\"return\", returnValue);\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 13, 16, 19]]);\n      }));\n      function applyPluginMethod(_x2, _x3) {\n        return _applyPluginMethod.apply(this, arguments);\n      }\n      return applyPluginMethod;\n    }() /* Request helpers */\n  }, {\n    key: \"writeAuthHeaders\",\n    value: function writeAuthHeaders(_ref) {\n      var headers = _ref.headers,\n        bodyInSignature = _ref.bodyInSignature,\n        url = _ref.url,\n        method = _ref.method,\n        query = _ref.query,\n        body = _ref.body;\n      headers = _objectSpread({}, headers);\n      if (this.bearerToken) {\n        headers.Authorization = 'Bearer ' + this.bearerToken;\n      } else if (this.basicToken) {\n        // Basic auth, to request a bearer token\n        headers.Authorization = 'Basic ' + this.basicToken;\n      } else if (this.clientId && this.clientSecret) {\n        // Basic auth with clientId + clientSecret\n        headers.Authorization = 'Basic ' + oauth2_helper_1.OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);\n      } else if (this.consumerSecret && this._oauth) {\n        // Merge query and body\n        var data = bodyInSignature ? request_param_helper_1.default.mergeQueryAndBodyForOAuth(query, body) : query;\n        var auth = this._oauth.authorize({\n          url: url.toString(),\n          method: method,\n          data: data\n        }, this.getOAuthAccessTokens());\n        headers = _objectSpread(_objectSpread({}, headers), this._oauth.toHeader(auth));\n      }\n      return headers;\n    }\n  }, {\n    key: \"getUrlObjectFromUrlString\",\n    value: function getUrlObjectFromUrlString(url) {\n      // Add protocol to URL if needed\n      if (!url.startsWith('http')) {\n        url = 'https://' + url;\n      }\n      // Convert URL to object that will receive all URL modifications\n      return new URL(url);\n    }\n  }, {\n    key: \"getHttpRequestArgs\",\n    value: function getHttpRequestArgs(_ref2) {\n      var stringUrl = _ref2.url,\n        method = _ref2.method,\n        _ref2$query = _ref2.query,\n        rawQuery = _ref2$query === void 0 ? {} : _ref2$query,\n        _ref2$body = _ref2.body,\n        rawBody = _ref2$body === void 0 ? {} : _ref2$body,\n        headers = _ref2.headers,\n        forceBodyMode = _ref2.forceBodyMode,\n        enableAuth = _ref2.enableAuth,\n        params = _ref2.params;\n      var body = undefined;\n      method = method.toUpperCase();\n      headers = headers !== null && headers !== void 0 ? headers : {};\n      // Add user agent header (Twitter recommends it)\n      if (!headers['x-user-agent']) {\n        headers['x-user-agent'] = 'Node.twitter-api-v2';\n      }\n      var url = this.getUrlObjectFromUrlString(stringUrl);\n      // URL without query string to save as endpoint name\n      var rawUrl = url.origin + url.pathname;\n      // Apply URL parameters\n      if (params) {\n        request_param_helper_1.default.applyRequestParametersToUrl(url, params);\n      }\n      // Build a URL without anything in QS, and QSP in query\n      var query = request_param_helper_1.default.formatQueryToString(rawQuery);\n      request_param_helper_1.default.moveUrlQueryParamsIntoObject(url, query);\n      // Delete undefined parameters\n      if (!(rawBody instanceof Buffer)) {\n        (0, helpers_2.trimUndefinedProperties)(rawBody);\n      }\n      // OAuth signature should not include parameters when using multipart.\n      var bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : request_param_helper_1.default.autoDetectBodyType(url);\n      // If undefined or true, enable auth by headers\n      if (enableAuth !== false) {\n        // OAuth needs body signature only if body is URL encoded.\n        var bodyInSignature = ClientRequestMaker.BODY_METHODS.has(method) && bodyType === 'url';\n        headers = this.writeAuthHeaders({\n          headers: headers,\n          bodyInSignature: bodyInSignature,\n          method: method,\n          query: query,\n          url: url,\n          body: rawBody\n        });\n      }\n      if (ClientRequestMaker.BODY_METHODS.has(method)) {\n        body = request_param_helper_1.default.constructBodyParams(rawBody, headers, bodyType) || undefined;\n      }\n      request_param_helper_1.default.addQueryParamsToUrl(url, query);\n      return {\n        rawUrl: rawUrl,\n        url: url,\n        method: method,\n        headers: headers,\n        body: body\n      };\n    }\n    /* Plugin helpers */\n  }, {\n    key: \"applyPreRequestConfigHooks\",\n    value: function () {\n      var _applyPreRequestConfigHooks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(requestParams) {\n        var _a, url, _iterator2, _step2, plugin, result;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                url = this.getUrlObjectFromUrlString(requestParams.url);\n                _iterator2 = _createForOfIteratorHelper(this.getPlugins());\n                _context3.prev = 2;\n                _iterator2.s();\n              case 4:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context3.next = 13;\n                  break;\n                }\n                plugin = _step2.value;\n                _context3.next = 8;\n                return (_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                  client: this,\n                  url: url,\n                  params: requestParams\n                });\n              case 8:\n                result = _context3.sent;\n                if (!result) {\n                  _context3.next = 11;\n                  break;\n                }\n                return _context3.abrupt(\"return\", result);\n              case 11:\n                _context3.next = 4;\n                break;\n              case 13:\n                _context3.next = 18;\n                break;\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](2);\n                _iterator2.e(_context3.t0);\n              case 18:\n                _context3.prev = 18;\n                _iterator2.f();\n                return _context3.finish(18);\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 15, 18, 21]]);\n      }));\n      function applyPreRequestConfigHooks(_x4) {\n        return _applyPreRequestConfigHooks.apply(this, arguments);\n      }\n      return applyPreRequestConfigHooks;\n    }()\n  }, {\n    key: \"applyPreStreamRequestConfigHooks\",\n    value: function applyPreStreamRequestConfigHooks(requestParams) {\n      var _a;\n      var url = this.getUrlObjectFromUrlString(requestParams.url);\n      var _iterator3 = _createForOfIteratorHelper(this.getPlugins()),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var plugin = _step3.value;\n          (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n            client: this,\n            url: url,\n            params: requestParams\n          });\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"applyPreRequestHooks\",\n    value: function () {\n      var _applyPreRequestHooks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(requestParams, computedParams, requestOptions) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.applyPluginMethod('onBeforeRequest', {\n                  client: this,\n                  url: this.getUrlObjectFromUrlString(requestParams.url),\n                  params: requestParams,\n                  computedParams: computedParams,\n                  requestOptions: requestOptions\n                });\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function applyPreRequestHooks(_x5, _x6, _x7) {\n        return _applyPreRequestHooks.apply(this, arguments);\n      }\n      return applyPreRequestHooks;\n    }()\n  }, {\n    key: \"applyPostRequestHooks\",\n    value: function () {\n      var _applyPostRequestHooks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(requestParams, computedParams, requestOptions, response) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.applyPluginMethod('onAfterRequest', {\n                  client: this,\n                  url: this.getUrlObjectFromUrlString(requestParams.url),\n                  params: requestParams,\n                  computedParams: computedParams,\n                  requestOptions: requestOptions,\n                  response: response\n                });\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent);\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function applyPostRequestHooks(_x8, _x9, _x10, _x11) {\n        return _applyPostRequestHooks.apply(this, arguments);\n      }\n      return applyPostRequestHooks;\n    }()\n  }, {\n    key: \"applyResponseErrorHooks\",\n    value: function applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {\n      return promise.catch(helpers_1.applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));\n    }\n  }]);\n  return ClientRequestMaker;\n}();\nexports.ClientRequestMaker = ClientRequestMaker;\nClientRequestMaker.BODY_METHODS = new Set(['POST', 'PUT', 'PATCH']);","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ClientRequestMaker","types_1","require","TweetStream_1","helpers_1","helpers_2","oauth1_helper_1","request_handler_helper_1","request_param_helper_1","oauth2_helper_1","settings","rateLimits","clientSettings","originalUrl","rateLimit","requestParams","_a","plugins","length","applyPreRequestConfigHooks","possibleResponse","args","getHttpRequestArgs","options","method","headers","timeout","agent","httpAgent","enableRateLimitSave","body","default","setBodyLengthHeader","_b","applyPreRequestHooks","request","url","rateLimitSaver","saveRateLimit","bind","rawUrl","undefined","requestEventDebugHandler","compression","_d","_c","forceParseMode","makeRequest","hasRequestErrorPlugins","applyResponseErrorHooks","response","_e","applyPostRequestHooks","responseOverride","applyPreStreamRequestConfigHooks","enableAutoConnect","autoConnect","requestData","payloadIsError","stream","connect","token","bearerToken","consumerToken","appKey","consumerSecret","appSecret","accessToken","accessSecret","_oauth","buildOAuth","key","encodeURIComponent","username","password","basicToken","Buffer","from","toString","clientId","clientSecret","type","Error","consumerKeys","secret","getPlugins","plugin","call","TwitterApiPluginResponseOverride","returnValue","bodyInSignature","query","Authorization","OAuth2Helper","getAuthHeader","data","mergeQueryAndBodyForOAuth","auth","authorize","getOAuthAccessTokens","toHeader","startsWith","URL","stringUrl","rawQuery","rawBody","forceBodyMode","enableAuth","params","toUpperCase","getUrlObjectFromUrlString","origin","pathname","applyRequestParametersToUrl","formatQueryToString","moveUrlQueryParamsIntoObject","trimUndefinedProperties","bodyType","autoDetectBodyType","BODY_METHODS","has","writeAuthHeaders","constructBodyParams","addQueryParamsToUrl","onBeforeRequestConfig","client","result","onBeforeStreamRequestConfig","computedParams","requestOptions","applyPluginMethod","promise","catch","applyResponseHooks","Set"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/twitter-api-v2/dist/client-mixins/request-maker.mixin.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientRequestMaker = void 0;\nconst types_1 = require(\"../types\");\nconst TweetStream_1 = __importDefault(require(\"../stream/TweetStream\"));\nconst helpers_1 = require(\"../plugins/helpers\");\nconst helpers_2 = require(\"../helpers\");\nconst oauth1_helper_1 = __importDefault(require(\"./oauth1.helper\"));\nconst request_handler_helper_1 = __importDefault(require(\"./request-handler.helper\"));\nconst request_param_helper_1 = __importDefault(require(\"./request-param.helper\"));\nconst oauth2_helper_1 = require(\"./oauth2.helper\");\nclass ClientRequestMaker {\n    constructor(settings) {\n        this.rateLimits = {};\n        this.clientSettings = {};\n        if (settings) {\n            this.clientSettings = settings;\n        }\n    }\n    /** @deprecated - Switch to `@twitter-api-v2/plugin-rate-limit` */\n    getRateLimits() {\n        return this.rateLimits;\n    }\n    saveRateLimit(originalUrl, rateLimit) {\n        this.rateLimits[originalUrl] = rateLimit;\n    }\n    /** Send a new request and returns a wrapped `Promise<TwitterResponse<T>`. */\n    async send(requestParams) {\n        var _a, _b, _c, _d, _e;\n        // Pre-request config hooks\n        if ((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length) {\n            const possibleResponse = await this.applyPreRequestConfigHooks(requestParams);\n            if (possibleResponse) {\n                return possibleResponse;\n            }\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            timeout: requestParams.timeout,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        // Pre-request hooks\n        if ((_b = this.clientSettings.plugins) === null || _b === void 0 ? void 0 : _b.length) {\n            await this.applyPreRequestHooks(requestParams, args, options);\n        }\n        let request = new request_handler_helper_1.default({\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            requestEventDebugHandler: requestParams.requestEventDebugHandler,\n            compression: (_d = (_c = requestParams.compression) !== null && _c !== void 0 ? _c : this.clientSettings.compression) !== null && _d !== void 0 ? _d : true,\n            forceParseMode: requestParams.forceParseMode,\n        })\n            .makeRequest();\n        if ((0, helpers_1.hasRequestErrorPlugins)(this)) {\n            request = this.applyResponseErrorHooks(requestParams, args, options, request);\n        }\n        const response = await request;\n        // Post-request hooks\n        if ((_e = this.clientSettings.plugins) === null || _e === void 0 ? void 0 : _e.length) {\n            const responseOverride = await this.applyPostRequestHooks(requestParams, args, options, response);\n            if (responseOverride) {\n                return responseOverride.value;\n            }\n        }\n        return response;\n    }\n    sendStream(requestParams) {\n        var _a, _b;\n        // Pre-request hooks\n        if (this.clientSettings.plugins) {\n            this.applyPreStreamRequestConfigHooks(requestParams);\n        }\n        const args = this.getHttpRequestArgs(requestParams);\n        const options = {\n            method: args.method,\n            headers: args.headers,\n            agent: this.clientSettings.httpAgent,\n        };\n        const enableRateLimitSave = requestParams.enableRateLimitSave !== false;\n        const enableAutoConnect = requestParams.autoConnect !== false;\n        if (args.body) {\n            request_param_helper_1.default.setBodyLengthHeader(options, args.body);\n        }\n        const requestData = {\n            url: args.url,\n            options,\n            body: args.body,\n            rateLimitSaver: enableRateLimitSave ? this.saveRateLimit.bind(this, args.rawUrl) : undefined,\n            payloadIsError: requestParams.payloadIsError,\n            compression: (_b = (_a = requestParams.compression) !== null && _a !== void 0 ? _a : this.clientSettings.compression) !== null && _b !== void 0 ? _b : true,\n        };\n        const stream = new TweetStream_1.default(requestData);\n        if (!enableAutoConnect) {\n            return stream;\n        }\n        return stream.connect();\n    }\n    /* Token helpers */\n    initializeToken(token) {\n        if (typeof token === 'string') {\n            this.bearerToken = token;\n        }\n        else if (typeof token === 'object' && 'appKey' in token) {\n            this.consumerToken = token.appKey;\n            this.consumerSecret = token.appSecret;\n            if (token.accessToken && token.accessSecret) {\n                this.accessToken = token.accessToken;\n                this.accessSecret = token.accessSecret;\n            }\n            this._oauth = this.buildOAuth();\n        }\n        else if (typeof token === 'object' && 'username' in token) {\n            const key = encodeURIComponent(token.username) + ':' + encodeURIComponent(token.password);\n            this.basicToken = Buffer.from(key).toString('base64');\n        }\n        else if (typeof token === 'object' && 'clientId' in token) {\n            this.clientId = token.clientId;\n            this.clientSecret = token.clientSecret;\n        }\n    }\n    getActiveTokens() {\n        if (this.bearerToken) {\n            return {\n                type: 'oauth2',\n                bearerToken: this.bearerToken,\n            };\n        }\n        else if (this.basicToken) {\n            return {\n                type: 'basic',\n                token: this.basicToken,\n            };\n        }\n        else if (this.consumerSecret && this._oauth) {\n            return {\n                type: 'oauth-1.0a',\n                appKey: this.consumerToken,\n                appSecret: this.consumerSecret,\n                accessToken: this.accessToken,\n                accessSecret: this.accessSecret,\n            };\n        }\n        else if (this.clientId) {\n            return {\n                type: 'oauth2-user',\n                clientId: this.clientId,\n            };\n        }\n        return { type: 'none' };\n    }\n    buildOAuth() {\n        if (!this.consumerSecret || !this.consumerToken)\n            throw new Error('Invalid consumer tokens');\n        return new oauth1_helper_1.default({\n            consumerKeys: { key: this.consumerToken, secret: this.consumerSecret },\n        });\n    }\n    getOAuthAccessTokens() {\n        if (!this.accessSecret || !this.accessToken)\n            return;\n        return {\n            key: this.accessToken,\n            secret: this.accessSecret,\n        };\n    }\n    /* Plugin helpers */\n    getPlugins() {\n        var _a;\n        return (_a = this.clientSettings.plugins) !== null && _a !== void 0 ? _a : [];\n    }\n    hasPlugins() {\n        var _a;\n        return !!((_a = this.clientSettings.plugins) === null || _a === void 0 ? void 0 : _a.length);\n    }\n    async applyPluginMethod(method, args) {\n        var _a;\n        let returnValue;\n        for (const plugin of this.getPlugins()) {\n            const value = await ((_a = plugin[method]) === null || _a === void 0 ? void 0 : _a.call(plugin, args));\n            if (value && value instanceof types_1.TwitterApiPluginResponseOverride) {\n                returnValue = value;\n            }\n        }\n        return returnValue;\n    }\n    /* Request helpers */\n    writeAuthHeaders({ headers, bodyInSignature, url, method, query, body }) {\n        headers = { ...headers };\n        if (this.bearerToken) {\n            headers.Authorization = 'Bearer ' + this.bearerToken;\n        }\n        else if (this.basicToken) {\n            // Basic auth, to request a bearer token\n            headers.Authorization = 'Basic ' + this.basicToken;\n        }\n        else if (this.clientId && this.clientSecret) {\n            // Basic auth with clientId + clientSecret\n            headers.Authorization = 'Basic ' + oauth2_helper_1.OAuth2Helper.getAuthHeader(this.clientId, this.clientSecret);\n        }\n        else if (this.consumerSecret && this._oauth) {\n            // Merge query and body\n            const data = bodyInSignature ? request_param_helper_1.default.mergeQueryAndBodyForOAuth(query, body) : query;\n            const auth = this._oauth.authorize({\n                url: url.toString(),\n                method,\n                data,\n            }, this.getOAuthAccessTokens());\n            headers = { ...headers, ...this._oauth.toHeader(auth) };\n        }\n        return headers;\n    }\n    getUrlObjectFromUrlString(url) {\n        // Add protocol to URL if needed\n        if (!url.startsWith('http')) {\n            url = 'https://' + url;\n        }\n        // Convert URL to object that will receive all URL modifications\n        return new URL(url);\n    }\n    getHttpRequestArgs({ url: stringUrl, method, query: rawQuery = {}, body: rawBody = {}, headers, forceBodyMode, enableAuth, params, }) {\n        let body = undefined;\n        method = method.toUpperCase();\n        headers = headers !== null && headers !== void 0 ? headers : {};\n        // Add user agent header (Twitter recommends it)\n        if (!headers['x-user-agent']) {\n            headers['x-user-agent'] = 'Node.twitter-api-v2';\n        }\n        const url = this.getUrlObjectFromUrlString(stringUrl);\n        // URL without query string to save as endpoint name\n        const rawUrl = url.origin + url.pathname;\n        // Apply URL parameters\n        if (params) {\n            request_param_helper_1.default.applyRequestParametersToUrl(url, params);\n        }\n        // Build a URL without anything in QS, and QSP in query\n        const query = request_param_helper_1.default.formatQueryToString(rawQuery);\n        request_param_helper_1.default.moveUrlQueryParamsIntoObject(url, query);\n        // Delete undefined parameters\n        if (!(rawBody instanceof Buffer)) {\n            (0, helpers_2.trimUndefinedProperties)(rawBody);\n        }\n        // OAuth signature should not include parameters when using multipart.\n        const bodyType = forceBodyMode !== null && forceBodyMode !== void 0 ? forceBodyMode : request_param_helper_1.default.autoDetectBodyType(url);\n        // If undefined or true, enable auth by headers\n        if (enableAuth !== false) {\n            // OAuth needs body signature only if body is URL encoded.\n            const bodyInSignature = ClientRequestMaker.BODY_METHODS.has(method) && bodyType === 'url';\n            headers = this.writeAuthHeaders({ headers, bodyInSignature, method, query, url, body: rawBody });\n        }\n        if (ClientRequestMaker.BODY_METHODS.has(method)) {\n            body = request_param_helper_1.default.constructBodyParams(rawBody, headers, bodyType) || undefined;\n        }\n        request_param_helper_1.default.addQueryParamsToUrl(url, query);\n        return {\n            rawUrl,\n            url,\n            method,\n            headers,\n            body,\n        };\n    }\n    /* Plugin helpers */\n    async applyPreRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            const result = await ((_a = plugin.onBeforeRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            }));\n            if (result) {\n                return result;\n            }\n        }\n    }\n    applyPreStreamRequestConfigHooks(requestParams) {\n        var _a;\n        const url = this.getUrlObjectFromUrlString(requestParams.url);\n        for (const plugin of this.getPlugins()) {\n            (_a = plugin.onBeforeStreamRequestConfig) === null || _a === void 0 ? void 0 : _a.call(plugin, {\n                client: this,\n                url,\n                params: requestParams,\n            });\n        }\n    }\n    async applyPreRequestHooks(requestParams, computedParams, requestOptions) {\n        await this.applyPluginMethod('onBeforeRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n        });\n    }\n    async applyPostRequestHooks(requestParams, computedParams, requestOptions, response) {\n        return await this.applyPluginMethod('onAfterRequest', {\n            client: this,\n            url: this.getUrlObjectFromUrlString(requestParams.url),\n            params: requestParams,\n            computedParams,\n            requestOptions,\n            response,\n        });\n    }\n    applyResponseErrorHooks(requestParams, computedParams, requestOptions, promise) {\n        return promise.catch(helpers_1.applyResponseHooks.bind(this, requestParams, computedParams, requestOptions));\n    }\n}\nexports.ClientRequestMaker = ClientRequestMaker;\nClientRequestMaker.BODY_METHODS = new Set(['POST', 'PUT', 'PATCH']);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}