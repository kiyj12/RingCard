{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\login\\\\Oauth2.tsx\";\nimport React from \"react\";\nimport TwitterLogin from \"react-twitter-login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Oauth2 = () => {\n  const authHandler = (err, data) => {\n    console.log(err, data);\n  };\n\n  // const [user, setUser] = useState<any>([]);\n\n  // useEffect(() => {\n  // \taxios\n  // \t\t.get(\"/oauth2\")\n  // \t\t.then((res) => {\n  // \t\t\tsetUser(res.data);\n  // \t\t\tconsole.log(res.data);\n  // \t\t})\n  // \t\t.catch((err) => {\n  // \t\t\tconsole.log(err.config);\n  // \t\t\tconsole.log(err.response.data);\n  // \t\t});\n  // }, []);\n\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\n\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\n\n  // Consuming a Stream\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function OauthTwitter() {\n  //     const stream = client.tweets.sampleStream({\n  //       \"tweet.fields\": [\"author_id\"],\n  //     });\n  //     for await (const tweet of stream) {\n  //       console.log(tweet.data?.author_id);\n  //     }\n\n  //     return(null);\n  //   }\n  //   return(<div><OauthTwitter/></div>)\n  // }\n\n  // Getting a Tweet\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function GettingATweet() {\n  //     const tweet = await client.tweets.findTweetById(\"20\");\n  //     // console.log(tweet.data.text);\n  //     console.log(tweet);\n  //   }\n\n  //     return(null);\n  // }\n\n  // oauth2-bearer.ts \n  // if(BEARER_TOKEN){\n  //   async function Oauth2Bearer() {\n  //     const client = new Client(BEARER_TOKEN);\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n  //     if (!data) throw new Error(\"Couldn't find user\");\n  //     let count = 0;\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\n  //       console.log(followers);\n  //       if (++count === 3) {\n  //         break;\n  //       }\n  //     }\n  //     return (<div></div>);\n  //   }\n  // }\n\n  // if(BEARER_TOKEN){\n  //     const client = new Client(BEARER_TOKEN);\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n  //     if (!data) throw new Error(\"Couldn't find user\");\n  //     let count = 0;\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\n  //       console.log(followers);\n  //       if (++count === 3) {\n  //         break;\n  //       }\n  //     }\n  //     return (<div></div>);\n  // }\n\n  const CONSUMER_KEY = process.env.REACT_APP_CONSUMER_KEY;\n  const CONSUMER_SECRET = process.env.REACT_APP_CONSUMER_SECRET;\n  function TestOauth() {\n    if (CONSUMER_KEY && CONSUMER_SECRET) {\n      return /*#__PURE__*/_jsxDEV(TwitterLogin, {\n        authCallback: authHandler,\n        consumerKey: CONSUMER_KEY,\n        consumerSecret: CONSUMER_SECRET\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 46\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }, this);\n    }\n  }\n  // return (<p>1<GettingATweet/></p>)\n  return /*#__PURE__*/_jsxDEV(TestOauth, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_c = Oauth2;\nexport default Oauth2;\nvar _c;\n$RefreshReg$(_c, \"Oauth2\");","map":{"version":3,"names":["React","TwitterLogin","Oauth2","authHandler","err","data","console","log","CONSUMER_KEY","process","env","REACT_APP_CONSUMER_KEY","CONSUMER_SECRET","REACT_APP_CONSUMER_SECRET","TestOauth"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Oauth2.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TwitterLogin from \"react-twitter-login\";\r\nimport { Client } from \"twitter-api-sdk\";\r\nimport { TwitterApi } from 'twitter-api-v2';\r\n\r\nconst Oauth2=()=>{\r\n\r\n\r\n  const authHandler = (err:any, data:any) => {\r\n    console.log(err, data);\r\n  };\r\n\r\n  // const [user, setUser] = useState<any>([]);\r\n  \r\n  // useEffect(() => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/oauth2\")\r\n\t// \t\t.then((res) => {\r\n\t// \t\t\tsetUser(res.data);\r\n\t// \t\t\tconsole.log(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err.config);\r\n\t// \t\t\tconsole.log(err.response.data);\r\n\t// \t\t});\r\n\t// }, []);\r\n\r\n\r\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\r\n\r\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n  // oauth2-bearer.ts \r\n  // if(BEARER_TOKEN){\r\n  //   async function Oauth2Bearer() {\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  //   }\r\n  // }\r\n\r\n  // if(BEARER_TOKEN){\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  // }\r\n\r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  function TestOauth(){\r\n    if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\r\n      authCallback={authHandler}\r\n      consumerKey={CONSUMER_KEY}\r\n      consumerSecret={CONSUMER_SECRET}\r\n    />)}\r\n    else{\r\n      return(<div></div>)\r\n    }\r\n  }\r\n  // return (<p>1<GettingATweet/></p>)\r\n  return (\r\n    <TestOauth/>\r\n  );\r\n}\r\n\r\nexport default Oauth2;"],"mappings":";AACA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAAC;AAI/C,MAAMC,MAAM,GAAC,MAAI;EAGf,MAAMC,WAAW,GAAG,CAACC,GAAO,EAAEC,IAAQ,KAAK;IACzCC,OAAO,CAACC,GAAG,CAACH,GAAG,EAAEC,IAAI,CAAC;EACxB,CAAC;;EAED;;EAEA;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGC;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,YAAY,GAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACrD,MAAMC,eAAe,GAACH,OAAO,CAACC,GAAG,CAACG,yBAAyB;EAC3D,SAASC,SAAS,GAAE;IAClB,IAAGN,YAAY,IAAEI,eAAe,EAAC;MAAC,oBAAO,QAAC,YAAY;QACpD,YAAY,EAAET,WAAY;QAC1B,WAAW,EAAEK,YAAa;QAC1B,cAAc,EAAEI;MAAgB;QAAA;QAAA;QAAA;MAAA,QAChC;IAAC,CAAC,MACA;MACF,oBAAO;QAAA;QAAA;QAAA;MAAA,QAAW;IACpB;EACF;EACA;EACA,oBACE,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA,QAAE;AAEhB,CAAC;AAAA,KA1GKV,MAAM;AA4GZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}