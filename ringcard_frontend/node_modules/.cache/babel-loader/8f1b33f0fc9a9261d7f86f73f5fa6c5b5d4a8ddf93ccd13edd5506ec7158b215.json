{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx\";\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionNoteList(props) {\n  const QandAmap = props.map;\n  console.log(QandAmap);\n  console.log(QandAmap[0]);\n  // answerList.forEach(AnswerForTheQuestion);\n  // const answer = answerList.find(AnswerForTheQuestion(question));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: QandAmap.map((QA, idx) =>\n    /*#__PURE__*/\n    // answerList.find(a => a.questionId === question.id);\n    _jsxDEV(QuestionNoteAnony, {\n      idx: idx,\n      question: QA[0],\n      answer: QA[1]\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n}\n_c = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c;\n$RefreshReg$(_c, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNoteAnony","React","QuestionNoteList","props","QandAmap","map","console","log","QA","idx"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tmap: [[IQuestion, IAnswer]];\n}\n\nfunction QuestionNoteList(props: Props) {\n\tconst QandAmap = props.map;\n\tconsole.log(QandAmap);\n\tconsole.log(QandAmap[0]);\n\t// answerList.forEach(AnswerForTheQuestion);\n\t// const answer = answerList.find(AnswerForTheQuestion(question));\n\treturn (\n\t\t<>\n\t\t\t{/* <div className=\"question-notes-container\"> */}\n\t\t\t{QandAmap.map((QA, idx) => (\n\t\t\t\t// answerList.find(a => a.questionId === question.id);\n\n\t\t\t\t<QuestionNoteAnony\n\t\t\t\t\tkey={idx}\n\t\t\t\t\tidx={idx}\n\t\t\t\t\tquestion={QA[0]}\n\t\t\t\t\tanswer={QA[1]}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t{/* </div> */}\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":";AAMA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAM1B,SAASC,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;EAC1BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxB;EACA;EACA,oBACC;IAAA,UAEEA,QAAQ,CAACC,GAAG,CAAC,CAACG,EAAE,EAAEC,GAAG;IAAA;IACrB;IAEA,QAAC,iBAAiB;MAEjB,GAAG,EAAEA,GAAI;MACT,QAAQ,EAAED,EAAE,CAAC,CAAC,CAAE;MAChB,MAAM,EAAEA,EAAE,CAAC,CAAC;IAAE,GAHTC,GAAG;MAAA;MAAA;MAAA;IAAA,QAKT;EAAC,iBAEA;AAEL;AAAC,KAtBQP,gBAAgB;AAwBzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}