{"ast":null,"code":"import _objectSpread from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import axios from\"axios\";import\"../../styles/layout/layout.css\";import\"../../styles/layout/header.css\";import\"../../styles/user/userBox.css\";import\"../../styles/user/userIcon.css\";import\"../../styles/user/userHeader.css\";import\"../../styles/layout/reactToast.css\";import\"../../styles/login.css\";import HeaderRingca from\"../../components/HeaderRingca\";import{useForm}from\"react-hook-form\";// import Toastify from \"../../components/Toast\";\n// import { Client, auth } from \"twitter-api-sdk\";\n// import express from \"express\";\n// import dotenv from \"dotenv\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var Twitter=require('twitter');var client=new Twitter({consumer_key:'S0FVySANFNnlISMw5D1vSE8P0',consumer_secret:'KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X',access_token_key:'1516353113430851586-BikPyEoaehv4mDqSnCLc5mMQGuigeR',access_token_secret:'zReOE8IWZ5wbGnPC4D8AClbBqc1hXhDQZcbBf2OOar2vw'});function tweetPost(content){client.post('statuses/update',{status:content},function(error,tweet,response){if(!error){console.log(\"tweet success: \"+content);}else{console.log(error);}});}// dotenv.config();\n// const app = express();\n// const authClient = new auth.OAuth2User({\n//   client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\n//   client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\n//   callback: \"https://127.0.0.1:3000/callback\",\n//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\n// });\n// // const authClient = new auth.OAuth2User({\n// //   client_id: process.env.CLIENT_ID as string,\n// //   client_secret: process.env.CLIENT_SECRET as string,\n// //   callback: \"https://127.0.0.1:3000/callback\",\n// //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\n// // });\n// const client = new Client(authClient);\n// const STATE = \"my-state\";\n// app.get(\"/callback\", async function (req, res) {\n//   try {\n//     const { code, state } = req.query;\n//     if (state !== STATE) return res.status(500).send(\"State isn't matching\");\n//     await authClient.requestAccessToken(code as string);\n//     res.redirect(\"/tweets\");\n//   } catch (error) {\n//     console.log(error);\n//   }\n// });\n// app.get(\"/login\", async function (req, res) {\n//   const authUrl = authClient.generateAuthURL({\n//     state: STATE,\n//     code_challenge_method: \"plain\",\n//     code_challenge: \"test\",\n//   });\n//   res.redirect(authUrl);\n// });\n// app.get(\"/tweets\", async function (req, res) {\n//   try {\n//     const tweets = await client.tweets.findTweetById(\"20\");\n//     res.send(tweets);\n//   } catch (error) {\n//     console.log(\"tweets error\", error);\n//   }\n// });\n// app.get(\"/revoke\", async function (req, res) {\n//   try {\n//     const response = await authClient.revokeAccessToken();\n//     res.send(response);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// });\n// app.listen(3000, () => {\n//   console.log(`Go here to login: http://127.0.0.1:3000/login`);\n// });\n// \t// toastify 알람 실행 함수 만들기\n//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", { \n// \t\tautoClose: 700,\n// \t\tposition:\"top-center\", \n// \t\tpauseOnFocusLoss: true,\n// \t\thideProgressBar: true,\n// \t\tdraggable: true, \n// \t\tpauseOnHover: true,\n// \t\ttheme: \"dark\",\n// \t\tcloseButton: false,\n// \t\ttransition: Zoom,\n// \t\t// onOpen: () => window.alert('Called when I open'),\n// \t\t// onClose: () => window.alert('Called when I close')\n// })\nvar _useState=useState({bindingResultHasErrors:false,overlappedUsername:false}),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];// submitted==true여야 새로고침 되도록.\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitted=_useState4[0],setSubmitted=_useState4[1];var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(r){return setTimeout(r,100);});case 2:// alert(JSON.stringify(data));\nconsole.log(data);_context.next=5;return axios.post(\"/loginForm\",data).then(function(res){console.log(\"postHere\");console.log(data);setResponse(res.data);console.log(res.data);setSubmitted(true);}).catch(function(error){console.log(error.config);});case 5:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();function RedirectAndInputErrors(){if(response.bindingResultHasErrors&&response.overlappedUsername){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"overlappedUsername\"})]});}else if(response.bindingResultHasErrors){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"});}else if(response.overlappedUsername){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"overlappedUsername\"});}else if(submitted){// 위 조건 만족할 때만 loginForm으로 새로고침\nwindow.location.href=\"/loginForm\";return null;}return null;}var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,_useForm$formState=_useForm.formState,isSubmitting=_useForm$formState.isSubmitting,isDirty=_useForm$formState.isDirty,errors=_useForm$formState.errors;// PW toggle start.\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showPw=_useState6[0],setShowPw=_useState6[1];var toggleShowPw=function toggleShowPw(){setShowPw(!showPw);};function handlePwClick(e){toggleShowPw();}function ShowPw(props){return/*#__PURE__*/_jsx(\"button\",{value:\"\\uBCC0\\uACBD\",className:\"user-show-pw\",onClick:handlePwClick});}function HidePw(props){return/*#__PURE__*/_jsx(\"button\",{value:\"\\uBCC0\\uACBD\",className:\"user-hide-pw\",onClick:handlePwClick});}// PW toggle fin.\nfunction BtnToJoin(){function handleClick(e){window.location.href=\"/joinForm\";}return/*#__PURE__*/_jsx(\"div\",{className:\"login-join\",onClick:handleClick,children:/*#__PURE__*/_jsx(\"div\",{className:\"login-join-text\",children:\"\\uC544\\uC9C1 \\uB9C1\\uCE74\\uC758 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"})});}return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit(onSubmit),children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(HeaderRingca,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div-light user-icon-user-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-icon-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"user-inner-transparent\"},register(\"username\",{required:\"답변이 입력되지 않았습니다.\"})))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div user-icon-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-icon-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({type:showPw?\"text\":\"password\",className:\"user-inner-transparent\"// placeholder=\"비밀번호를 입력해주세요\"\n},register(\"password\",{required:\"답변이 입력되지 않았습니다.\"}))),showPw?/*#__PURE__*/_jsx(ShowPw,{onClick:toggleShowPw}):/*#__PURE__*/_jsx(HidePw,{onClick:toggleShowPw})]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-text user-text-right\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-box-in\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"user-btn\",children:/*#__PURE__*/_jsx(\"div\",{className:\"user-btn-text\",children:\"\\uB85C\\uADF8\\uC778\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"login-join-box\",children:/*#__PURE__*/_jsx(BtnToJoin,{})})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","axios","HeaderRingca","useForm","Login","Twitter","require","client","consumer_key","consumer_secret","access_token_key","access_token_secret","tweetPost","content","post","status","error","tweet","response","console","log","bindingResultHasErrors","overlappedUsername","setResponse","submitted","setSubmitted","onSubmit","data","Promise","r","setTimeout","then","res","catch","config","RedirectAndInputErrors","window","location","href","register","handleSubmit","formState","isSubmitting","isDirty","errors","showPw","setShowPw","toggleShowPw","handlePwClick","e","ShowPw","props","HidePw","BtnToJoin","handleClick","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/layout/reactToast.css\"\r\nimport \"../../styles/login.css\";\r\nimport HeaderNoProfile from \"../../components/HeaderNoProfile\";\r\nimport HeaderRingca from \"../../components/HeaderRingca\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import Toastify from \"../../components/Toast\";\r\n\r\n// import { Client, auth } from \"twitter-api-sdk\";\r\n// import express from \"express\";\r\n// import dotenv from \"dotenv\";\r\n\r\n\r\nconst Login = () => {\r\n\r\nvar Twitter = require('twitter');\r\n\r\nvar client = new Twitter({\r\n  consumer_key: 'S0FVySANFNnlISMw5D1vSE8P0',\r\n  consumer_secret: 'KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X',\r\n  access_token_key: '1516353113430851586-BikPyEoaehv4mDqSnCLc5mMQGuigeR',\r\n  access_token_secret: 'zReOE8IWZ5wbGnPC4D8AClbBqc1hXhDQZcbBf2OOar2vw'\r\n});\r\n\r\nfunction tweetPost(content: string) {\r\n  client.post('statuses/update', {status: content}, function(error: any, tweet: any, response: any) {\r\n    if (!error) {\r\n      console.log(\"tweet success: \" + content);\r\n    } else {\r\n      console.log(error);\r\n    }\r\n  });\r\n}\r\n// dotenv.config();\r\n\r\n// const app = express();\r\n\r\n// const authClient = new auth.OAuth2User({\r\n//   client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\r\n//   client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\r\n//   callback: \"https://127.0.0.1:3000/callback\",\r\n//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n// });\r\n\r\n// // const authClient = new auth.OAuth2User({\r\n// //   client_id: process.env.CLIENT_ID as string,\r\n// //   client_secret: process.env.CLIENT_SECRET as string,\r\n// //   callback: \"https://127.0.0.1:3000/callback\",\r\n// //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n// // });\r\n\r\n// const client = new Client(authClient);\r\n\r\n// const STATE = \"my-state\";\r\n\r\n// app.get(\"/callback\", async function (req, res) {\r\n//   try {\r\n//     const { code, state } = req.query;\r\n//     if (state !== STATE) return res.status(500).send(\"State isn't matching\");\r\n//     await authClient.requestAccessToken(code as string);\r\n//     res.redirect(\"/tweets\");\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// });\r\n\r\n// app.get(\"/login\", async function (req, res) {\r\n//   const authUrl = authClient.generateAuthURL({\r\n//     state: STATE,\r\n//     code_challenge_method: \"plain\",\r\n//     code_challenge: \"test\",\r\n//   });\r\n//   res.redirect(authUrl);\r\n// });\r\n\r\n// app.get(\"/tweets\", async function (req, res) {\r\n//   try {\r\n//     const tweets = await client.tweets.findTweetById(\"20\");\r\n//     res.send(tweets);\r\n//   } catch (error) {\r\n//     console.log(\"tweets error\", error);\r\n//   }\r\n// });\r\n\r\n// app.get(\"/revoke\", async function (req, res) {\r\n//   try {\r\n//     const response = await authClient.revokeAccessToken();\r\n//     res.send(response);\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// });\r\n\r\n// app.listen(3000, () => {\r\n//   console.log(`Go here to login: http://127.0.0.1:3000/login`);\r\n// });\r\n\r\n\r\n\r\n\t\r\n// \t// toastify 알람 실행 함수 만들기\r\n//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", { \r\n// \t\tautoClose: 700,\r\n// \t\tposition:\"top-center\", \r\n// \t\tpauseOnFocusLoss: true,\r\n// \t\thideProgressBar: true,\r\n// \t\tdraggable: true, \r\n// \t\tpauseOnHover: true,\r\n// \t\ttheme: \"dark\",\r\n// \t\tcloseButton: false,\r\n// \t\ttransition: Zoom,\r\n// \t\t// onOpen: () => window.alert('Called when I open'),\r\n// \t\t// onClose: () => window.alert('Called when I close')\r\n// })\r\n\r\n\ttype ResponseList = {\r\n\t\tbindingResultHasErrors: boolean;\r\n\t\toverlappedUsername: boolean;\r\n\t}\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tbindingResultHasErrors: false,\r\n\t\toverlappedUsername: false\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\t\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/loginForm\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors(){\r\n\t\tif(response.bindingResultHasErrors && response.overlappedUsername){\r\n\t\t\treturn (<>\r\n\t\t\t<div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t\t<div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if(response.bindingResultHasErrors){\r\n\t\t\treturn <div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t}\r\n\t\telse if(response.overlappedUsername){\r\n\t\t\treturn <div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t}\r\n\t\telse if(submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\"\r\n\t\t\treturn (null);\r\n\t\t}\r\n\t\treturn (null);\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw =()=>{\r\n\tsetShowPw(!showPw);\r\n\t}\r\n\r\n\tfunction handlePwClick(e: any){\r\n    toggleShowPw()\r\n  }\r\n\r\n\tfunction ShowPw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-show-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-hide-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\t// PW toggle fin.\r\n\t\r\n\tfunction BtnToJoin(){\r\n\t\tfunction handleClick(e: any){\r\n\t\t\t\twindow.location.href=\"/joinForm\"\r\n\t\t}\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"login-join\" onClick={handleClick}>\r\n\t\t\t\t\t\t\t<div className=\"login-join-text\">아직 링카의 회원이 아니신가요?</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t<div className=\"container\">\r\n\t\t\t<HeaderRingca/>\r\n\t\t\t{/* <ToastContainer/> */}\r\n\t\t\t<div className=\"user-box\">\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t<div className=\"user-box-div-light user-icon-user-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\t\t\r\n\t\t\t\t\t\t<input className=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t{...register(\"username\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t// placeholder=\"비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-text user-text-right\">비밀번호를 잊으셨나요?\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">비밀번호 변경</button>\r\n\t\t\t\t</form> */}\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<button type=\"submit\" className=\"user-btn\">\r\n\t\t\t\t\t\t<div className=\"user-btn-text\">로그인</div>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"login-join-box\">\r\n\t\t\t\t\t<BtnToJoin/>\r\n\t\t\t\t\t{/* <button onClick={notify}/> */}\r\n\t\t\t\t\t{/* <Toastify text=\"hello\"/> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n\t);\r\n};\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}