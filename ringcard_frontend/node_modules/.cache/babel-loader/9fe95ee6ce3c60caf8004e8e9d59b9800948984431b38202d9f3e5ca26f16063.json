{"ast":null,"code":"const {\n  inspect\n} = require('util');\nconst {\n  RPError,\n  OPError\n} = require('./errors');\nconst now = require('./helpers/unix_timestamp');\nclass DeviceFlowHandle {\n  #aborted;\n  #client;\n  #clientAssertionPayload;\n  #DPoP;\n  #exchangeBody;\n  #expires_at;\n  #interval;\n  #maxAge;\n  #response;\n  constructor(_ref) {\n    let {\n      client,\n      exchangeBody,\n      clientAssertionPayload,\n      response,\n      maxAge,\n      DPoP\n    } = _ref;\n    ['verification_uri', 'user_code', 'device_code'].forEach(prop => {\n      if (typeof response[prop] !== 'string' || !response[prop]) {\n        throw new RPError(`expected ${prop} string to be returned by Device Authorization Response, got %j`, response[prop]);\n      }\n    });\n    if (!Number.isSafeInteger(response.expires_in)) {\n      throw new RPError('expected expires_in number to be returned by Device Authorization Response, got %j', response.expires_in);\n    }\n    this.#expires_at = now() + response.expires_in;\n    this.#client = client;\n    this.#DPoP = DPoP;\n    this.#maxAge = maxAge;\n    this.#exchangeBody = exchangeBody;\n    this.#clientAssertionPayload = clientAssertionPayload;\n    this.#response = response;\n    this.#interval = response.interval * 1000 || 5000;\n  }\n  abort() {\n    this.#aborted = true;\n  }\n  async poll() {\n    let {\n      signal\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (signal && signal.aborted || this.#aborted) {\n      throw new RPError('polling aborted');\n    }\n    if (this.expired()) {\n      throw new RPError('the device code %j has expired and the device authorization session has concluded', this.device_code);\n    }\n    await new Promise(resolve => setTimeout(resolve, this.#interval));\n    let tokenset;\n    try {\n      tokenset = await this.#client.grant({\n        ...this.#exchangeBody,\n        grant_type: 'urn:ietf:params:oauth:grant-type:device_code',\n        device_code: this.device_code\n      }, {\n        clientAssertionPayload: this.#clientAssertionPayload,\n        DPoP: this.#DPoP\n      });\n    } catch (err) {\n      switch (err instanceof OPError && err.error) {\n        case 'slow_down':\n          this.#interval += 5000;\n        case 'authorization_pending':\n          return this.poll({\n            signal\n          });\n        default:\n          throw err;\n      }\n    }\n    if ('id_token' in tokenset) {\n      await this.#client.decryptIdToken(tokenset);\n      await this.#client.validateIdToken(tokenset, undefined, 'token', this.#maxAge);\n    }\n    return tokenset;\n  }\n  get device_code() {\n    return this.#response.device_code;\n  }\n  get user_code() {\n    return this.#response.user_code;\n  }\n  get verification_uri() {\n    return this.#response.verification_uri;\n  }\n  get verification_uri_complete() {\n    return this.#response.verification_uri_complete;\n  }\n  get expires_in() {\n    return Math.max.apply(null, [this.#expires_at - now(), 0]);\n  }\n  expired() {\n    return this.expires_in === 0;\n  }\n\n  /* istanbul ignore next */\n  [inspect.custom]() {\n    return `${this.constructor.name} ${inspect(this.#response, {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true\n    })}`;\n  }\n}\nmodule.exports = DeviceFlowHandle;","map":{"version":3,"names":["inspect","require","RPError","OPError","now","DeviceFlowHandle","aborted","client","clientAssertionPayload","DPoP","exchangeBody","expires_at","interval","maxAge","response","constructor","forEach","prop","Number","isSafeInteger","expires_in","abort","poll","signal","expired","device_code","Promise","resolve","setTimeout","tokenset","grant","grant_type","err","error","decryptIdToken","validateIdToken","undefined","user_code","verification_uri","verification_uri_complete","Math","max","apply","custom","name","depth","Infinity","colors","process","stdout","isTTY","compact","sorted","module","exports"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/openid-client/lib/device_flow_handle.js"],"sourcesContent":["const { inspect } = require('util');\n\nconst { RPError, OPError } = require('./errors');\nconst now = require('./helpers/unix_timestamp');\n\nclass DeviceFlowHandle {\n  #aborted;\n  #client;\n  #clientAssertionPayload;\n  #DPoP;\n  #exchangeBody;\n  #expires_at;\n  #interval;\n  #maxAge;\n  #response;\n  constructor({ client, exchangeBody, clientAssertionPayload, response, maxAge, DPoP }) {\n    ['verification_uri', 'user_code', 'device_code'].forEach((prop) => {\n      if (typeof response[prop] !== 'string' || !response[prop]) {\n        throw new RPError(\n          `expected ${prop} string to be returned by Device Authorization Response, got %j`,\n          response[prop],\n        );\n      }\n    });\n\n    if (!Number.isSafeInteger(response.expires_in)) {\n      throw new RPError(\n        'expected expires_in number to be returned by Device Authorization Response, got %j',\n        response.expires_in,\n      );\n    }\n\n    this.#expires_at = now() + response.expires_in;\n    this.#client = client;\n    this.#DPoP = DPoP;\n    this.#maxAge = maxAge;\n    this.#exchangeBody = exchangeBody;\n    this.#clientAssertionPayload = clientAssertionPayload;\n    this.#response = response;\n    this.#interval = response.interval * 1000 || 5000;\n  }\n\n  abort() {\n    this.#aborted = true;\n  }\n\n  async poll({ signal } = {}) {\n    if ((signal && signal.aborted) || this.#aborted) {\n      throw new RPError('polling aborted');\n    }\n\n    if (this.expired()) {\n      throw new RPError(\n        'the device code %j has expired and the device authorization session has concluded',\n        this.device_code,\n      );\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, this.#interval));\n\n    let tokenset;\n    try {\n      tokenset = await this.#client.grant(\n        {\n          ...this.#exchangeBody,\n          grant_type: 'urn:ietf:params:oauth:grant-type:device_code',\n          device_code: this.device_code,\n        },\n        { clientAssertionPayload: this.#clientAssertionPayload, DPoP: this.#DPoP },\n      );\n    } catch (err) {\n      switch (err instanceof OPError && err.error) {\n        case 'slow_down':\n          this.#interval += 5000;\n        case 'authorization_pending':\n          return this.poll({ signal });\n        default:\n          throw err;\n      }\n    }\n\n    if ('id_token' in tokenset) {\n      await this.#client.decryptIdToken(tokenset);\n      await this.#client.validateIdToken(tokenset, undefined, 'token', this.#maxAge);\n    }\n\n    return tokenset;\n  }\n\n  get device_code() {\n    return this.#response.device_code;\n  }\n\n  get user_code() {\n    return this.#response.user_code;\n  }\n\n  get verification_uri() {\n    return this.#response.verification_uri;\n  }\n\n  get verification_uri_complete() {\n    return this.#response.verification_uri_complete;\n  }\n\n  get expires_in() {\n    return Math.max.apply(null, [this.#expires_at - now(), 0]);\n  }\n\n  expired() {\n    return this.expires_in === 0;\n  }\n\n  /* istanbul ignore next */\n  [inspect.custom]() {\n    return `${this.constructor.name} ${inspect(this.#response, {\n      depth: Infinity,\n      colors: process.stdout.isTTY,\n      compact: false,\n      sorted: true,\n    })}`;\n  }\n}\n\nmodule.exports = DeviceFlowHandle;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}