{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Twitter, Inc.\n// SPDX-License-Identifier: Apache-2.0\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _OAuth2User_options, _OAuth2User_code_verifier, _OAuth2User_code_challenge;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OAuth2User = void 0;\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst utils_1 = require(\"./utils\");\nconst request_1 = require(\"./request\");\nfunction sha256(buffer) {\n  return crypto_1.default.createHash(\"sha256\").update(buffer).digest();\n}\nfunction base64URLEncode(str) {\n  return str.toString(\"base64\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\nfunction processTokenResponse(token) {\n  const {\n    expires_in,\n    ...rest\n  } = token;\n  return {\n    ...rest,\n    ...(!!expires_in && {\n      expires_at: Date.now() + expires_in * 1000\n    })\n  };\n}\n/**\n * Twitter OAuth2 Authentication Client\n */\nclass OAuth2User {\n  constructor(options) {\n    _OAuth2User_options.set(this, void 0);\n    _OAuth2User_code_verifier.set(this, void 0);\n    _OAuth2User_code_challenge.set(this, void 0);\n    const {\n      token,\n      ...defaultOptions\n    } = options;\n    __classPrivateFieldSet(this, _OAuth2User_options, defaultOptions, \"f\");\n    this.token = token;\n  }\n  /**\n   * Refresh the access token\n   */\n  async refreshAccessToken() {\n    const refresh_token = this.token?.refresh_token;\n    const {\n      client_id,\n      client_secret,\n      request_options\n    } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n    if (!client_id) {\n      throw new Error(\"client_id is required\");\n    }\n    if (!refresh_token) {\n      throw new Error(\"refresh_token is required\");\n    }\n    const data = await (0, request_1.rest)({\n      ...request_options,\n      endpoint: `/2/oauth2/token`,\n      params: {\n        client_id,\n        grant_type: \"refresh_token\",\n        refresh_token\n      },\n      method: \"POST\",\n      headers: {\n        ...request_options?.headers,\n        \"Content-type\": \"application/x-www-form-urlencoded\",\n        ...(!!client_secret && {\n          Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret)\n        })\n      }\n    });\n    const token = processTokenResponse(data);\n    this.token = token;\n    return {\n      token\n    };\n  }\n  /**\n   * Check if an access token is expired\n   */\n  isAccessTokenExpired() {\n    const refresh_token = this.token?.refresh_token;\n    const expires_at = this.token?.expires_at;\n    if (!expires_at) return true;\n    return !!refresh_token && expires_at <= Date.now() + 1000;\n  }\n  /**\n   * Request an access token\n   */\n  async requestAccessToken(code) {\n    const {\n      client_id,\n      client_secret,\n      callback,\n      request_options\n    } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n    const code_verifier = __classPrivateFieldGet(this, _OAuth2User_code_verifier, \"f\");\n    if (!client_id) {\n      throw new Error(\"client_id is required\");\n    }\n    if (!callback) {\n      throw new Error(\"callback is required\");\n    }\n    const params = {\n      code,\n      grant_type: \"authorization_code\",\n      code_verifier,\n      client_id,\n      redirect_uri: callback\n    };\n    const data = await (0, request_1.rest)({\n      ...request_options,\n      endpoint: `/2/oauth2/token`,\n      params,\n      method: \"POST\",\n      headers: {\n        ...request_options?.headers,\n        \"Content-type\": \"application/x-www-form-urlencoded\",\n        ...(!!client_secret && {\n          Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret)\n        })\n      }\n    });\n    const token = processTokenResponse(data);\n    this.token = token;\n    return {\n      token\n    };\n  }\n  /**\n   * Revoke an access token\n   */\n  async revokeAccessToken() {\n    const {\n      client_id,\n      client_secret,\n      request_options\n    } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n    const access_token = this.token?.access_token;\n    const refresh_token = this.token?.refresh_token;\n    if (!client_id) {\n      throw new Error(\"client_id is required\");\n    }\n    let params;\n    if (!!access_token) {\n      params = {\n        token_type_hint: \"access_token\",\n        token: access_token,\n        client_id\n      };\n    } else if (!!refresh_token) {\n      params = {\n        token_type_hint: \"refresh_token\",\n        token: refresh_token,\n        client_id\n      };\n    } else {\n      throw new Error(\"access_token or refresh_token required\");\n    }\n    return (0, request_1.rest)({\n      ...request_options,\n      endpoint: `/2/oauth2/revoke`,\n      params,\n      method: \"POST\",\n      headers: {\n        ...request_options?.headers,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        ...(!!client_secret && {\n          Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret)\n        })\n      }\n    });\n  }\n  generateAuthURL(options) {\n    const {\n      client_id,\n      callback,\n      scopes\n    } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n    if (!callback) throw new Error(\"callback required\");\n    if (!scopes) throw new Error(\"scopes required\");\n    if (options.code_challenge_method === \"s256\") {\n      const code_verifier = base64URLEncode(crypto_1.default.randomBytes(32));\n      __classPrivateFieldSet(this, _OAuth2User_code_verifier, code_verifier, \"f\");\n      __classPrivateFieldSet(this, _OAuth2User_code_challenge, base64URLEncode(sha256(code_verifier)), \"f\");\n    } else {\n      __classPrivateFieldSet(this, _OAuth2User_code_challenge, options.code_challenge, \"f\");\n      __classPrivateFieldSet(this, _OAuth2User_code_verifier, options.code_challenge, \"f\");\n    }\n    const code_challenge = __classPrivateFieldGet(this, _OAuth2User_code_challenge, \"f\");\n    const url = new URL(\"https://twitter.com/i/oauth2/authorize\");\n    url.search = (0, utils_1.buildQueryString)({\n      ...options,\n      client_id,\n      scope: scopes.join(\" \"),\n      response_type: \"code\",\n      redirect_uri: callback,\n      code_challenge_method: options.code_challenge_method || \"plain\",\n      code_challenge\n    });\n    return url.toString();\n  }\n  async getAuthHeader() {\n    if (!this.token?.access_token) throw new Error(\"access_token is required\");\n    if (this.isAccessTokenExpired()) await this.refreshAccessToken();\n    return {\n      Authorization: `Bearer ${this.token.access_token}`\n    };\n  }\n}\nexports.OAuth2User = OAuth2User;\n_OAuth2User_options = new WeakMap(), _OAuth2User_code_verifier = new WeakMap(), _OAuth2User_code_challenge = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","__importDefault","mod","__esModule","_OAuth2User_options","_OAuth2User_code_verifier","_OAuth2User_code_challenge","Object","defineProperty","exports","OAuth2User","crypto_1","require","utils_1","request_1","sha256","buffer","default","createHash","update","digest","base64URLEncode","str","toString","replace","processTokenResponse","token","expires_in","rest","expires_at","Date","now","constructor","options","defaultOptions","refreshAccessToken","refresh_token","client_id","client_secret","request_options","Error","data","endpoint","params","grant_type","method","headers","Authorization","basicAuthHeader","isAccessTokenExpired","requestAccessToken","code","callback","code_verifier","redirect_uri","revokeAccessToken","access_token","token_type_hint","generateAuthURL","scopes","code_challenge_method","randomBytes","code_challenge","url","URL","search","buildQueryString","scope","join","response_type","getAuthHeader","WeakMap"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/twitter-api-sdk/dist/OAuth2User.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021 Twitter, Inc.\n// SPDX-License-Identifier: Apache-2.0\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _OAuth2User_options, _OAuth2User_code_verifier, _OAuth2User_code_challenge;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2User = void 0;\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst utils_1 = require(\"./utils\");\nconst request_1 = require(\"./request\");\nfunction sha256(buffer) {\n    return crypto_1.default.createHash(\"sha256\").update(buffer).digest();\n}\nfunction base64URLEncode(str) {\n    return str\n        .toString(\"base64\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\nfunction processTokenResponse(token) {\n    const { expires_in, ...rest } = token;\n    return {\n        ...rest,\n        ...(!!expires_in && {\n            expires_at: Date.now() + expires_in * 1000,\n        }),\n    };\n}\n/**\n * Twitter OAuth2 Authentication Client\n */\nclass OAuth2User {\n    constructor(options) {\n        _OAuth2User_options.set(this, void 0);\n        _OAuth2User_code_verifier.set(this, void 0);\n        _OAuth2User_code_challenge.set(this, void 0);\n        const { token, ...defaultOptions } = options;\n        __classPrivateFieldSet(this, _OAuth2User_options, defaultOptions, \"f\");\n        this.token = token;\n    }\n    /**\n     * Refresh the access token\n     */\n    async refreshAccessToken() {\n        const refresh_token = this.token?.refresh_token;\n        const { client_id, client_secret, request_options } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        if (!client_id) {\n            throw new Error(\"client_id is required\");\n        }\n        if (!refresh_token) {\n            throw new Error(\"refresh_token is required\");\n        }\n        const data = await (0, request_1.rest)({\n            ...request_options,\n            endpoint: `/2/oauth2/token`,\n            params: {\n                client_id,\n                grant_type: \"refresh_token\",\n                refresh_token,\n            },\n            method: \"POST\",\n            headers: {\n                ...request_options?.headers,\n                \"Content-type\": \"application/x-www-form-urlencoded\",\n                ...(!!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret),\n                }),\n            },\n        });\n        const token = processTokenResponse(data);\n        this.token = token;\n        return { token };\n    }\n    /**\n     * Check if an access token is expired\n     */\n    isAccessTokenExpired() {\n        const refresh_token = this.token?.refresh_token;\n        const expires_at = this.token?.expires_at;\n        if (!expires_at)\n            return true;\n        return !!refresh_token && expires_at <= Date.now() + 1000;\n    }\n    /**\n     * Request an access token\n     */\n    async requestAccessToken(code) {\n        const { client_id, client_secret, callback, request_options } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        const code_verifier = __classPrivateFieldGet(this, _OAuth2User_code_verifier, \"f\");\n        if (!client_id) {\n            throw new Error(\"client_id is required\");\n        }\n        if (!callback) {\n            throw new Error(\"callback is required\");\n        }\n        const params = {\n            code,\n            grant_type: \"authorization_code\",\n            code_verifier,\n            client_id,\n            redirect_uri: callback,\n        };\n        const data = await (0, request_1.rest)({\n            ...request_options,\n            endpoint: `/2/oauth2/token`,\n            params,\n            method: \"POST\",\n            headers: {\n                ...request_options?.headers,\n                \"Content-type\": \"application/x-www-form-urlencoded\",\n                ...(!!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret),\n                }),\n            },\n        });\n        const token = processTokenResponse(data);\n        this.token = token;\n        return { token };\n    }\n    /**\n     * Revoke an access token\n     */\n    async revokeAccessToken() {\n        const { client_id, client_secret, request_options } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        const access_token = this.token?.access_token;\n        const refresh_token = this.token?.refresh_token;\n        if (!client_id) {\n            throw new Error(\"client_id is required\");\n        }\n        let params;\n        if (!!access_token) {\n            params = {\n                token_type_hint: \"access_token\",\n                token: access_token,\n                client_id,\n            };\n        }\n        else if (!!refresh_token) {\n            params = {\n                token_type_hint: \"refresh_token\",\n                token: refresh_token,\n                client_id,\n            };\n        }\n        else {\n            throw new Error(\"access_token or refresh_token required\");\n        }\n        return (0, request_1.rest)({\n            ...request_options,\n            endpoint: `/2/oauth2/revoke`,\n            params,\n            method: \"POST\",\n            headers: {\n                ...request_options?.headers,\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                ...(!!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret),\n                }),\n            },\n        });\n    }\n    generateAuthURL(options) {\n        const { client_id, callback, scopes } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        if (!callback)\n            throw new Error(\"callback required\");\n        if (!scopes)\n            throw new Error(\"scopes required\");\n        if (options.code_challenge_method === \"s256\") {\n            const code_verifier = base64URLEncode(crypto_1.default.randomBytes(32));\n            __classPrivateFieldSet(this, _OAuth2User_code_verifier, code_verifier, \"f\");\n            __classPrivateFieldSet(this, _OAuth2User_code_challenge, base64URLEncode(sha256(code_verifier)), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _OAuth2User_code_challenge, options.code_challenge, \"f\");\n            __classPrivateFieldSet(this, _OAuth2User_code_verifier, options.code_challenge, \"f\");\n        }\n        const code_challenge = __classPrivateFieldGet(this, _OAuth2User_code_challenge, \"f\");\n        const url = new URL(\"https://twitter.com/i/oauth2/authorize\");\n        url.search = (0, utils_1.buildQueryString)({\n            ...options,\n            client_id,\n            scope: scopes.join(\" \"),\n            response_type: \"code\",\n            redirect_uri: callback,\n            code_challenge_method: options.code_challenge_method || \"plain\",\n            code_challenge,\n        });\n        return url.toString();\n    }\n    async getAuthHeader() {\n        if (!this.token?.access_token)\n            throw new Error(\"access_token is required\");\n        if (this.isAccessTokenExpired())\n            await this.refreshAccessToken();\n        return {\n            Authorization: `Bearer ${this.token.access_token}`,\n        };\n    }\n}\nexports.OAuth2User = OAuth2User;\n_OAuth2User_options = new WeakMap(), _OAuth2User_code_verifier = new WeakMap(), _OAuth2User_code_challenge = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}