{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\components\\\\AnswerForm.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../styles/answerQuestionNote.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerForm(props) {\n  _s();\n  const questionId = String(props.questionId);\n  // 트위터 이미지로 전환할 질문 내용.\n  const questionContents = props.questionContents;\n  const [answerContents, setAnswerContents] = useState();\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    // 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\n    setAnswerContents(data);\n    console.log(questionContents);\n    await axios.post(\"/question/\" + questionId + \"/unanswered/user\", data).then(res => {\n      console.log(\"posthere\");\n      console.log(data);\n      // window.location.href = \"/question/\" + questionId + \"/completed/user\";\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log(\"Error\", error.message);\n      }\n      console.log(error.config);\n    });\n  };\n  function BtnToCreateTweet() {\n    function handleClick(e) {\n      const data = {\n        text: \"질문 : \" + questionContents + \"\\n 답변 :\" + answerContents\n      };\n      axios({\n        method: 'post',\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\n        data: data,\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(res => {\n        console.log(res);\n        // alert(\"생성이 완료되었습니다.\");\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"CreateTweet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this);\n  }\n  const {\n    register,\n    handleSubmit\n    // formState: { isSubmitting, isDirty, errors },\n  } = useForm();\n\n  // 유저 입력 값을 넣을 변수\n  const [checkItemContent, setCheckItemContent] = useState(\"\");\n\n  // 줄 수를 계산해서 저장할 변수\n  const [textareaHeight, setTextareaHeight] = useState(0);\n\n  // 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n  // 엔터('\\n') 개수를 세서 textareaHeight에 저장\n  const checkItemChangeHandler = event => {\n    setTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n    setCheckItemContent(event.target.value);\n  };\n  function checkLengthHandler(event) {\n    var text = event.target.value;\n    var test_length = text.length;\n\n    //최대 글자수\n    var max_length = 5000;\n    if (test_length > max_length) {\n      alert(max_length + \"자 이상 작성할 수 없습니다.\");\n      text = text.substr(0, max_length);\n      event.target.value = text;\n      event.target.focus();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"answerForm-answer-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-text-box checkItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursur-bar\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"answerAdd\",\n        className: \"answerForm-textarea\",\n        value: checkItemContent,\n        onInput: checkItemChangeHandler,\n        onKeyUp: checkLengthHandler,\n        style: {\n          height: (textareaHeight + 1) * 27 + \"px\",\n          whiteSpace: \"pre-wrap\"\n        },\n        placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694\",\n        ...register(\"answerContents\", {\n          required: \"답변이 입력되지 않았습니다.\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-btn-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"note-send-answer-btn\",\n          src: \"/buttons/send-answer-btn.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BtnToCreateTweet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 3\n  }, this);\n}\n_s(AnswerForm, \"mYXK7s9v1SiUn7oXvVfA74Py9ss=\", false, function () {\n  return [useForm];\n});\n_c = AnswerForm;\nexport default AnswerForm;\nvar _c;\n$RefreshReg$(_c, \"AnswerForm\");","map":{"version":3,"names":["axios","useState","useForm","AnswerForm","props","questionId","String","questionContents","answerContents","setAnswerContents","onSubmit","data","Promise","r","setTimeout","console","log","post","then","res","catch","error","response","status","headers","request","message","config","BtnToCreateTweet","handleClick","e","text","method","url","accessToken","register","handleSubmit","checkItemContent","setCheckItemContent","textareaHeight","setTextareaHeight","checkItemChangeHandler","event","target","value","split","length","checkLengthHandler","test_length","max_length","alert","substr","focus","height","whiteSpace","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/components/AnswerForm.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"../styles/answerQuestionNote.css\";\r\n\r\nexport interface Props {\r\n\tquestionId: number;\r\n\tquestionContents: string;\r\n}\r\n\r\nfunction AnswerForm(props: Props) {\r\n\tconst questionId = String(props.questionId);\r\n\t// 트위터 이미지로 전환할 질문 내용.\r\n\tconst questionContents = props.questionContents;\r\n\tconst [answerContents, setAnswerContents] = useState();\r\n\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\t\t// 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\r\n\t\tsetAnswerContents(data);\r\n\t\tconsole.log(questionContents);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/question/\" + questionId + \"/unanswered/user\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"posthere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\t// window.location.href = \"/question/\" + questionId + \"/completed/user\";\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\t// The request was made and the server responded with a status code\r\n\t\t\t\t\t// that falls out of the range of 2xx\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tconsole.log(error.response.headers);\r\n\t\t\t\t} else if (error.request) {\r\n\t\t\t\t\t// The request was made but no response was received\r\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t\t\t\t// http.ClientRequest in node.js\r\n\t\t\t\t\tconsole.log(error.request);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\r\n\t\t\t\t\tconsole.log(\"Error\", error.message);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction BtnToCreateTweet(){\r\n\t\tfunction handleClick(e: any){\r\n\r\n      const data = {\r\n        text: \"질문 : \" + questionContents + \"\\n 답변 :\" + answerContents\r\n      };\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n        data: data,\r\n        headers: {\r\n          'Authorization': 'Bearer ' + accessToken,\r\n        }\r\n\r\n      }).then((res) => {\r\n        console.log(res);\r\n        // alert(\"생성이 완료되었습니다.\");\r\n        });\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n        CreateTweet\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\t// formState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// 유저 입력 값을 넣을 변수\r\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\r\n\r\n\t// 줄 수를 계산해서 저장할 변수\r\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\r\n\r\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\r\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\r\n\tconst checkItemChangeHandler = (event: any) => {\r\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t\tsetCheckItemContent(event.target.value);\r\n\t};\r\n\r\n\tfunction checkLengthHandler(event: any) {\r\n\t\tvar text = event.target.value;\r\n\t\tvar test_length = text.length;\r\n\r\n\t\t//최대 글자수\r\n\t\tvar max_length = 5000;\r\n\r\n\t\tif (test_length > max_length) {\r\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\r\n\t\t\ttext = text.substr(0, max_length);\r\n\t\t\tevent.target.value = text;\r\n\t\t\tevent.target.focus();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"answerForm-text-box checkItem\">\r\n\t\t\t\t<span className=\"cursur-bar\">|</span>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"answerAdd\"\r\n\t\t\t\t\tclassName=\"answerForm-textarea\"\r\n\t\t\t\t\tvalue={checkItemContent}\r\n\t\t\t\t\tonInput={checkItemChangeHandler}\r\n\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: (textareaHeight + 1) * 27 + \"px\",\r\n\t\t\t\t\t\twhiteSpace: \"pre-wrap\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tplaceholder=\"답변을 적어주세요\"\r\n\t\t\t\t\t{...register(\"answerContents\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t})}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"answerForm-btn-box\">\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t\t<BtnToCreateTweet/>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AnswerForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}