{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33copy\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\auth\\\\Oauth2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport html2canvas from 'html2canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Oauth2 = () => {\n  _s();\n  const {\n    Client,\n    auth\n  } = require(\"twitter-api-sdk\");\n  const CONSUMER_KEY = process.env.REACT_APP_CONSUMER_KEY;\n  const CONSUMER_SECRET = process.env.REACT_APP_CONSUMER_SECRET;\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n  const ACCESS_TOKEN = process.env.REACT_APP_ACCESS_TOKEN;\n  const ACCESS_TOKEN_SECRET = process.env.REACT_APP_ACCESS_TOKEN_SECRET;\n  const CALLBACK_URL = process.env.REACT_APP_CALLBACK_URL;\n  const BEARER_TOKEN = process.env.REACT_APP_BEARER_TOKEN;\n  const authClient = new auth.OAuth2User({\n    client_id: CLIENT_ID,\n    client_secret: CLIENT_SECRET,\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"]\n  });\n  const client = new Client(authClient);\n  const STATE = \"my-state\";\n\n  //Get authorization\n  const authUrl = authClient.generateAuthURL({\n    state: STATE,\n    code_challenge: \"challenge\"\n  });\n\n  // const TWITTER_STATE = \"twitter-increaser-state\";\n  const TWITTER_STATE = \"state\";\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\"].join(\" \");\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\n\n  useEffect(() => {\n    console.log(authUrl);\n\n    //   const getURLWithQueryParams = (\n    //   baseUrl: string,\n    //   params: Record<string, any>\n    // ) => {\n    //   const query = Object.entries(params)\n    //     .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n    //     .join(\"&\")\n\n    //   return `${baseUrl}?${query}`\n    // }\n    // const getTwitterOAuthUrl = (redirectUri: string) =>\n    // getURLWithQueryParams(TWITTER_AUTH_URL, {\n    //   response_type: \"code\",\n    //   client_id: CLIENT_ID,\n    //   redirect_uri: redirectUri,\n    //   scope: TWITTER_SCOPE,\n    //   state: TWITTER_STATE,\n    //   code_challenge: TWITTER_CODE_CHALLENGE,\n    //   code_challenge_method: \"plain\",\n    // })\n    //   console.log(getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\"));\n    //   window.location.href=getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\");\n  }, []);\n\n  // const authHandler = (err:any, data:any) => {\n  //   console.log(err, data);\n  // };\n\n  // const [user, setUser] = useState<any>([]);\n\n  // useEffect(() => {\n  // \taxios\n  // \t\t.get(\"/oauth2\")\n  // \t\t.then((res) => {\n  // \t\t\tsetUser(res.data);\n  // \t\t\tconsole.log(res.data);\n  // \t\t})\n  // \t\t.catch((err) => {\n  // \t\t\tconsole.log(err.config);\n  // \t\t\tconsole.log(err.response.data);\n  // \t\t});\n  // }, []);\n\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\n\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\n\n  // Consuming a Stream\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function OauthTwitter() {\n  //     const stream = client.tweets.sampleStream({\n  //       \"tweet.fields\": [\"author_id\"],\n  //     });\n  //     for await (const tweet of stream) {\n  //       console.log(tweet.data?.author_id);\n  //     }\n\n  //     return(null);\n  //   }\n  //   return(<div><OauthTwitter/></div>)\n  // }\n\n  // Getting a Tweet\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function GettingATweet() {\n  //     const tweet = await client.tweets.findTweetById(\"20\");\n  //     // console.log(tweet.data.text);\n  //     console.log(tweet);\n  //   }\n\n  //     return(null);\n  // }\n\n  // oauth2-bearer.ts \n  // if(BEARER_TOKEN){\n  //   async function Oauth2Bearer() {\n  //     const client = new Client(BEARER_TOKEN);\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n  //     if (!data) throw new Error(\"Couldn't find user\");\n  //     let count = 0;\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\n  //       console.log(followers);\n  //       if (++count === 3) {\n  //         break;\n  //       }\n  //     }\n  //     return (<div></div>);\n  //   }\n  // }\n\n  // if(BEARER_TOKEN){\n  //     const client = new Client(BEARER_TOKEN);\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n  //     if (!data) throw new Error(\"Couldn't find user\");\n  //     let count = 0;\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\n  //       console.log(followers);\n  //       if (++count === 3) {\n  //         break;\n  //       }\n  //     }\n  //     return (<div></div>);\n  // }\n\n  // const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\n  // const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\n  // function TestOauth(){\n  //   if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\n  //     authCallback={authHandler}\n  //     consumerKey={CONSUMER_KEY}\n  //     consumerSecret={CONSUMER_SECRET}\n  //   />)}\n  //   else{\n  //     return(<div></div>)\n  //   }\n  // }\n  // return (<p>1<GettingATweet/></p>)\n\n  // const authHandler = (err:any, data:any) => {\n  //   console.log(err, data);\n  // };\n\n  function BtnToTwitterLogin() {\n    function handleClick(e) {\n      const getURLWithQueryParams = (baseUrl, params) => {\n        const query = Object.entries(params).map(_ref => {\n          let [key, value] = _ref;\n          return `${key}=${encodeURIComponent(value)}`;\n        }).join(\"&\");\n        return `${baseUrl}?${query}`;\n      };\n      const getTwitterOAuthUrl = redirectUri => getURLWithQueryParams(TWITTER_AUTH_URL, {\n        response_type: \"code\",\n        client_id: CLIENT_ID,\n        redirect_uri: redirectUri,\n        scope: TWITTER_SCOPE,\n        state: TWITTER_STATE,\n        code_challenge: TWITTER_CODE_CHALLENGE,\n        code_challenge_method: \"plain\"\n      });\n\n      // window.location.href=getTwitterOAuthUrl(\"http://localhost:3000/login/oauth2/code/twitter\");\n      window.location.href = authUrl;\n    }\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 4\n    }, this);\n  }\n\n  // // capture img start\n  // const printRef = useRef<HTMLInputElement>(null);\n\n  // const handleDownloadImage = async () => {\n  //   const element:any = printRef.current;\n  //   // const canvas = await html2canvas(element);\n  //   const canvas = await html2canvas( element, { logging: true,  allowTaint: false, useCORS: true } )\n\n  //   const data = canvas.toDataURL('image/jpg');\n  //   const link = document.createElement('a');\n\n  //   if (typeof link.download === 'string') {\n  //     link.href = data;\n  //     link.download = 'image.jpg';\n  //     console.log(\"link.download1 : \"+ link.download);\n\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   } else {\n  //     console.log(\"link.download2 : \"+ link.download);\n  //     window.open(data);\n  //   }\n  // };\n  // // capture img fin\n\n  // capture img start2\n  const printRef = useRef(null);\n  const handleDownloadImage = async () => {\n    const element = printRef.current;\n    const canvas = await html2canvas(element, {\n      backgroundColor: \"none\",\n      logging: true,\n      useCORS: true //to enable cross origin perms\n    });\n\n    const data = canvas.toDataURL(\"image/jpg\");\n    const link = document.createElement(\"a\");\n    if (typeof link.download === \"string\") {\n      link.href = data;\n      console.log(\"\");\n      link.download = \"image.jpg\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n  // capture img fin 2\n\n  return (\n    /*#__PURE__*/\n    // <TestOauth/>\n    // <TwitterLogin\n    //       authCallback={authHandler}\n    //       consumerKey={\"S0FVySANFNnlISMw5D1vSE8P0\"}\n    //       consumerSecret={\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\"}\n    //       callbackUrl={\"https://alexandrtovmach.github.io/react-twitter-login/\"}\n    //       buttonTheme={\"dark\"}\n    //     \t/>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BtnToTwitterLogin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDownloadImage,\n          children: \"Download as Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"I will not be in the image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: printRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"hello1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-articleLarge.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this), \"I will be in the image.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Oauth2, \"IqpFlQzxAnlKYVwGj50SA9Ay+Tg=\");\n_c = Oauth2;\nexport default Oauth2;\nvar _c;\n$RefreshReg$(_c, \"Oauth2\");","map":{"version":3,"names":["React","useEffect","useRef","html2canvas","Oauth2","Client","auth","require","CONSUMER_KEY","process","env","REACT_APP_CONSUMER_KEY","CONSUMER_SECRET","REACT_APP_CONSUMER_SECRET","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","ACCESS_TOKEN","REACT_APP_ACCESS_TOKEN","ACCESS_TOKEN_SECRET","REACT_APP_ACCESS_TOKEN_SECRET","CALLBACK_URL","REACT_APP_CALLBACK_URL","BEARER_TOKEN","REACT_APP_BEARER_TOKEN","authClient","OAuth2User","client_id","client_secret","callback","scopes","client","STATE","authUrl","generateAuthURL","state","code_challenge","TWITTER_STATE","TWITTER_CODE_CHALLENGE","TWITTER_AUTH_URL","TWITTER_SCOPE","join","console","log","BtnToTwitterLogin","handleClick","e","getURLWithQueryParams","baseUrl","params","query","Object","entries","map","key","value","encodeURIComponent","getTwitterOAuthUrl","redirectUri","response_type","redirect_uri","scope","code_challenge_method","window","location","href","printRef","handleDownloadImage","element","current","canvas","backgroundColor","logging","useCORS","data","toDataURL","link","document","createElement","download","body","appendChild","click","removeChild","open"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33copy/ringcard/ringcard_frontend/src/pages/auth/Oauth2.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst Oauth2=()=>{\r\n  const { Client, auth } = require(\"twitter-api-sdk\");\r\n  \r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  const CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst ACCESS_TOKEN=process.env.REACT_APP_ACCESS_TOKEN;\r\n\tconst ACCESS_TOKEN_SECRET=process.env.REACT_APP_ACCESS_TOKEN_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\tconst BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  const authClient = new auth.OAuth2User({\r\n    client_id: CLIENT_ID,\r\n    client_secret: CLIENT_SECRET,\r\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\r\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"],\r\n  });\r\n\r\n  const client = new Client(authClient);\r\n  const STATE = \"my-state\";\r\n\r\n  //Get authorization\r\n  const authUrl = authClient.generateAuthURL({\r\n    state: STATE,\r\n    code_challenge: \"challenge\",\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const TWITTER_STATE = \"twitter-increaser-state\";\r\n  const TWITTER_STATE = \"state\";\r\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\r\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\r\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\"].join(\" \");\r\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\r\n\r\n  \r\n  useEffect(() => {\r\n  console.log(authUrl);\r\n  \r\n  //   const getURLWithQueryParams = (\r\n  //   baseUrl: string,\r\n  //   params: Record<string, any>\r\n  // ) => {\r\n  //   const query = Object.entries(params)\r\n  //     .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n  //     .join(\"&\")\r\n\r\n  //   return `${baseUrl}?${query}`\r\n  // }\r\n  // const getTwitterOAuthUrl = (redirectUri: string) =>\r\n  // getURLWithQueryParams(TWITTER_AUTH_URL, {\r\n  //   response_type: \"code\",\r\n  //   client_id: CLIENT_ID,\r\n  //   redirect_uri: redirectUri,\r\n  //   scope: TWITTER_SCOPE,\r\n  //   state: TWITTER_STATE,\r\n  //   code_challenge: TWITTER_CODE_CHALLENGE,\r\n  //   code_challenge_method: \"plain\",\r\n  // })\r\n  //   console.log(getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\"));\r\n  //   window.location.href=getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\");\r\n    \r\n\t}, []);\r\n  \r\n  \r\n  \r\n  \r\n  // const authHandler = (err:any, data:any) => {\r\n  //   console.log(err, data);\r\n  // };\r\n\r\n  // const [user, setUser] = useState<any>([]);\r\n  \r\n  // useEffect(() => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/oauth2\")\r\n\t// \t\t.then((res) => {\r\n\t// \t\t\tsetUser(res.data);\r\n\t// \t\t\tconsole.log(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err.config);\r\n\t// \t\t\tconsole.log(err.response.data);\r\n\t// \t\t});\r\n\t// }, []);\r\n\r\n\r\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\r\n\r\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n  // oauth2-bearer.ts \r\n  // if(BEARER_TOKEN){\r\n  //   async function Oauth2Bearer() {\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  //   }\r\n  // }\r\n\r\n  // if(BEARER_TOKEN){\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  // }\r\n\r\n  // const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  // const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  // function TestOauth(){\r\n  //   if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\r\n  //     authCallback={authHandler}\r\n  //     consumerKey={CONSUMER_KEY}\r\n  //     consumerSecret={CONSUMER_SECRET}\r\n  //   />)}\r\n  //   else{\r\n  //     return(<div></div>)\r\n  //   }\r\n  // }\r\n  // return (<p>1<GettingATweet/></p>)\r\n\r\n  // const authHandler = (err:any, data:any) => {\r\n  //   console.log(err, data);\r\n  // };\r\n\r\n\r\n  function BtnToTwitterLogin(){\r\n\t\tfunction handleClick(e: any){\r\n\tconst getURLWithQueryParams = (\r\n    baseUrl: string,\r\n    params: Record<string, any>\r\n  ) => {\r\n    const query = Object.entries(params)\r\n      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n      .join(\"&\")\r\n\r\n    return `${baseUrl}?${query}`\r\n  }\r\n  const getTwitterOAuthUrl = (redirectUri: string) =>\r\n  getURLWithQueryParams(TWITTER_AUTH_URL, {\r\n    response_type: \"code\",\r\n    client_id: CLIENT_ID,\r\n    redirect_uri: redirectUri,\r\n    scope: TWITTER_SCOPE,\r\n    state: TWITTER_STATE,\r\n    code_challenge: TWITTER_CODE_CHALLENGE,\r\n    code_challenge_method: \"plain\",\r\n  })\r\n\r\n  // window.location.href=getTwitterOAuthUrl(\"http://localhost:3000/login/oauth2/code/twitter\");\r\n  window.location.href=authUrl;\r\n    \r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  // // capture img start\r\n  // const printRef = useRef<HTMLInputElement>(null);\r\n\r\n  // const handleDownloadImage = async () => {\r\n  //   const element:any = printRef.current;\r\n  //   // const canvas = await html2canvas(element);\r\n  //   const canvas = await html2canvas( element, { logging: true,  allowTaint: false, useCORS: true } )\r\n\r\n  //   const data = canvas.toDataURL('image/jpg');\r\n  //   const link = document.createElement('a');\r\n\r\n  //   if (typeof link.download === 'string') {\r\n  //     link.href = data;\r\n  //     link.download = 'image.jpg';\r\n  //     console.log(\"link.download1 : \"+ link.download);\r\n\r\n  //     document.body.appendChild(link);\r\n  //     link.click();\r\n  //     document.body.removeChild(link);\r\n  //   } else {\r\n  //     console.log(\"link.download2 : \"+ link.download);\r\n  //     window.open(data);\r\n  //   }\r\n  // };\r\n  // // capture img fin\r\n\r\n  // capture img start2\r\n  const printRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleDownloadImage = async () => {\r\n    const element:any = printRef.current;\r\n    const canvas = await html2canvas(element, {\r\n      backgroundColor: \"none\",\r\n      logging: true,\r\n      useCORS: true //to enable cross origin perms\r\n    });\r\n\r\n    const data = canvas.toDataURL(\"image/jpg\");\r\n    const link = document.createElement(\"a\");\r\n\r\n    if (typeof link.download === \"string\") {\r\n      link.href = data;\r\n      console.log(\"\");\r\n      link.download = \"image.jpg\";\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      window.open(data);\r\n    }\r\n  };\r\n  // capture img fin 2\r\n\r\n  return (\r\n    // <TestOauth/>\r\n    // <TwitterLogin\r\n    //       authCallback={authHandler}\r\n    //       consumerKey={\"S0FVySANFNnlISMw5D1vSE8P0\"}\r\n    //       consumerSecret={\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\"}\r\n    //       callbackUrl={\"https://alexandrtovmach.github.io/react-twitter-login/\"}\r\n    //       buttonTheme={\"dark\"}\r\n    //     \t/>\r\n    <div>\r\n    <BtnToTwitterLogin/>\r\n\r\n    \t<div>\r\n\t\t\t\t<button type=\"button\" onClick={handleDownloadImage}>\r\n\t\t\t\t\tDownload as Image\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div>I will not be in the image.</div>\r\n\t\t\t\t<div ref={printRef}>\r\n          <div>hello</div>\r\n          <div>hello1</div>\r\n          <img src=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-articleLarge.jpg\"></img>\r\n          I will be in the image.</div>\r\n    \t</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Oauth2;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,WAAW,MAAM,aAAa;AAAC;AAEtC,MAAMC,MAAM,GAAC,MAAI;EAAA;EACf,MAAM;IAAEC,MAAM;IAAEC;EAAK,CAAC,GAAGC,OAAO,CAAC,iBAAiB,CAAC;EAEnD,MAAMC,YAAY,GAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACrD,MAAMC,eAAe,GAACH,OAAO,CAACC,GAAG,CAACG,yBAAyB;EAC3D,MAAMC,SAAS,GAACL,OAAO,CAACC,GAAG,CAACK,mBAAmB;EAChD,MAAMC,aAAa,GAACP,OAAO,CAACC,GAAG,CAACO,uBAAuB;EACvD,MAAMC,YAAY,GAACT,OAAO,CAACC,GAAG,CAACS,sBAAsB;EACrD,MAAMC,mBAAmB,GAACX,OAAO,CAACC,GAAG,CAACW,6BAA6B;EACnE,MAAMC,YAAY,GAACb,OAAO,CAACC,GAAG,CAACa,sBAAsB;EACrD,MAAMC,YAAY,GAACf,OAAO,CAACC,GAAG,CAACe,sBAAsB;EAEpD,MAAMC,UAAU,GAAG,IAAIpB,IAAI,CAACqB,UAAU,CAAC;IACrCC,SAAS,EAAEd,SAAS;IACpBe,aAAa,EAAEb,aAAa;IAC5Bc,QAAQ,EAAE,iDAAiD;IAC3DC,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,aAAa;EACpD,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG,IAAI3B,MAAM,CAACqB,UAAU,CAAC;EACrC,MAAMO,KAAK,GAAG,UAAU;;EAExB;EACA,MAAMC,OAAO,GAAGR,UAAU,CAACS,eAAe,CAAC;IACzCC,KAAK,EAAEH,KAAK;IACZI,cAAc,EAAE;EAClB,CAAC,CAAC;;EASF;EACA,MAAMC,aAAa,GAAG,OAAO;EAC7B,MAAMC,sBAAsB,GAAG,WAAW;EAC1C,MAAMC,gBAAgB,GAAG,wCAAwC;EACjE,MAAMC,aAAa,GAAG,CAAC,YAAY,EAAE,YAAY,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC5D;;EAGAzC,SAAS,CAAC,MAAM;IAChB0C,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;;IAEpB;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAED,CAAC,EAAE,EAAE,CAAC;;EAKL;EACA;EACA;;EAEA;;EAEA;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGC;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAGA,SAASW,iBAAiB,GAAE;IAC5B,SAASC,WAAW,CAACC,CAAM,EAAC;MAC7B,MAAMC,qBAAqB,GAAG,CAC3BC,OAAe,EACfC,MAA2B,KACxB;QACH,MAAMC,KAAK,GAAGC,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC,CACjCI,GAAG,CAAC;UAAA,IAAC,CAACC,GAAG,EAAEC,KAAK,CAAC;UAAA,OAAM,GAAED,GAAI,IAAGE,kBAAkB,CAACD,KAAK,CAAE,EAAC;QAAA,EAAC,CAC5Dd,IAAI,CAAC,GAAG,CAAC;QAEZ,OAAQ,GAAEO,OAAQ,IAAGE,KAAM,EAAC;MAC9B,CAAC;MACD,MAAMO,kBAAkB,GAAIC,WAAmB,IAC/CX,qBAAqB,CAACR,gBAAgB,EAAE;QACtCoB,aAAa,EAAE,MAAM;QACrBhC,SAAS,EAAEd,SAAS;QACpB+C,YAAY,EAAEF,WAAW;QACzBG,KAAK,EAAErB,aAAa;QACpBL,KAAK,EAAEE,aAAa;QACpBD,cAAc,EAAEE,sBAAsB;QACtCwB,qBAAqB,EAAE;MACzB,CAAC,CAAC;;MAEF;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAChC,OAAO;IAE5B;IACA,oBACC;MAAQ,OAAO,EAAEY;IAAY;MAAA;MAAA;MAAA;IAAA,QACpB;EAEX;;EAEC;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMqB,QAAQ,GAAGjE,MAAM,CAAmB,IAAI,CAAC;EAE/C,MAAMkE,mBAAmB,GAAG,YAAY;IACtC,MAAMC,OAAW,GAAGF,QAAQ,CAACG,OAAO;IACpC,MAAMC,MAAM,GAAG,MAAMpE,WAAW,CAACkE,OAAO,EAAE;MACxCG,eAAe,EAAE,MAAM;MACvBC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI,CAAC;IAChB,CAAC,CAAC;;IAEF,MAAMC,IAAI,GAAGJ,MAAM,CAACK,SAAS,CAAC,WAAW,CAAC;IAC1C,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAExC,IAAI,OAAOF,IAAI,CAACG,QAAQ,KAAK,QAAQ,EAAE;MACrCH,IAAI,CAACX,IAAI,GAAGS,IAAI;MAChBhC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAC;MACfiC,IAAI,CAACG,QAAQ,GAAG,WAAW;MAE3BF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC;MAC/BA,IAAI,CAACM,KAAK,EAAE;MACZL,QAAQ,CAACG,IAAI,CAACG,WAAW,CAACP,IAAI,CAAC;IACjC,CAAC,MAAM;MACLb,MAAM,CAACqB,IAAI,CAACV,IAAI,CAAC;IACnB;EACF,CAAC;EACD;;EAEA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA,wBACA,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA,QAAE,eAEnB;QAAA,wBACD;UAAQ,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAEP,mBAAoB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE1C,eAET;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsC,eACtC;UAAK,GAAG,EAAED,QAAS;UAAA,wBACb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB,eAChB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAiB,eACjB;YAAK,GAAG,EAAC;UAAkG;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QACrF;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5B;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;AAEV,CAAC;AAAA,GArSK/D,MAAM;AAAA,KAANA,MAAM;AAuSZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}