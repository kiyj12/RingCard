{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tokenRequest = exports.authorizationRequest = exports.clientCredentialsGrant = exports.authorizationCodeGrant = void 0;\nvar openid_client_1 = require(\"openid-client\");\n/**\n * Returns a middleware for Authorization Code Grant.\n *\n * @param {TwitterOAuth2Options} options\n * @param {Request} req\n * @param {Response} res\n * @param {NextFunction} next\n * @returns\n */\nfunction authorizationCodeGrant(options, req, res, next) {\n  return __awaiter(this, void 0, void 0, function () {\n    var clientID, clientSecret, redirectURI, issOpt, issuer, client, state, codeVerifier, codeChallenge, url, state, codeVerifier, tokenSet, err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 4,, 5]);\n          if (!req.session) throw new Error('express-session is not configured');\n          clientID = options.client_id || process.env.CLIENT_ID;\n          if (typeof clientID != 'string') throw new Error('client_id must be a string');\n          clientSecret = options.client_secret || process.env.CLIENT_SECRET;\n          redirectURI = options.redirect_uri || process.env.REDIRECT_URI;\n          if (typeof redirectURI != 'string') throw new Error('redirect_uri must be a string');\n          issOpt = {\n            issuer: 'https://twitter.com',\n            authorization_endpoint: 'https://twitter.com/i/oauth2/authorize',\n            token_endpoint: 'https://api.twitter.com/2/oauth2/token'\n          };\n          issuer = new openid_client_1.Issuer(issOpt);\n          client = new issuer.Client({\n            client_id: clientID,\n            client_secret: clientSecret,\n            redirect_uris: [redirectURI],\n            token_endpoint_auth_method: options.client_type == 'public' ? 'none' : 'client_secret_basic'\n          });\n          if (!(!req.session.isRedirected && !req.session.tokenSet)) return [3 /*break*/, 1];\n          state = openid_client_1.generators.state();\n          codeVerifier = openid_client_1.generators.codeVerifier();\n          codeChallenge = openid_client_1.generators.codeChallenge(codeVerifier);\n          url = authorizationRequest(client, {\n            state: state,\n            scope: options.scope,\n            code_challenge: codeChallenge,\n            code_challenge_method: 'S256'\n          });\n          req.session.state = state;\n          req.session.code_verifier = codeVerifier;\n          req.session.originalUrl = req.originalUrl;\n          req.session.isRedirected = true;\n          if (req.xhr) {\n            return [2 /*return*/, res.status(403).json({\n              location: url\n            })];\n          }\n          return [2 /*return*/, res.redirect(url)];\n        case 1:\n          if (!(req.session.isRedirected && !req.session.tokenSet)) return [3 /*break*/, 3];\n          state = req.session.state;\n          if (typeof state != 'string') throw new Error('state must be a string');\n          codeVerifier = req.session.code_verifier;\n          if (typeof codeVerifier != 'string') throw new Error('code_verifier must be a string');\n          return [4 /*yield*/, tokenRequest(req, client, {\n            redirect_uri: redirectURI,\n            client_id: clientID,\n            code_verifier: codeVerifier,\n            state: state\n          })];\n        case 2:\n          tokenSet = _a.sent();\n          req.session.tokenSet = tokenSet;\n          if (typeof req.session.originalUrl != 'string') throw new Error('originalUrl must be a string');\n          if (req.xhr) {\n            return [2 /*return*/, res.json({\n              location: req.session.originalUrl\n            })];\n          }\n          return [2 /*return*/, res.redirect(req.session.originalUrl)];\n        case 3:\n          return [3 /*break*/, 5];\n        case 4:\n          err_1 = _a.sent();\n          next(err_1);\n          return [2 /*return*/];\n        case 5:\n          next();\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nexports.authorizationCodeGrant = authorizationCodeGrant;\n/**\n * Returns a middleware for Client Credentials Grant.\n *\n * @param {TwitterOAuth2Options} options\n * @param {Request} req\n * @param {Response} res\n * @param {NextFunction} next\n * @returns\n */\nfunction clientCredentialsGrant(options, req, res, next) {\n  return __awaiter(this, void 0, void 0, function () {\n    var clientID, clientSecret, issuer, client, tokenSet, err_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          if (!req.session) throw new Error('express-session is not configured');\n          if (req.session.tokenSet) {\n            next();\n            return [2 /*return*/];\n          }\n\n          clientID = options.consumer_key || process.env.CONSUMER_KEY;\n          if (typeof clientID != 'string') throw new Error('consumer_key must be a string');\n          clientSecret = options.consumer_secret || process.env.CONSUMER_SECRET;\n          if (typeof clientSecret != 'string') throw new Error('consumer_secret must be a string');\n          issuer = new openid_client_1.Issuer({\n            issuer: 'https://twitter.com',\n            token_endpoint: 'https://api.twitter.com/oauth2/token'\n          });\n          client = new issuer.Client({\n            client_id: clientID,\n            client_secret: clientSecret\n          });\n          return [4 /*yield*/, client.grant({\n            grant_type: 'client_credentials'\n          })];\n        case 1:\n          tokenSet = _a.sent();\n          req.session.tokenSet = tokenSet;\n          next();\n          return [2 /*return*/];\n        case 2:\n          err_2 = _a.sent();\n          next(err_2);\n          return [2 /*return*/];\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nexports.clientCredentialsGrant = clientCredentialsGrant;\n/**\n * Returns a Authorization Request URL.\n *\n * @param {BaseClient} client\n * @param {AuthorizationRequestOptions} options\n * @returns {string}\n */\nfunction authorizationRequest(client, options) {\n  var url = client.authorizationUrl({\n    response_type: 'code',\n    scope: options.scope || 'tweet.read users.read offline.access',\n    state: options.state,\n    code_challenge: options.code_challenge,\n    code_challenge_method: options.code_challenge_method\n  });\n  return url;\n}\nexports.authorizationRequest = authorizationRequest;\n/**\n * Returns a Token Response.\n *\n * @param {Request} req\n * @param {BaseClient} client\n * @param {TokenRequestOptions} options\n * @returns {Promise<TokenSet>}\n */\nfunction tokenRequest(req, client, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var state, codeVerifier, params, tokenSet;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          state = options.state;\n          codeVerifier = options.code_verifier;\n          params = client.callbackParams(req);\n          return [4 /*yield*/, client.oauthCallback(options.redirect_uri, params, {\n            code_verifier: codeVerifier,\n            state: state\n          }, {\n            exchangeBody: {\n              client_id: options.client_id\n            }\n          })];\n        case 1:\n          tokenSet = _a.sent();\n          return [2 /*return*/, tokenSet];\n      }\n    });\n  });\n}\nexports.tokenRequest = tokenRequest;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","tokenRequest","authorizationRequest","clientCredentialsGrant","authorizationCodeGrant","openid_client_1","require","options","req","res","clientID","clientSecret","redirectURI","issOpt","issuer","client","state","codeVerifier","codeChallenge","url","tokenSet","err_1","_a","session","Error","client_id","process","env","CLIENT_ID","client_secret","CLIENT_SECRET","redirect_uri","REDIRECT_URI","authorization_endpoint","token_endpoint","Issuer","Client","redirect_uris","token_endpoint_auth_method","client_type","isRedirected","generators","scope","code_challenge","code_challenge_method","code_verifier","originalUrl","xhr","status","json","location","redirect","err_2","consumer_key","CONSUMER_KEY","consumer_secret","CONSUMER_SECRET","grant","grant_type","authorizationUrl","response_type","params","callbackParams","oauthCallback","exchangeBody"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/twitter-oauth2/lib/oauth2.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tokenRequest = exports.authorizationRequest = exports.clientCredentialsGrant = exports.authorizationCodeGrant = void 0;\nvar openid_client_1 = require(\"openid-client\");\n/**\n * Returns a middleware for Authorization Code Grant.\n *\n * @param {TwitterOAuth2Options} options\n * @param {Request} req\n * @param {Response} res\n * @param {NextFunction} next\n * @returns\n */\nfunction authorizationCodeGrant(options, req, res, next) {\n    return __awaiter(this, void 0, void 0, function () {\n        var clientID, clientSecret, redirectURI, issOpt, issuer, client, state, codeVerifier, codeChallenge, url, state, codeVerifier, tokenSet, err_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 4, , 5]);\n                    if (!req.session)\n                        throw new Error('express-session is not configured');\n                    clientID = options.client_id || process.env.CLIENT_ID;\n                    if (typeof clientID != 'string')\n                        throw new Error('client_id must be a string');\n                    clientSecret = options.client_secret || process.env.CLIENT_SECRET;\n                    redirectURI = options.redirect_uri || process.env.REDIRECT_URI;\n                    if (typeof redirectURI != 'string')\n                        throw new Error('redirect_uri must be a string');\n                    issOpt = {\n                        issuer: 'https://twitter.com',\n                        authorization_endpoint: 'https://twitter.com/i/oauth2/authorize',\n                        token_endpoint: 'https://api.twitter.com/2/oauth2/token'\n                    };\n                    issuer = new openid_client_1.Issuer(issOpt);\n                    client = new issuer.Client({\n                        client_id: clientID,\n                        client_secret: clientSecret,\n                        redirect_uris: [redirectURI],\n                        token_endpoint_auth_method: options.client_type == 'public' ? 'none' : 'client_secret_basic',\n                    });\n                    if (!(!req.session.isRedirected && !req.session.tokenSet)) return [3 /*break*/, 1];\n                    state = openid_client_1.generators.state();\n                    codeVerifier = openid_client_1.generators.codeVerifier();\n                    codeChallenge = openid_client_1.generators.codeChallenge(codeVerifier);\n                    url = authorizationRequest(client, {\n                        state: state,\n                        scope: options.scope,\n                        code_challenge: codeChallenge,\n                        code_challenge_method: 'S256',\n                    });\n                    req.session.state = state;\n                    req.session.code_verifier = codeVerifier;\n                    req.session.originalUrl = req.originalUrl;\n                    req.session.isRedirected = true;\n                    if (req.xhr) {\n                        return [2 /*return*/, res.status(403).json({ location: url })];\n                    }\n                    return [2 /*return*/, res.redirect(url)];\n                case 1:\n                    if (!(req.session.isRedirected && !req.session.tokenSet)) return [3 /*break*/, 3];\n                    state = req.session.state;\n                    if (typeof state != 'string')\n                        throw new Error('state must be a string');\n                    codeVerifier = req.session.code_verifier;\n                    if (typeof codeVerifier != 'string')\n                        throw new Error('code_verifier must be a string');\n                    return [4 /*yield*/, tokenRequest(req, client, {\n                            redirect_uri: redirectURI,\n                            client_id: clientID,\n                            code_verifier: codeVerifier,\n                            state: state,\n                        })];\n                case 2:\n                    tokenSet = _a.sent();\n                    req.session.tokenSet = tokenSet;\n                    if (typeof req.session.originalUrl != 'string')\n                        throw new Error('originalUrl must be a string');\n                    if (req.xhr) {\n                        return [2 /*return*/, res.json({ location: req.session.originalUrl })];\n                    }\n                    return [2 /*return*/, res.redirect(req.session.originalUrl)];\n                case 3: return [3 /*break*/, 5];\n                case 4:\n                    err_1 = _a.sent();\n                    next(err_1);\n                    return [2 /*return*/];\n                case 5:\n                    next();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.authorizationCodeGrant = authorizationCodeGrant;\n/**\n * Returns a middleware for Client Credentials Grant.\n *\n * @param {TwitterOAuth2Options} options\n * @param {Request} req\n * @param {Response} res\n * @param {NextFunction} next\n * @returns\n */\nfunction clientCredentialsGrant(options, req, res, next) {\n    return __awaiter(this, void 0, void 0, function () {\n        var clientID, clientSecret, issuer, client, tokenSet, err_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    if (!req.session)\n                        throw new Error('express-session is not configured');\n                    if (req.session.tokenSet) {\n                        next();\n                        return [2 /*return*/];\n                    }\n                    clientID = options.consumer_key || process.env.CONSUMER_KEY;\n                    if (typeof clientID != 'string')\n                        throw new Error('consumer_key must be a string');\n                    clientSecret = options.consumer_secret || process.env.CONSUMER_SECRET;\n                    if (typeof clientSecret != 'string')\n                        throw new Error('consumer_secret must be a string');\n                    issuer = new openid_client_1.Issuer({\n                        issuer: 'https://twitter.com',\n                        token_endpoint: 'https://api.twitter.com/oauth2/token'\n                    });\n                    client = new issuer.Client({\n                        client_id: clientID,\n                        client_secret: clientSecret,\n                    });\n                    return [4 /*yield*/, client.grant({\n                            grant_type: 'client_credentials',\n                        })];\n                case 1:\n                    tokenSet = _a.sent();\n                    req.session.tokenSet = tokenSet;\n                    next();\n                    return [2 /*return*/];\n                case 2:\n                    err_2 = _a.sent();\n                    next(err_2);\n                    return [2 /*return*/];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.clientCredentialsGrant = clientCredentialsGrant;\n/**\n * Returns a Authorization Request URL.\n *\n * @param {BaseClient} client\n * @param {AuthorizationRequestOptions} options\n * @returns {string}\n */\nfunction authorizationRequest(client, options) {\n    var url = client.authorizationUrl({\n        response_type: 'code',\n        scope: options.scope || 'tweet.read users.read offline.access',\n        state: options.state,\n        code_challenge: options.code_challenge,\n        code_challenge_method: options.code_challenge_method\n    });\n    return url;\n}\nexports.authorizationRequest = authorizationRequest;\n/**\n * Returns a Token Response.\n *\n * @param {Request} req\n * @param {BaseClient} client\n * @param {TokenRequestOptions} options\n * @returns {Promise<TokenSet>}\n */\nfunction tokenRequest(req, client, options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var state, codeVerifier, params, tokenSet;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    state = options.state;\n                    codeVerifier = options.code_verifier;\n                    params = client.callbackParams(req);\n                    return [4 /*yield*/, client.oauthCallback(options.redirect_uri, params, { code_verifier: codeVerifier, state: state }, { exchangeBody: { client_id: options.client_id } })];\n                case 1:\n                    tokenSet = _a.sent();\n                    return [2 /*return*/, tokenSet];\n            }\n        });\n    });\n}\nexports.tokenRequest = tokenRequest;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}