{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\components\\\\QuestionNote.tsx\";\nimport QuestionFooter from \"./QuestionNoteFooter\";\nimport \"../styles/question.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionNote(props) {\n  const idx = props.idx;\n  const question = props.question;\n  const questionUploadTime = new Date(question.uploadTime);\n  const detailDate = a => {\n    const year = questionUploadTime.getFullYear() - 2000;\n    const month = questionUploadTime.getMonth() + 1;\n    const date = questionUploadTime.getDate();\n    const questionUploadDate = `${year}년 ${month}월 ${date}일`;\n    const milliSeconds = Date.now() - a;\n    const seconds = milliSeconds / 1000;\n    if (seconds < 86400) {\n      if (seconds < 60) return `방금 전`;\n      const minutes = seconds / 60;\n      if (minutes < 60) return `${Math.floor(minutes)}분 전`;\n      const hours = minutes / 60;\n      if (hours < 24) return `${Math.floor(hours)}시간 전`;\n    } else {\n      return questionUploadDate;\n    }\n    // const days = hours / 24;\n    // if (days < 7) return `${Math.floor(days)}일 전`;\n    // const weeks = days / 7;\n    // if (weeks < 5) return `${Math.floor(weeks)}주 전`;\n    // const months = days / 30;\n    // if (months < 12) return `${Math.floor(months)}개월 전`;\n    // const years = days / 365;\n    // return `${Math.floor(years)}년 전`;\n    // https://velog.io/@4775614/React-날짜-시간-계산-방금전-몇분전-몇시간전-몇일전-몇주전-몇개월전\n  };\n\n  const nowDate = detailDate(new Date(questionUploadTime));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-note\",\n    style: {\n      backgroundImage: `url(\"/notes/yellow-note.png\")`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-profile-pic\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/test-anony-profile-pic.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-time\",\n        children: nowDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-content-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        children: question.questionContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"note-hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(QuestionFooter, {\n      question: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)]\n  }, idx, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n_c = QuestionNote;\nexport default QuestionNote;\nvar _c;\n$RefreshReg$(_c, \"QuestionNote\");","map":{"version":3,"names":["QuestionFooter","QuestionNote","props","idx","question","questionUploadTime","Date","uploadTime","detailDate","a","year","getFullYear","month","getMonth","date","getDate","questionUploadDate","milliSeconds","now","seconds","minutes","Math","floor","hours","nowDate","backgroundImage","questionContents"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/components/QuestionNote.tsx"],"sourcesContent":["import { IQuestion } from \"./types\";\r\nimport QuestionFooter from \"./QuestionNoteFooter\";\r\nimport \"../styles/question.css\";\r\n\r\nexport interface Props {\r\n\tidx: number;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nfunction QuestionNote(props: Props) {\r\n\tconst idx = props.idx;\r\n\tconst question = props.question;\r\n\r\n\t\tconst questionUploadTime = new Date(question.uploadTime);\r\n\r\n\tconst detailDate = (a:any) => {\r\n\t\tconst year = questionUploadTime.getFullYear() - 2000;\r\n\t\tconst month = questionUploadTime.getMonth()+1;\r\n\t\tconst date = questionUploadTime.getDate();\r\n\t\tconst questionUploadDate = `${year}년 ${month}월 ${date}일`\r\n\r\n\t\tconst milliSeconds = Date.now() - a;\r\n\t\tconst seconds = milliSeconds / 1000;\r\n\t\tif (seconds<86400){\r\n\t\t\tif (seconds < 60) return `방금 전`;\r\n\t\t\tconst minutes = seconds / 60;\r\n\t\t\tif (minutes < 60) return `${Math.floor(minutes)}분 전`;\r\n\t\t\tconst hours = minutes / 60;\r\n\t\t\tif (hours < 24) return `${Math.floor(hours)}시간 전`;\r\n\t\t} else {\r\n\t\t\treturn questionUploadDate;\r\n\t\t}\r\n\t\t// const days = hours / 24;\r\n\t\t// if (days < 7) return `${Math.floor(days)}일 전`;\r\n\t\t// const weeks = days / 7;\r\n\t\t// if (weeks < 5) return `${Math.floor(weeks)}주 전`;\r\n\t\t// const months = days / 30;\r\n\t\t// if (months < 12) return `${Math.floor(months)}개월 전`;\r\n\t\t// const years = days / 365;\r\n\t\t// return `${Math.floor(years)}년 전`;\r\n\t\t// https://velog.io/@4775614/React-날짜-시간-계산-방금전-몇분전-몇시간전-몇일전-몇주전-몇개월전\r\n\t};\r\n\t\r\n\tconst nowDate = detailDate(new Date(questionUploadTime));\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"question-note\"\r\n\t\t\tkey={idx}\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundImage: `url(\"/notes/yellow-note.png\")`,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"note-header\">\r\n\t\t\t\t<div className=\"note-profile-pic\">\r\n\t\t\t\t\t<img src=\"/test-anony-profile-pic.jpg\" alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"note-time\">{nowDate}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"note-content-box\">\r\n\t\t\t\t<div className=\"note-content\">{question.questionContents}</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"note-hr\" />\r\n\t\t\t<QuestionFooter question={question} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionNote;\r\n"],"mappings":";AACA,OAAOA,cAAc,MAAM,sBAAsB;AACjD,OAAO,wBAAwB;AAAC;AAOhC,SAASC,YAAY,CAACC,KAAY,EAAE;EACnC,MAAMC,GAAG,GAAGD,KAAK,CAACC,GAAG;EACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;EAE9B,MAAMC,kBAAkB,GAAG,IAAIC,IAAI,CAACF,QAAQ,CAACG,UAAU,CAAC;EAEzD,MAAMC,UAAU,GAAIC,CAAK,IAAK;IAC7B,MAAMC,IAAI,GAAGL,kBAAkB,CAACM,WAAW,EAAE,GAAG,IAAI;IACpD,MAAMC,KAAK,GAAGP,kBAAkB,CAACQ,QAAQ,EAAE,GAAC,CAAC;IAC7C,MAAMC,IAAI,GAAGT,kBAAkB,CAACU,OAAO,EAAE;IACzC,MAAMC,kBAAkB,GAAI,GAAEN,IAAK,KAAIE,KAAM,KAAIE,IAAK,GAAE;IAExD,MAAMG,YAAY,GAAGX,IAAI,CAACY,GAAG,EAAE,GAAGT,CAAC;IACnC,MAAMU,OAAO,GAAGF,YAAY,GAAG,IAAI;IACnC,IAAIE,OAAO,GAAC,KAAK,EAAC;MACjB,IAAIA,OAAO,GAAG,EAAE,EAAE,OAAQ,MAAK;MAC/B,MAAMC,OAAO,GAAGD,OAAO,GAAG,EAAE;MAC5B,IAAIC,OAAO,GAAG,EAAE,EAAE,OAAQ,GAAEC,IAAI,CAACC,KAAK,CAACF,OAAO,CAAE,KAAI;MACpD,MAAMG,KAAK,GAAGH,OAAO,GAAG,EAAE;MAC1B,IAAIG,KAAK,GAAG,EAAE,EAAE,OAAQ,GAAEF,IAAI,CAACC,KAAK,CAACC,KAAK,CAAE,MAAK;IAClD,CAAC,MAAM;MACN,OAAOP,kBAAkB;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAAC;;EAED,MAAMQ,OAAO,GAAGhB,UAAU,CAAC,IAAIF,IAAI,CAACD,kBAAkB,CAAC,CAAC;EAExD,oBACC;IACC,SAAS,EAAC,eAAe;IAEzB,KAAK,EAAE;MACNoB,eAAe,EAAG;IACnB,CAAE;IAAA,wBAEF;MAAK,SAAS,EAAC,aAAa;MAAA,wBAC3B;QAAK,SAAS,EAAC,kBAAkB;QAAA,uBAChC;UAAK,GAAG,EAAC,6BAA6B;UAAC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC3C,eACN;QAAK,SAAS,EAAC,WAAW;QAAA,UAAED;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC,eACN;MAAK,SAAS,EAAC,kBAAkB;MAAA,uBAChC;QAAK,SAAS,EAAC,cAAc;QAAA,UAAEpB,QAAQ,CAACsB;MAAgB;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QAC1D,eACN;MAAI,SAAS,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1B,QAAC,cAAc;MAAC,QAAQ,EAAEtB;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,GAfjCD,GAAG;IAAA;IAAA;IAAA;EAAA,QAgBH;AAER;AAAC,KAzDQF,YAAY;AA2DrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}