{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FriendshipsOutgoingV1Paginator = exports.FriendshipsIncomingV1Paginator = exports.UserSearchV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\nconst paginator_v1_1 = require(\"./paginator.v1\");\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass UserSearchV1Paginator extends TwitterPaginator_1.default {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'users/search.json';\n  }\n  refreshInstanceFromResult(response, isNextPage) {\n    const result = response.data;\n    this._rateLimit = response.rateLimit;\n    if (isNextPage) {\n      this._realData.push(...result);\n    }\n  }\n  getNextQueryParams(maxResults) {\n    var _a;\n    const previousPage = Number((_a = this._queryParams.page) !== null && _a !== void 0 ? _a : '1');\n    return {\n      ...this._queryParams,\n      page: previousPage + 1,\n      ...(maxResults ? {\n        count: maxResults\n      } : {})\n    };\n  }\n  getPageLengthFromRequest(result) {\n    return result.data.length;\n  }\n  isFetchLastOver(result) {\n    return !result.data.length;\n  }\n  canFetchNextPage(result) {\n    return result.length > 0;\n  }\n  getItemArray() {\n    return this.users;\n  }\n  /**\n   * Users returned by paginator.\n   */\n  get users() {\n    return this._realData;\n  }\n}\nexports.UserSearchV1Paginator = UserSearchV1Paginator;\nclass FriendshipsIncomingV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'friendships/incoming.json';\n    this._maxResultsWhenFetchLast = 5000;\n  }\n  refreshInstanceFromResult(response, isNextPage) {\n    const result = response.data;\n    this._rateLimit = response.rateLimit;\n    if (isNextPage) {\n      this._realData.ids.push(...result.ids);\n      this._realData.next_cursor = result.next_cursor;\n    }\n  }\n  getPageLengthFromRequest(result) {\n    return result.data.ids.length;\n  }\n  getItemArray() {\n    return this.ids;\n  }\n  /**\n   * Users IDs returned by paginator.\n   */\n  get ids() {\n    return this._realData.ids;\n  }\n}\nexports.FriendshipsIncomingV1Paginator = FriendshipsIncomingV1Paginator;\nclass FriendshipsOutgoingV1Paginator extends FriendshipsIncomingV1Paginator {\n  constructor() {\n    super(...arguments);\n    this._endpoint = 'friendships/outgoing.json';\n  }\n}\nexports.FriendshipsOutgoingV1Paginator = FriendshipsOutgoingV1Paginator;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","FriendshipsOutgoingV1Paginator","FriendshipsIncomingV1Paginator","UserSearchV1Paginator","TwitterPaginator_1","require","paginator_v1_1","default","constructor","arguments","_endpoint","refreshInstanceFromResult","response","isNextPage","result","data","_rateLimit","rateLimit","_realData","push","getNextQueryParams","maxResults","_a","previousPage","Number","_queryParams","page","count","getPageLengthFromRequest","length","isFetchLastOver","canFetchNextPage","getItemArray","users","CursoredV1Paginator","_maxResultsWhenFetchLast","ids","next_cursor"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/twitter-api-v2/dist/paginators/user.paginator.v1.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FriendshipsOutgoingV1Paginator = exports.FriendshipsIncomingV1Paginator = exports.UserSearchV1Paginator = void 0;\nconst TwitterPaginator_1 = __importDefault(require(\"./TwitterPaginator\"));\nconst paginator_v1_1 = require(\"./paginator.v1\");\n/** A generic TwitterPaginator able to consume TweetV1 timelines. */\nclass UserSearchV1Paginator extends TwitterPaginator_1.default {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'users/search.json';\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.push(...result);\n        }\n    }\n    getNextQueryParams(maxResults) {\n        var _a;\n        const previousPage = Number((_a = this._queryParams.page) !== null && _a !== void 0 ? _a : '1');\n        return {\n            ...this._queryParams,\n            page: previousPage + 1,\n            ...maxResults ? { count: maxResults } : {},\n        };\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.length;\n    }\n    isFetchLastOver(result) {\n        return !result.data.length;\n    }\n    canFetchNextPage(result) {\n        return result.length > 0;\n    }\n    getItemArray() {\n        return this.users;\n    }\n    /**\n     * Users returned by paginator.\n     */\n    get users() {\n        return this._realData;\n    }\n}\nexports.UserSearchV1Paginator = UserSearchV1Paginator;\nclass FriendshipsIncomingV1Paginator extends paginator_v1_1.CursoredV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/incoming.json';\n        this._maxResultsWhenFetchLast = 5000;\n    }\n    refreshInstanceFromResult(response, isNextPage) {\n        const result = response.data;\n        this._rateLimit = response.rateLimit;\n        if (isNextPage) {\n            this._realData.ids.push(...result.ids);\n            this._realData.next_cursor = result.next_cursor;\n        }\n    }\n    getPageLengthFromRequest(result) {\n        return result.data.ids.length;\n    }\n    getItemArray() {\n        return this.ids;\n    }\n    /**\n     * Users IDs returned by paginator.\n     */\n    get ids() {\n        return this._realData.ids;\n    }\n}\nexports.FriendshipsIncomingV1Paginator = FriendshipsIncomingV1Paginator;\nclass FriendshipsOutgoingV1Paginator extends FriendshipsIncomingV1Paginator {\n    constructor() {\n        super(...arguments);\n        this._endpoint = 'friendships/outgoing.json';\n    }\n}\nexports.FriendshipsOutgoingV1Paginator = FriendshipsOutgoingV1Paginator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}