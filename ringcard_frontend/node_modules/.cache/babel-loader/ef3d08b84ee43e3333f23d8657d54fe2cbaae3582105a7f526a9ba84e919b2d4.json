{"ast":null,"code":"import _slicedToArray from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import React,{useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var Oauth2=function Oauth2(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];useEffect(function(){axios.get(\"/oauth2\").then(function(res){setUser(res.data);console.log(res.data);}).catch(function(err){console.log(err.config);console.log(err.response.data);});},[]);// const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\n// Consuming a Stream\n// if(BEARER_TOKEN){\n//   const client = new Client(BEARER_TOKEN);\n//   async function OauthTwitter() {\n//     const stream = client.tweets.sampleStream({\n//       \"tweet.fields\": [\"author_id\"],\n//     });\n//     for await (const tweet of stream) {\n//       console.log(tweet.data?.author_id);\n//     }\n//     return(null);\n//   }\n//   return(<div><OauthTwitter/></div>)\n// }\n// Getting a Tweet\n// if(BEARER_TOKEN){\n//   const client = new Client(BEARER_TOKEN);\n//   async function GettingATweet() {\n//     const tweet = await client.tweets.findTweetById(\"20\");\n//     // console.log(tweet.data.text);\n//     console.log(tweet);\n//   }\n//     return(null);\n// }\n// oauth2-bearer.ts \n// if(BEARER_TOKEN){\n//   async function Oauth2Bearer() {\n//     const client = new Client(BEARER_TOKEN);\n//     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n//     if (!data) throw new Error(\"Couldn't find user\");\n//     let count = 0;\n//     for await (const followers of client.users.usersIdFollowers(data.id)) {\n//       console.log(followers);\n//       if (++count === 3) {\n//         break;\n//       }\n//     }\n//     return (<div></div>);\n//   }\n// }\n// if(BEARER_TOKEN){\n//     const client = new Client(BEARER_TOKEN);\n//     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n//     if (!data) throw new Error(\"Couldn't find user\");\n//     let count = 0;\n//     for await (const followers of client.users.usersIdFollowers(data.id)) {\n//       console.log(followers);\n//       if (++count === 3) {\n//         break;\n//       }\n//     }\n//     return (<div></div>);\n// }\n// return (<p>1<GettingATweet/></p>)\nreturn/*#__PURE__*/_jsx(\"div\",{children:\"1ewrwerewrwerwer\"});};export default Oauth2;","map":{"version":3,"names":["axios","React","useEffect","useState","Oauth2","user","setUser","get","then","res","data","console","log","catch","err","config","response"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Oauth2.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Client } from \"twitter-api-sdk\";\r\n\r\n\r\nconst Oauth2=()=>{\r\n\r\n  const [user, setUser] = useState<any>([]);\r\n  \r\n  useEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/oauth2\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetUser(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.config);\r\n\t\t\t\tconsole.log(err.response.data);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n  // oauth2-bearer.ts \r\n  // if(BEARER_TOKEN){\r\n  //   async function Oauth2Bearer() {\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  //   }\r\n  // }\r\n\r\n  // if(BEARER_TOKEN){\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  // }\r\n\r\n  // return (<p>1<GettingATweet/></p>)\r\n  return (<div>1ewrwerewrwerwer</div>)\r\n  \r\n  \r\n}\r\n\r\nexport default Oauth2;"],"mappings":"iJAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,MAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,2CAInD,GAAMC,OAAM,CAAC,QAAPA,OAAM,EAAK,CAEf,cAAwBD,QAAQ,CAAM,EAAE,CAAC,wCAAlCE,IAAI,eAAEC,OAAO,eAEpBJ,SAAS,CAAC,UAAM,CAChBF,KAAK,CACHO,GAAG,CAAC,SAAS,CAAC,CACdC,IAAI,CAAC,SAACC,GAAG,CAAK,CACdH,OAAO,CAACG,GAAG,CAACC,IAAI,CAAC,CACjBC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACC,IAAI,CAAC,CACtB,CAAC,CAAC,CACDG,KAAK,CAAC,SAACC,GAAG,CAAK,CACfH,OAAO,CAACC,GAAG,CAACE,GAAG,CAACC,MAAM,CAAC,CACvBJ,OAAO,CAACC,GAAG,CAACE,GAAG,CAACE,QAAQ,CAACN,IAAI,CAAC,CAC/B,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEL;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,mBAAQ,yCAA2B,CAGrC,CAAC,CAED,cAAeN,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}