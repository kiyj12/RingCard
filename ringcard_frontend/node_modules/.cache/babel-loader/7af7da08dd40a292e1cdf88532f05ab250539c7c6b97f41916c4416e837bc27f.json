{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx\";\nimport QuestionNote from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnswerForTheQuestion(answer, question) {\n  if (answer.questionId === question.id) {\n    return answer;\n  }\n}\n_c = AnswerForTheQuestion;\nfunction findAnswer(answer, question) {\n  if (answer.getQuestionId === question.id) {\n    console.log(question);\n    console.log(answer);\n    return answer;\n  }\n}\nfunction QuestionNoteList(props) {\n  const QandAmap = props.map;\n  // answerList.forEach(AnswerForTheQuestion);\n  // const answer = answerList.find(AnswerForTheQuestion(question));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-notes-container\",\n      children: QandAmap.map((QA, idx) =>\n      /*#__PURE__*/\n      // answerList.find(a => a.questionId === question.id);\n      _jsxDEV(QuestionNote, {\n        idx: idx,\n        question: question,\n        answerList: answerList\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c2 = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerForTheQuestion\");\n$RefreshReg$(_c2, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNote","React","AnswerForTheQuestion","answer","question","questionId","id","findAnswer","getQuestionId","console","log","QuestionNoteList","props","QandAmap","map","QA","idx","answerList"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNote from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tmap: any;\n}\n\nfunction AnswerForTheQuestion(\n\tanswer: { questionId: any },\n\tquestion: { id: any }\n) {\n\tif (answer.questionId === question.id) {\n\t\treturn answer;\n\t}\n}\n\nfunction findAnswer(answer: any, question: any) {\n\tif (answer.getQuestionId === question.id) {\n\t\tconsole.log(question);\n\t\tconsole.log(answer);\n\t\treturn answer;\n\t}\n}\n\nfunction QuestionNoteList(props: Props) {\n\tconst QandAmap = props.map;\n\t// answerList.forEach(AnswerForTheQuestion);\n\t// const answer = answerList.find(AnswerForTheQuestion(question));\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{QandAmap.map((QA, idx) => (\n\t\t\t\t\t// answerList.find(a => a.questionId === question.id);\n\n\t\t\t\t\t<QuestionNote\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\tanswerList={answerList}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":";AAMA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAM1B,SAASC,oBAAoB,CAC5BC,MAA2B,EAC3BC,QAAqB,EACpB;EACD,IAAID,MAAM,CAACE,UAAU,KAAKD,QAAQ,CAACE,EAAE,EAAE;IACtC,OAAOH,MAAM;EACd;AACD;AAAC,KAPQD,oBAAoB;AAS7B,SAASK,UAAU,CAACJ,MAAW,EAAEC,QAAa,EAAE;EAC/C,IAAID,MAAM,CAACK,aAAa,KAAKJ,QAAQ,CAACE,EAAE,EAAE;IACzCG,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrBK,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;IACnB,OAAOA,MAAM;EACd;AACD;AAEA,SAASQ,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;EAC1B;EACA;EACA,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,0BAA0B;MAAA,UACvCD,QAAQ,CAACC,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG;MAAA;MACrB;MAEA,QAAC,YAAY;QAEZ,GAAG,EAAEA,GAAI;QACT,QAAQ,EAAEZ,QAAS;QACnB,UAAU,EAAEa;MAAW,GAHlBD,GAAG;QAAA;QAAA;QAAA;MAAA,QAKT;IAAC;MAAA;MAAA;MAAA;IAAA;EACG,iBACJ;AAEL;AAAC,MApBQL,gBAAgB;AAsBzB,eAAeA,gBAAgB;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}