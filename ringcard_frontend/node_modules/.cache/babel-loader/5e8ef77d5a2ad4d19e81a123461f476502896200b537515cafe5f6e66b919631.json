{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\home\\\\HomeTrashcan.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/layout/layout.css\";\nimport \"../../styles/home.css\";\nimport Header from \"../../components/Header\";\nimport Navigation from \"../../components/Navigation\";\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport Toast from \"../../components/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeUnanswered() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const page = searchParams.get('page');\n  const [questionList, setQuestionList] = useState([]);\n  const [totalPages, setTotalPages] = useState();\n  const [pageNumber, setPageNumber] = useState(0);\n  const [deleted, setDeleted] = useState(false);\n  const pageAddress = \"trashcan\";\n  useEffect(() => {\n    axios.get(\"/home/\" + pageAddress + \"?page=\" + page).then(res => {\n      console.log(res.data);\n      setQuestionList(res.data.content);\n      setTotalPages(res.data.totalPages);\n      setPageNumber(res.data.number);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const handleClearTrashcanClick = async () => {\n    await axios.get(\"/home/trashcan/clearTrashcan\").then(res => {\n      console.log(\"Successfully enter handleClearTrashcanClick in HomeTrashcan :D\");\n      console.log(res.data);\n      setDeleted(true);\n      window.history.go(0);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  function RedirectAndInputErrors() {\n    if (deleted) {\n      // 위 조건 만족할 때만 loginForm으로 새로고침\n      localStorage.setItem(\"toastShow\", \"1\");\n      localStorage.setItem(\"toastText\", \"개인 정보가 수정되었습니다.\");\n      window.location.href = \"/trashcan\";\n      return null;\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Toast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(RedirectAndInputErrors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      page: page,\n      pageAddress: pageAddress,\n      totalPages: totalPages,\n      pageNumber: pageNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-body\",\n      children: /*#__PURE__*/_jsxDEV(QuestionNoteList, {\n        questionList: questionList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clear-trashcan\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/buttons/home-trashcan-tab-active-button.svg\",\n        onClick: handleClearTrashcanClick,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear-trashcan-text\",\n        children: \"\\uBE44\\uC6B0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n_s(HomeUnanswered, \"Duu9UkDalfIWXV9xYokJ32oAxPA=\", false, function () {\n  return [useSearchParams];\n});\n_c = HomeUnanswered;\nexport default HomeUnanswered;\nvar _c;\n$RefreshReg$(_c, \"HomeUnanswered\");","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Navigation","QuestionNoteList","useSearchParams","Toast","HomeUnanswered","searchParams","page","get","questionList","setQuestionList","totalPages","setTotalPages","pageNumber","setPageNumber","deleted","setDeleted","pageAddress","then","res","console","log","data","content","number","catch","err","handleClearTrashcanClick","window","history","go","RedirectAndInputErrors","localStorage","setItem","location","href"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/home/HomeTrashcan.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/home.css\";\r\nimport Header from \"../../components/Header\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Toast from \"../../components/Toast\";\r\n\r\n\r\nfunction HomeUnanswered() {\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst page = searchParams.get('page');\r\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\r\n\tconst [totalPages, setTotalPages] = useState<number>();\r\n\tconst [pageNumber, setPageNumber] = useState(0);\r\n\tconst [deleted, setDeleted] = useState(false);\r\n\tconst pageAddress = \"trashcan\";\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/home/\"+pageAddress+\"?page=\"+page)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetQuestionList(res.data.content);\r\n\t\t\t\tsetTotalPages(res.data.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.number);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst handleClearTrashcanClick = async () => {\r\n\t\tawait axios\r\n\t\t\t.get(\"/home/trashcan/clearTrashcan\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleClearTrashcanClick in HomeTrashcan :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetDeleted(true);\r\n\t\t\t\twindow.history.go(0);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors(){\r\n\t\tif(deleted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\r\n\t\t\tlocalStorage.setItem(\"toastText\", \"개인 정보가 수정되었습니다.\");\r\n\t\t\twindow.location.href = \"/trashcan\"\r\n\t\t\treturn (null);\r\n\t\t}\r\n\t\treturn (null);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header />\r\n\t\t\t<Toast/>\r\n\t\t\t<RedirectAndInputErrors/>\r\n\t\t\t<Navigation page={page} pageAddress={pageAddress} totalPages={totalPages} pageNumber={pageNumber} />\r\n\r\n\t\t\t<div className=\"container-body\">\r\n\t\t\t\t<QuestionNoteList questionList={questionList} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"clear-trashcan\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"/buttons/home-trashcan-tab-active-button.svg\"\r\n\t\t\t\t\tonClick={handleClearTrashcanClick}\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"clear-trashcan-text\">비우기</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomeUnanswered;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}