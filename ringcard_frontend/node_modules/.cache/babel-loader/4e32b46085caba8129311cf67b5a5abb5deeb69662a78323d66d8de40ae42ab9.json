{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerForm.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerForm(props) {\n  _s();\n  const questionId = String(props.questionId);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n\n    // <AnswerCompletedPage questionId={questionId} />;\n\n    try {\n      let result = await axios.post(\"/question/\" + questionId + \"/unanswered/user\", data, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(result);\n      console.log(result.headers);\n      console.log(result.data);\n    } catch (err) {\n      console.log(err);\n    }\n\n    // .then(() => {\n    // \tconsole.log(\"posthere\");\n    // \tconsole.log(data);\n    // })\n    // .catch((err) => {\n    // \tconsole.log(err);\n    // });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isDirty,\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"answerAdd\",\n        children: \"\\uB2F5\\uBCC0 \\uD3FC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"answerAdd\",\n        placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        ...register(\"answerContents\", {\n          required: \"답변이 입력되지 않았습니다.\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB2F5\\uBCC0 \\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(AnswerForm, \"DsNT/3u61uB1xk+KpT8RYnOnRq0=\", false, function () {\n  return [useForm];\n});\n_c = AnswerForm;\nexport default AnswerForm;\nvar _c;\n$RefreshReg$(_c, \"AnswerForm\");","map":{"version":3,"names":["axios","useForm","AnswerForm","props","questionId","String","onSubmit","data","Promise","r","setTimeout","console","log","result","post","headers","err","register","handleSubmit","formState","isSubmitting","isDirty","errors","required"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerForm.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport AnswerCompletedPage from \"../pages/question/AnswerCompletedPage\";\n\nexport interface Props {\n\tquestionId: number;\n}\n\nfunction AnswerForm(props: Props) {\n\tconst questionId = String(props.questionId);\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\n\t\t// alert(JSON.stringify(data));\n\t\tconsole.log(data);\n\n\t\t// <AnswerCompletedPage questionId={questionId} />;\n\n\t\ttry {\n\t\t\tlet result = await axios.post(\n\t\t\t\t\"/question/\" + questionId + \"/unanswered/user\",\n\t\t\t\tdata, {headers:{\"Content-Type\" : \"application/json\"}}\n\t\t\t);\n\t\t\tconsole.log(result);\n\t\t\tconsole.log(result.headers);\n\t\t\tconsole.log(result.data);\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\n\t\t// .then(() => {\n\t\t// \tconsole.log(\"posthere\");\n\t\t// \tconsole.log(data);\n\t\t// })\n\t\t// .catch((err) => {\n\t\t// \tconsole.log(err);\n\t\t// });\n\t};\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { isSubmitting, isDirty, errors },\n\t} = useForm();\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div>\n\t\t\t\t<label htmlFor=\"answerAdd\">답변 폼</label>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"answerAdd\"\n\t\t\t\t\tplaceholder=\"답변을 입력하세요\"\n\t\t\t\t\t{...register(\"answerContents\", {\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\n\t\t\t\t\t})}\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\">답변 등록</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default AnswerForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AAAC;AAO1C,SAASC,UAAU,CAACC,KAAY,EAAE;EAAA;EACjC,MAAMC,UAAU,GAAGC,MAAM,CAACF,KAAK,CAACC,UAAU,CAAC;EAE3C,MAAME,QAAQ,GAAG,MAAOC,IAAS,IAAK;IACrC,MAAM,IAAIC,OAAO,CAAEC,CAAC,IAAKC,UAAU,CAACD,CAAC,EAAE,GAAG,CAAC,CAAC;;IAE5C;IACAE,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;;IAEjB;;IAEA,IAAI;MACH,IAAIM,MAAM,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC5B,YAAY,GAAGV,UAAU,GAAG,kBAAkB,EAC9CG,IAAI,EAAE;QAACQ,OAAO,EAAC;UAAC,cAAc,EAAG;QAAkB;MAAC,CAAC,CACrD;MACDJ,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;MACnBF,OAAO,CAACC,GAAG,CAACC,MAAM,CAACE,OAAO,CAAC;MAC3BJ,OAAO,CAACC,GAAG,CAACC,MAAM,CAACN,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACbL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IACjB;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAAC;;EAED,MAAM;IACLC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC,YAAY;MAAEC,OAAO;MAAEC;IAAO;EAC5C,CAAC,GAAGrB,OAAO,EAAE;EAEb,oBACC;IAAM,QAAQ,EAAEiB,YAAY,CAACZ,QAAQ,CAAE;IAAA,wBACtC;MAAA,wBACC;QAAO,OAAO,EAAC,WAAW;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACvC;QACC,EAAE,EAAC,WAAW;QACd,WAAW,EAAC,mDAAW;QAAA,GACnBW,QAAQ,CAAC,gBAAgB,EAAE;UAC9BM,QAAQ,EAAE;QACX,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP,eACN;MAAA,uBACC;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAe;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAET;AAAC,GAvDQrB,UAAU;EAAA,QAoCdD,OAAO;AAAA;AAAA,KApCHC,UAAU;AAyDnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}