{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx\";\nimport QuestionNote from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionNoteList(props) {\n  const answerList = props.answerList;\n  // answerList.forEach(AnswerForTheQuestion);\n  // const answer = answerList.find(AnswerForTheQuestion(question));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-notes-container\",\n      children: props.questionList.map((question, idx) =>\n      /*#__PURE__*/\n      // answerList.find(a => a.questionId === question.id);\n      _jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(QuestionNote, {\n          idx: idx,\n          question: question,\n          answerList: answerList\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c;\n$RefreshReg$(_c, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNote","React","QuestionNoteList","props","answerList","questionList","map","question","idx"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNote from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tquestionList: IQuestion[];\n\tanswerList: IAnswer[];\n}\n\n\nfunction QuestionNoteList(props: Props) {\n\tconst answerList = props.answerList;\n\t// answerList.forEach(AnswerForTheQuestion);\n\t// const answer = answerList.find(AnswerForTheQuestion(question));\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{props.questionList.map((question, idx) => (\n\t\t\t\t\t// answerList.find(a => a.questionId === question.id);\n\t\t\t\t\t<React.Fragment>\n\n\t\t\t\t\t\t\t\t<QuestionNote\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\tquestion={question}\n\t\t\t\t\t\t\t\t\tanswerList={answerList}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":";AAMA,OAAOA,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAQ1B,SAASC,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAU;EACnC;EACA;EACA,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,0BAA0B;MAAA,UACvCD,KAAK,CAACE,YAAY,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,GAAG;MAAA;MACrC;MACA,QAAC,KAAK,CAAC,QAAQ;QAAA,uBAEZ,QAAC,YAAY;UAEZ,GAAG,EAAEA,GAAI;UACT,QAAQ,EAAED,QAAS;UACnB,UAAU,EAAEH;QAAW,GAHlBI,GAAG;UAAA;UAAA;UAAA;QAAA;MAIP;QAAA;QAAA;QAAA;MAAA,QAGL;IAAC;MAAA;MAAA;MAAA;IAAA;EACG,iBACJ;AAEL;AAAC,KAvBQN,gBAAgB;AAyBzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}