{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readNextPartOf = exports.sleepSecs = exports.getMediaCategoryByMime = exports.getMimeType = exports.getFileSizeFromFileHandle = exports.getFileHandle = exports.readFileIntoBuffer = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../types\");\nasync function readFileIntoBuffer(file) {\n  const handle = await getFileHandle(file);\n  if (typeof handle === 'number') {\n    return new Promise((resolve, reject) => {\n      fs.readFile(handle, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        resolve(data);\n      });\n    });\n  } else if (handle instanceof Buffer) {\n    return handle;\n  } else {\n    return handle.readFile();\n  }\n}\nexports.readFileIntoBuffer = readFileIntoBuffer;\nfunction getFileHandle(file) {\n  if (typeof file === 'string') {\n    return fs.promises.open(file, 'r');\n  } else if (typeof file === 'number') {\n    return file;\n  } else if (typeof file === 'object' && !(file instanceof Buffer)) {\n    return file;\n  } else if (!(file instanceof Buffer)) {\n    throw new Error('Given file is not valid, please check its type.');\n  } else {\n    return file;\n  }\n}\nexports.getFileHandle = getFileHandle;\nasync function getFileSizeFromFileHandle(fileHandle) {\n  // Get the file size\n  if (typeof fileHandle === 'number') {\n    const stats = await new Promise((resolve, reject) => {\n      fs.fstat(fileHandle, (err, stats) => {\n        if (err) reject(err);\n        resolve(stats);\n      });\n    });\n    return stats.size;\n  } else if (fileHandle instanceof Buffer) {\n    return fileHandle.length;\n  } else {\n    return (await fileHandle.stat()).size;\n  }\n}\nexports.getFileSizeFromFileHandle = getFileSizeFromFileHandle;\nfunction getMimeType(file, type, mimeType) {\n  if (typeof mimeType === 'string') {\n    return mimeType;\n  } else if (typeof file === 'string' && !type) {\n    return getMimeByName(file);\n  } else if (typeof type === 'string') {\n    return getMimeByType(type);\n  }\n  throw new Error('You must specify type if file is a file handle or Buffer.');\n}\nexports.getMimeType = getMimeType;\nfunction getMimeByName(name) {\n  if (name.endsWith('.jpeg') || name.endsWith('.jpg')) return types_1.EUploadMimeType.Jpeg;\n  if (name.endsWith('.png')) return types_1.EUploadMimeType.Png;\n  if (name.endsWith('.webp')) return types_1.EUploadMimeType.Webp;\n  if (name.endsWith('.gif')) return types_1.EUploadMimeType.Gif;\n  if (name.endsWith('.mpeg4') || name.endsWith('.mp4')) return types_1.EUploadMimeType.Mp4;\n  if (name.endsWith('.srt')) return types_1.EUploadMimeType.Srt;\n  (0, helpers_1.safeDeprecationWarning)({\n    instance: 'TwitterApiv1ReadWrite',\n    method: 'uploadMedia',\n    problem: `options.mimeType is missing and filename couldn't help to resolve MIME type, so it will fallback to image/jpeg`,\n    resolution: `If you except to give filenames without extensions, please specify explicitlty the MIME type using options.mimeType`\n  });\n  return types_1.EUploadMimeType.Jpeg;\n}\nfunction getMimeByType(type) {\n  (0, helpers_1.safeDeprecationWarning)({\n    instance: 'TwitterApiv1ReadWrite',\n    method: 'uploadMedia',\n    problem: `you're using options.type`,\n    resolution: `Remove options.type argument and migrate to options.mimeType which takes the real MIME type. ` + `If you're using type=longmp4, add options.longVideo alongside of mimeType=EUploadMimeType.Mp4`\n  });\n  if (type === 'gif') return types_1.EUploadMimeType.Gif;\n  if (type === 'jpg') return types_1.EUploadMimeType.Jpeg;\n  if (type === 'png') return types_1.EUploadMimeType.Png;\n  if (type === 'webp') return types_1.EUploadMimeType.Webp;\n  if (type === 'srt') return types_1.EUploadMimeType.Srt;\n  if (type === 'mp4' || type === 'longmp4') return types_1.EUploadMimeType.Mp4;\n  return type;\n}\nfunction getMediaCategoryByMime(name, target) {\n  if (name === types_1.EUploadMimeType.Mp4) return target === 'tweet' ? 'TweetVideo' : 'DmVideo';\n  if (name === types_1.EUploadMimeType.Gif) return target === 'tweet' ? 'TweetGif' : 'DmGif';\n  if (name === types_1.EUploadMimeType.Srt) return 'Subtitles';else return target === 'tweet' ? 'TweetImage' : 'DmImage';\n}\nexports.getMediaCategoryByMime = getMediaCategoryByMime;\nfunction sleepSecs(seconds) {\n  return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\nexports.sleepSecs = sleepSecs;\nasync function readNextPartOf(file, chunkLength) {\n  let bufferOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let buffer = arguments.length > 3 ? arguments[3] : undefined;\n  if (file instanceof Buffer) {\n    const rt = file.slice(bufferOffset, bufferOffset + chunkLength);\n    return [rt, rt.length];\n  }\n  if (!buffer) {\n    throw new Error('Well, we will need a buffer to store file content.');\n  }\n  let bytesRead;\n  if (typeof file === 'number') {\n    bytesRead = await new Promise((resolve, reject) => {\n      fs.read(file, buffer, 0, chunkLength, bufferOffset, (err, nread) => {\n        if (err) reject(err);\n        resolve(nread);\n      });\n    });\n  } else {\n    const res = await file.read(buffer, 0, chunkLength, bufferOffset);\n    bytesRead = res.bytesRead;\n  }\n  return [buffer, bytesRead];\n}\nexports.readNextPartOf = readNextPartOf;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","readNextPartOf","sleepSecs","getMediaCategoryByMime","getMimeType","getFileSizeFromFileHandle","getFileHandle","readFileIntoBuffer","fs","require","helpers_1","types_1","file","handle","Promise","resolve","reject","readFile","err","data","Buffer","promises","open","Error","fileHandle","stats","fstat","size","length","stat","type","mimeType","getMimeByName","getMimeByType","name","endsWith","EUploadMimeType","Jpeg","Png","Webp","Gif","Mp4","Srt","safeDeprecationWarning","instance","method","problem","resolution","target","seconds","setTimeout","chunkLength","bufferOffset","buffer","rt","slice","bytesRead","read","nread","res"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/twitter-api-v2/dist/v1/media-helpers.v1.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readNextPartOf = exports.sleepSecs = exports.getMediaCategoryByMime = exports.getMimeType = exports.getFileSizeFromFileHandle = exports.getFileHandle = exports.readFileIntoBuffer = void 0;\nconst fs = __importStar(require(\"fs\"));\nconst helpers_1 = require(\"../helpers\");\nconst types_1 = require(\"../types\");\nasync function readFileIntoBuffer(file) {\n    const handle = await getFileHandle(file);\n    if (typeof handle === 'number') {\n        return new Promise((resolve, reject) => {\n            fs.readFile(handle, (err, data) => {\n                if (err) {\n                    return reject(err);\n                }\n                resolve(data);\n            });\n        });\n    }\n    else if (handle instanceof Buffer) {\n        return handle;\n    }\n    else {\n        return handle.readFile();\n    }\n}\nexports.readFileIntoBuffer = readFileIntoBuffer;\nfunction getFileHandle(file) {\n    if (typeof file === 'string') {\n        return fs.promises.open(file, 'r');\n    }\n    else if (typeof file === 'number') {\n        return file;\n    }\n    else if (typeof file === 'object' && !(file instanceof Buffer)) {\n        return file;\n    }\n    else if (!(file instanceof Buffer)) {\n        throw new Error('Given file is not valid, please check its type.');\n    }\n    else {\n        return file;\n    }\n}\nexports.getFileHandle = getFileHandle;\nasync function getFileSizeFromFileHandle(fileHandle) {\n    // Get the file size\n    if (typeof fileHandle === 'number') {\n        const stats = await new Promise((resolve, reject) => {\n            fs.fstat(fileHandle, (err, stats) => {\n                if (err)\n                    reject(err);\n                resolve(stats);\n            });\n        });\n        return stats.size;\n    }\n    else if (fileHandle instanceof Buffer) {\n        return fileHandle.length;\n    }\n    else {\n        return (await fileHandle.stat()).size;\n    }\n}\nexports.getFileSizeFromFileHandle = getFileSizeFromFileHandle;\nfunction getMimeType(file, type, mimeType) {\n    if (typeof mimeType === 'string') {\n        return mimeType;\n    }\n    else if (typeof file === 'string' && !type) {\n        return getMimeByName(file);\n    }\n    else if (typeof type === 'string') {\n        return getMimeByType(type);\n    }\n    throw new Error('You must specify type if file is a file handle or Buffer.');\n}\nexports.getMimeType = getMimeType;\nfunction getMimeByName(name) {\n    if (name.endsWith('.jpeg') || name.endsWith('.jpg'))\n        return types_1.EUploadMimeType.Jpeg;\n    if (name.endsWith('.png'))\n        return types_1.EUploadMimeType.Png;\n    if (name.endsWith('.webp'))\n        return types_1.EUploadMimeType.Webp;\n    if (name.endsWith('.gif'))\n        return types_1.EUploadMimeType.Gif;\n    if (name.endsWith('.mpeg4') || name.endsWith('.mp4'))\n        return types_1.EUploadMimeType.Mp4;\n    if (name.endsWith('.srt'))\n        return types_1.EUploadMimeType.Srt;\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: `options.mimeType is missing and filename couldn't help to resolve MIME type, so it will fallback to image/jpeg`,\n        resolution: `If you except to give filenames without extensions, please specify explicitlty the MIME type using options.mimeType`,\n    });\n    return types_1.EUploadMimeType.Jpeg;\n}\nfunction getMimeByType(type) {\n    (0, helpers_1.safeDeprecationWarning)({\n        instance: 'TwitterApiv1ReadWrite',\n        method: 'uploadMedia',\n        problem: `you're using options.type`,\n        resolution: `Remove options.type argument and migrate to options.mimeType which takes the real MIME type. ` +\n            `If you're using type=longmp4, add options.longVideo alongside of mimeType=EUploadMimeType.Mp4`,\n    });\n    if (type === 'gif')\n        return types_1.EUploadMimeType.Gif;\n    if (type === 'jpg')\n        return types_1.EUploadMimeType.Jpeg;\n    if (type === 'png')\n        return types_1.EUploadMimeType.Png;\n    if (type === 'webp')\n        return types_1.EUploadMimeType.Webp;\n    if (type === 'srt')\n        return types_1.EUploadMimeType.Srt;\n    if (type === 'mp4' || type === 'longmp4')\n        return types_1.EUploadMimeType.Mp4;\n    return type;\n}\nfunction getMediaCategoryByMime(name, target) {\n    if (name === types_1.EUploadMimeType.Mp4)\n        return target === 'tweet' ? 'TweetVideo' : 'DmVideo';\n    if (name === types_1.EUploadMimeType.Gif)\n        return target === 'tweet' ? 'TweetGif' : 'DmGif';\n    if (name === types_1.EUploadMimeType.Srt)\n        return 'Subtitles';\n    else\n        return target === 'tweet' ? 'TweetImage' : 'DmImage';\n}\nexports.getMediaCategoryByMime = getMediaCategoryByMime;\nfunction sleepSecs(seconds) {\n    return new Promise(resolve => setTimeout(resolve, seconds * 1000));\n}\nexports.sleepSecs = sleepSecs;\nasync function readNextPartOf(file, chunkLength, bufferOffset = 0, buffer) {\n    if (file instanceof Buffer) {\n        const rt = file.slice(bufferOffset, bufferOffset + chunkLength);\n        return [rt, rt.length];\n    }\n    if (!buffer) {\n        throw new Error('Well, we will need a buffer to store file content.');\n    }\n    let bytesRead;\n    if (typeof file === 'number') {\n        bytesRead = await new Promise((resolve, reject) => {\n            fs.read(file, buffer, 0, chunkLength, bufferOffset, (err, nread) => {\n                if (err)\n                    reject(err);\n                resolve(nread);\n            });\n        });\n    }\n    else {\n        const res = await file.read(buffer, 0, chunkLength, bufferOffset);\n        bytesRead = res.bytesRead;\n    }\n    return [buffer, bytesRead];\n}\nexports.readNextPartOf = readNextPartOf;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}