{"ast":null,"code":"import React from\"react\";import TwitterLogin from\"react-twitter-login\";import{jsx as _jsx}from\"react/jsx-runtime\";var Oauth2=function Oauth2(){var authHandler=function authHandler(err,data){console.log(err,data);};// const [user, setUser] = useState<any>([]);\n// useEffect(() => {\n// \taxios\n// \t\t.get(\"/oauth2\")\n// \t\t.then((res) => {\n// \t\t\tsetUser(res.data);\n// \t\t\tconsole.log(res.data);\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tconsole.log(err.config);\n// \t\t\tconsole.log(err.response.data);\n// \t\t});\n// }, []);\n// const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\n// const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\n// Consuming a Stream\n// if(BEARER_TOKEN){\n//   const client = new Client(BEARER_TOKEN);\n//   async function OauthTwitter() {\n//     const stream = client.tweets.sampleStream({\n//       \"tweet.fields\": [\"author_id\"],\n//     });\n//     for await (const tweet of stream) {\n//       console.log(tweet.data?.author_id);\n//     }\n//     return(null);\n//   }\n//   return(<div><OauthTwitter/></div>)\n// }\n// Getting a Tweet\n// if(BEARER_TOKEN){\n//   const client = new Client(BEARER_TOKEN);\n//   async function GettingATweet() {\n//     const tweet = await client.tweets.findTweetById(\"20\");\n//     // console.log(tweet.data.text);\n//     console.log(tweet);\n//   }\n//     return(null);\n// }\n// oauth2-bearer.ts \n// if(BEARER_TOKEN){\n//   async function Oauth2Bearer() {\n//     const client = new Client(BEARER_TOKEN);\n//     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n//     if (!data) throw new Error(\"Couldn't find user\");\n//     let count = 0;\n//     for await (const followers of client.users.usersIdFollowers(data.id)) {\n//       console.log(followers);\n//       if (++count === 3) {\n//         break;\n//       }\n//     }\n//     return (<div></div>);\n//   }\n// }\n// if(BEARER_TOKEN){\n//     const client = new Client(BEARER_TOKEN);\n//     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n//     if (!data) throw new Error(\"Couldn't find user\");\n//     let count = 0;\n//     for await (const followers of client.users.usersIdFollowers(data.id)) {\n//       console.log(followers);\n//       if (++count === 3) {\n//         break;\n//       }\n//     }\n//     return (<div></div>);\n// }\nvar CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;var CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;function TestOauth(){if(CONSUMER_KEY&&CONSUMER_SECRET){return/*#__PURE__*/_jsx(TwitterLogin,{authCallback:authHandler,consumerKey:CONSUMER_KEY,consumerSecret:CONSUMER_SECRET});}else{2;return/*#__PURE__*/_jsx(\"div\",{});}}// return (<p>1<GettingATweet/></p>)\nreturn/*#__PURE__*/_jsx(TestOauth,{});};export default Oauth2;","map":{"version":3,"names":["React","TwitterLogin","Oauth2","authHandler","err","data","console","log","CONSUMER_KEY","process","env","REACT_APP_CONSUMER_KEY","CONSUMER_SECRET","REACT_APP_CONSUMER_SECRET","TestOauth"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Oauth2.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TwitterLogin from \"react-twitter-login\";\r\nimport { Client } from \"twitter-api-sdk\";\r\nimport { TwitterApi } from 'twitter-api-v2';\r\n\r\nconst Oauth2=()=>{\r\n\r\n\r\n  const authHandler = (err:any, data:any) => {\r\n    console.log(err, data);\r\n  };\r\n\r\n  // const [user, setUser] = useState<any>([]);\r\n  \r\n  // useEffect(() => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/oauth2\")\r\n\t// \t\t.then((res) => {\r\n\t// \t\t\tsetUser(res.data);\r\n\t// \t\t\tconsole.log(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err.config);\r\n\t// \t\t\tconsole.log(err.response.data);\r\n\t// \t\t});\r\n\t// }, []);\r\n\r\n\r\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\r\n\r\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n  // oauth2-bearer.ts \r\n  // if(BEARER_TOKEN){\r\n  //   async function Oauth2Bearer() {\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  //   }\r\n  // }\r\n\r\n  // if(BEARER_TOKEN){\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  // }\r\n\r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  function TestOauth(){\r\n    if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\r\n      authCallback={authHandler}\r\n      consumerKey={CONSUMER_KEY}\r\n      consumerSecret={CONSUMER_SECRET}\r\n    />)}\r\n    else{2\r\n      return(<div></div>)\r\n    }\r\n  }\r\n  // return (<p>1<GettingATweet/></p>)\r\n  return (\r\n    <TestOauth/>\r\n  );\r\n}\r\n\r\nexport default Oauth2;"],"mappings":"AACA,MAAOA,MAAK,KAA+B,OAAO,CAClD,MAAOC,aAAY,KAAM,qBAAqB,CAAC,2CAI/C,GAAMC,OAAM,CAAC,QAAPA,OAAM,EAAK,CAGf,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAIC,GAAO,CAAEC,IAAQ,CAAK,CACzCC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAEC,IAAI,CAAC,CACxB,CAAC,CAED;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMG,aAAY,CAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACrD,GAAMC,gBAAe,CAACH,OAAO,CAACC,GAAG,CAACG,yBAAyB,CAC3D,QAASC,UAAS,EAAE,CAClB,GAAGN,YAAY,EAAEI,eAAe,CAAC,CAAC,mBAAO,KAAC,YAAY,EACpD,YAAY,CAAET,WAAY,CAC1B,WAAW,CAAEK,YAAa,CAC1B,cAAc,CAAEI,eAAgB,EAChC,CAAC,CAAC,IACA,CAAC,CAAC,CACJ,mBAAO,cAAW,CACpB,CACF,CACA;AACA,mBACE,KAAC,SAAS,IAAE,CAEhB,CAAC,CAED,cAAeV,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}