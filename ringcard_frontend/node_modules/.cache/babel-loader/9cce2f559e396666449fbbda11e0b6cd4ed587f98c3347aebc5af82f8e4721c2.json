{"ast":null,"code":"import _objectSpread from\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import HeaderRingcaShort from\"../../components/HeaderRingcaShort\";import\"../../styles/layout/layout.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FindPassword(){useEffect(function(){axios.get(\"/findPassword\").then(function(res){console.log(res.data);}).catch(function(err){console.log(err);});},[]);var _useState=useState({bindingResultHasErrors:false,noEmailLikeThat:false}),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];// submitted==true여야 새로고침 되도록.\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitted=_useState4[0],setSubmitted=_useState4[1];var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(r){return setTimeout(r,100);});case 2:// alert(JSON.stringify(data));\nconsole.log(data);_context.next=5;return axios.post(\"/findPassword\",data).then(function(res){console.log(res.data);if(res.data.isEmailPresent){alert(\"입력된 이메일로 임시비밀번호를 전송했습니다.\");setSubmitted(true);setResponse(res.data);window.location.href=\"/loginForm\";}else{alert(\"가입되지 않은 이메일입니다!\");}}).catch(function(err){console.log(err.config);});case 5:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();// $(\"#checkEmail\").click(\nfunction handleSendPwdClick(){}// );\nfunction RedirectAndInputErrors(){if(response.bindingResultHasErrors&&response.noEmailLikeThat){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"noEmailLikeThat\"})]});}else if(response.bindingResultHasErrors){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"});}else if(response.noEmailLikeThat){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"noEmailLikeThat\"});}else if(submitted){// 위 조건 만족할 때만 loginForm으로 새로고침\nwindow.location.href=\"/loginForm\";return null;}return null;}var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,_useForm$formState=_useForm.formState,isSubmitting=_useForm$formState.isSubmitting,isDirty=_useForm$formState.isDirty,errors=_useForm$formState.errors;return/*#__PURE__*/_jsxs(\"div\",{className:\"FindPassword-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(HeaderRingcaShort,{}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),name:\"sendEmail\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC785\\uB825\\uD55C \\uC774\\uBA54\\uC77C\\uB85C \\uC784\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC804\\uC1A1\\uB429\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div-light user-icon-email-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-icon-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"user-inner-transparent\",type:\"email\"},register(\"userEmail\",{required:\"가입할 때 입력한 이메일을 입력해주세요.\"})))]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn\",id:\"checkEmail\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uBC1C\\uC1A1\"})})]})]}),/*#__PURE__*/_jsx(RedirectAndInputErrors,{})]});}export default FindPassword;","map":{"version":3,"names":["axios","useEffect","useState","useForm","HeaderRingcaShort","FindPassword","get","then","res","console","log","data","catch","err","bindingResultHasErrors","noEmailLikeThat","response","setResponse","submitted","setSubmitted","onSubmit","Promise","r","setTimeout","post","isEmailPresent","alert","window","location","href","config","handleSendPwdClick","RedirectAndInputErrors","register","handleSubmit","formState","isSubmitting","isDirty","errors","required"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/FindPassword.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport HeaderRingcaShort from \"../../components/HeaderRingcaShort\";\nimport \"../../styles/layout/layout.css\";\n\nfunction FindPassword() {\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/findPassword\")\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}, []);\n\ttype ResponseList = {\n\t\tbindingResultHasErrors: boolean;\n\t\tnoEmailLikeThat: boolean;\n\t};\n\tconst [response, setResponse] = useState<ResponseList>({\n\t\tbindingResultHasErrors: false,\n\t\tnoEmailLikeThat: false,\n\t});\n\t// submitted==true여야 새로고침 되도록.\n\tconst [submitted, setSubmitted] = useState(false);\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\n\t\t// alert(JSON.stringify(data));\n\t\tconsole.log(data);\n\n\t\tawait axios\n\t\t\t.post(\"/findPassword\", data)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tif (res.data.isEmailPresent) {\n\t\t\t\t\talert(\"입력된 이메일로 임시비밀번호를 전송했습니다.\");\n\t\t\t\t\tsetSubmitted(true);\n\t\t\t\t\tsetResponse(res.data);\n\t\t\t\t\twindow.location.href = \"/loginForm\";\n\t\t\t\t} else {\n\t\t\t\t\talert(\"가입되지 않은 이메일입니다!\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err.config);\n\t\t\t});\n\t};\n\n\t// $(\"#checkEmail\").click(\n\n\tfunction handleSendPwdClick() {}\n\t// );\n\n\tfunction RedirectAndInputErrors() {\n\t\tif (response.bindingResultHasErrors && response.noEmailLikeThat) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"user-text-error\">bindingResultHasErrors</div>\n\t\t\t\t\t<div className=\"user-text-error\">noEmailLikeThat</div>\n\t\t\t\t</>\n\t\t\t);\n\t\t} else if (response.bindingResultHasErrors) {\n\t\t\treturn <div className=\"user-text-error\">bindingResultHasErrors</div>;\n\t\t} else if (response.noEmailLikeThat) {\n\t\t\treturn <div className=\"user-text-error\">noEmailLikeThat</div>;\n\t\t} else if (submitted) {\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\n\t\t\twindow.location.href = \"/loginForm\";\n\t\t\treturn null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { isSubmitting, isDirty, errors },\n\t} = useForm();\n\n\treturn (\n\t\t<div className=\"FindPassword-container\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<HeaderRingcaShort />\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} name=\"sendEmail\">\n\t\t\t\t\t<p>입력한 이메일로 임시 비밀번호가 전송됩니다.</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"user-box-in\">\n\t\t\t\t\t\t\t<div className=\"user-text\">이메일</div>\n\t\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-email-light\">\n\t\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t{...register(\"userEmail\", {\n\t\t\t\t\t\t\t\t\t\trequired: \"가입할 때 입력한 이메일을 입력해주세요.\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn\" id=\"checkEmail\">\n\t\t\t\t\t\t\t비밀번호 발송\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<RedirectAndInputErrors />\n\t\t</div>\n\t);\n}\n\nexport default FindPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}