{"ast":null,"code":"import _objectSpread from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"../../styles/layout/layout.css\";import\"../../styles/layout/header.css\";import\"../../styles/user/userHeader.css\";import\"../../styles/user/userBox.css\";import\"../../styles/user/userIcon.css\";import\"../../styles/editUserInfo.css\";import HeaderNoProfile from\"../../components/HeaderNoProfile\";import{useForm}from\"react-hook-form\";import UserProfile from\"../../components/UserProfile\";import Toastify from\"../../components/Toast\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EditUserInfo=function EditUserInfo(){var _useState=useState({overlappedUsername:false}),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];// submitted==true여야 새로고침 되도록.\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitted=_useState4[0],setSubmitted=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),user=_useState6[0],setUser=_useState6[1];useEffect(function(){axios.get(\"/mypage/info/edit\").then(function(res){setUser(res.data);console.log(res.data);}).catch(function(err){console.log(err.config);console.log(err.response.data);});},[]);function BtnToEditPw(){function handleClick(e){window.location.href=\"/mypage/edit/password\";}return/*#__PURE__*/_jsx(\"button\",{className:\"user-box-btn\",onClick:handleClick,children:\"\\uBCC0\\uACBD\"});}var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(r){return setTimeout(r,100);});case 2:// alert(JSON.stringify(data));\nconsole.log(data);_context.next=5;return axios.post(\"/mypage/info/edit\",data).then(function(res){console.log(\"postHere\");console.log(data);setResponse(res.data);console.log(res.data);setSubmitted(true);}).catch(function(error){console.log(error.config);});case 5:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();function RedirectAndInputErrors(){if(response.overlappedUsername){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"overlappedUsername\"});}else if(submitted){// 위 조건 만족할 때만 loginForm으로 새로고침\nlocalStorage.setItem(\"toastShow\",\"1\");localStorage.setItem(\"toastText\",\"개인 정보가 수정되었습니다.\");window.location.href=\"/mypage/info/edit\";return null;}return null;}var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,_useForm$formState=_useForm.formState,isSubmitting=_useForm$formState.isSubmitting,isDirty=_useForm$formState.isDirty,errors=_useForm$formState.errors;return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit(onSubmit),children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(HeaderNoProfile,{}),/*#__PURE__*/_jsx(Toastify,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"userInfo-profile-container\",children:[/*#__PURE__*/_jsx(UserProfile,{}),/*#__PURE__*/_jsx(\"div\",{className:\"user-profile-name\",children:user.userRingcardName})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"user-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"user-icon user-icon-user-light\",defaultValue:user.userRingcardName,placeholder:\"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"},register(\"userRingcardName\",{required:\"답변이 입력되지 않았습니다.\"})))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{className:\"user-icon user-icon-id-dark\"// defaultValue={user.username}\n,placeholder:user.username,readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div user-icon-dark\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"user-inner-transparent\",defaultValue:\"\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\"// placeholder=\"●●●●●●●●●●\"\n,readOnly:true}),/*#__PURE__*/_jsx(BtnToEditPw,{})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"user-icon user-icon-email-light\",defaultValue:user.userEmail,placeholder:\"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",type:\"email\"},register(\"userEmail\",{required:\"답변이 입력되지 않았습니다.\"})))]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-box-in\",children:/*#__PURE__*/_jsx(RedirectAndInputErrors,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"user-box-in\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"user-btn editUserInfo-btn\",children:/*#__PURE__*/_jsx(\"div\",{className:\"user-btn-text\",children:\"\\uBCC0\\uACBD \\uC0AC\\uD56D \\uC800\\uC7A5\\uD558\\uAE30\"})})})]})})]})});};export default EditUserInfo;","map":{"version":3,"names":["React","useState","useEffect","axios","HeaderNoProfile","useForm","UserProfile","Toastify","EditUserInfo","overlappedUsername","response","setResponse","submitted","setSubmitted","user","setUser","get","then","res","data","console","log","catch","err","config","BtnToEditPw","handleClick","e","window","location","href","onSubmit","Promise","r","setTimeout","post","error","RedirectAndInputErrors","localStorage","setItem","register","handleSubmit","formState","isSubmitting","isDirty","errors","userRingcardName","required","username","userEmail"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/mypage/EditUserInfo.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/editUserInfo.css\";\r\nimport HeaderNoProfile from \"../../components/HeaderNoProfile\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UserProfile from \"../../components/UserProfile\";\r\nimport Toastify from \"../../components/Toast\";\r\n\r\nconst EditUserInfo = () => {\r\n\r\n\ttype ResponseList = {\r\n\t\toverlappedUsername: boolean;\r\n\t}\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\toverlappedUsername: false\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst [user, setUser] = useState<any>([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/mypage/info/edit\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetUser(res.data);\r\n\t\t\t\tconsole.log(res.data)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.config);\r\n\t\t\t\tconsole.log(err.response.data);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n  function BtnToEditPw(){\r\n\t\tfunction handleClick(e: any){\r\n\t\t\t\twindow.location.href=\"/mypage/edit/password\"\r\n\t\t}\r\n\t\t\treturn(\r\n\t\t\t\t<button className=\"user-box-btn\" onClick={handleClick}>변경</button>\r\n\t\t\t)\r\n\t}\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/mypage/info/edit\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors(){\r\n\t\tif(response.overlappedUsername){\r\n\t\t\treturn (\r\n\t\t\t<div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if(submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\r\n\t\t\tlocalStorage.setItem(\"toastText\", \"개인 정보가 수정되었습니다.\");\r\n\t\t\twindow.location.href = \"/mypage/info/edit\"\r\n\t\t\treturn (null);\r\n\t\t}\r\n\t\treturn (null);\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\treturn (\r\n\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t<div className=\"container\">\r\n\t\t\t<HeaderNoProfile />\r\n\t\t\t<Toastify/>\r\n      <div className=\"userInfo-profile-container\">\r\n\t\t\t\t<UserProfile/>\r\n\t\t\t\t<div className=\"user-profile-name\">{user.userRingcardName}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">이름</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"user-icon user-icon-user-light\"\r\n\t\t\t\t\t\t\tdefaultValue={user.userRingcardName}\r\n\t\t\t\t\t\t\tplaceholder=\"이름을 입력해주세요\"\r\n\t\t\t\t\t\t\t{...register(\"userRingcardName\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <i if=\"${param.overlappedUsername}\" text=\"'이미 존재하는 아이디입니다.'\"></i> */}\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"user-icon user-icon-id-dark\"\r\n\t\t\t\t\t\t\t// defaultValue={user.username}\r\n\t\t\t\t\t\t\tplaceholder={user.username}\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div user-icon-dark\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\tdefaultValue=\"●●●●●●●●●●\"\r\n\t\t\t\t\t\t\t\t// placeholder=\"●●●●●●●●●●\"\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t<BtnToEditPw/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">이메일</div>\r\n\t\t\t\t\t<input className=\"user-icon user-icon-email-light\" defaultValue={user.userEmail} placeholder=\"이메일을 입력해주세요\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t{...register(\"userEmail\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<RedirectAndInputErrors/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<button type=\"submit\" className=\"user-btn editUserInfo-btn\">\r\n\t\t\t\t\t\t<div className=\"user-btn-text\">변경 사항 저장하기</div>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</form>\r\n\t);\r\n};\r\n\r\nexport default EditUserInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}