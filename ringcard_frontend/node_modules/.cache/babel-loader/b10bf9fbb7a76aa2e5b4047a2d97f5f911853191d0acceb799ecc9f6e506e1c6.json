{"ast":null,"code":"import QuestionNoteAnony from\"./QuestionNoteAnony\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function makeTapeUrl(tapeType){var tapeTypeStr=String(tapeType);var result=String(\"/masking-tapes/tape\"+tapeTypeStr+\".svg\");return result;}function makeTapePosition(tapePosition){var tapePositionList=[\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -25px;\",\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -22.5px; transform: rotate(6deg);\",\"width: 120px; height: 28px; transform: rotate(-30deg); margin: -10px auto -15px -40px;\",\"width: 130px; height: 28px; transform: rotate(-18deg); margin: -20px auto -30px -30px;\",\"width: 130px; height: 28px; transform: rotate(20deg); margin: -12px -40px -10px auto;\",\"width: 100px; height: 28px; transform: rotate(36deg); margin: -10px -40px -10px auto;\"];var chosenPosition=tapePositionList[tapePosition];}function QuestionNoteList(props){var QandAmap=props.map;var tapeImages=document.getElementsByClassName(\"QuestionNote-maskingTape-img\");var tapeImageList=Array.from(tapeImages);// tapeImageList.forEach((tapeImage) => {\n// \tconst chosenPosition =\n// \t\ttapePositionList[Math.floor(Math.random() * cntPosition)];\n// \ttapeImage.setAttribute(\"style\", chosenPosition);\n// });\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"question-notes-container\",children:QandAmap.map(function(QA,idx){return/*#__PURE__*/_jsx(QuestionNoteAnony,{idx:idx,question:QA[0],answer:QA[1],tapeUrl:makeTapeUrl(QA[0].tapeType)},idx);})})});}export default QuestionNoteList;","map":{"version":3,"names":["QuestionNoteAnony","React","makeTapeUrl","tapeType","tapeTypeStr","String","result","makeTapePosition","tapePosition","tapePositionList","chosenPosition","QuestionNoteList","props","QandAmap","map","tapeImages","document","getElementsByClassName","tapeImageList","Array","from","QA","idx"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tmap: [IQuestion, IAnswer][];\n}\n\nfunction makeTapeUrl(tapeType: Number) {\n\tconst tapeTypeStr = String(tapeType);\n\tconst result = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n\treturn result;\n}\n\nfunction makeTapePosition(tapePosition: any) {\n\tconst tapePositionList = [\n\t\t\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -25px;\",\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -22.5px; transform: rotate(6deg);\",\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: -10px auto -15px -40px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: -20px auto -30px -30px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: -12px -40px -10px auto;\",\n\t\t\"width: 100px; height: 28px; transform: rotate(36deg); margin: -10px -40px -10px auto;\",\n\t];\n\tconst chosenPosition = tapePositionList[tapePosition];\n}\n\nfunction QuestionNoteList(props: Props) {\n\tconst QandAmap = props.map;\n\n\tconst tapeImages = document.getElementsByClassName(\n\t\t\"QuestionNote-maskingTape-img\"\n\t);\n\n\tvar tapeImageList = Array.from(tapeImages);\n\n\t// tapeImageList.forEach((tapeImage) => {\n\t// \tconst chosenPosition =\n\t// \t\ttapePositionList[Math.floor(Math.random() * cntPosition)];\n\t// \ttapeImage.setAttribute(\"style\", chosenPosition);\n\t// });\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{QandAmap.map((QA, idx) => (\n\t\t\t\t\t<QuestionNoteAnony\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tquestion={QA[0]}\n\t\t\t\t\t\tanswer={QA[1]}\n\t\t\t\t\t\ttapeUrl={makeTapeUrl(QA[0].tapeType)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":"AAMA,MAAOA,kBAAiB,KAAM,qBAAqB,CACnD,MAAOC,MAAK,KAAM,OAAO,CAAC,gGAM1B,QAASC,YAAW,CAACC,QAAgB,CAAE,CACtC,GAAMC,YAAW,CAAGC,MAAM,CAACF,QAAQ,CAAC,CACpC,GAAMG,OAAM,CAAGD,MAAM,CAAC,qBAAqB,CAAGD,WAAW,CAAG,MAAM,CAAC,CACnE,MAAOE,OAAM,CACd,CAEA,QAASC,iBAAgB,CAACC,YAAiB,CAAE,CAC5C,GAAMC,iBAAgB,CAAG,CACxB,kEAAkE,CAClE,kGAAkG,CAClG,wFAAwF,CACxF,wFAAwF,CACxF,uFAAuF,CACvF,uFAAuF,CACvF,CACD,GAAMC,eAAc,CAAGD,gBAAgB,CAACD,YAAY,CAAC,CACtD,CAEA,QAASG,iBAAgB,CAACC,KAAY,CAAE,CACvC,GAAMC,SAAQ,CAAGD,KAAK,CAACE,GAAG,CAE1B,GAAMC,WAAU,CAAGC,QAAQ,CAACC,sBAAsB,CACjD,8BAA8B,CAC9B,CAED,GAAIC,cAAa,CAAGC,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC,CAE1C;AACA;AACA;AACA;AACA;AAEA,mBACC,sCACC,YAAK,SAAS,CAAC,0BAA0B,UACvCF,QAAQ,CAACC,GAAG,CAAC,SAACO,EAAE,CAAEC,GAAG,qBACrB,KAAC,iBAAiB,EAEjB,GAAG,CAAEA,GAAI,CACT,QAAQ,CAAED,EAAE,CAAC,CAAC,CAAE,CAChB,MAAM,CAAEA,EAAE,CAAC,CAAC,CAAE,CACd,OAAO,CAAEnB,WAAW,CAACmB,EAAE,CAAC,CAAC,CAAC,CAAClB,QAAQ,CAAE,EAJhCmB,GAAG,CAKP,EACF,CAAC,EACG,EACJ,CAEL,CAEA,cAAeX,iBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}