{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx\";\nimport QuestionNote from \"./QuestionNoteAnony\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnswerForTheQuestion(element, question) {\n  if (element.questionId === question.id) {\n    return element;\n  }\n}\n_c = AnswerForTheQuestion;\nfunction QuestionNoteList(props) {\n  const answerList = props.answerList;\n  const answer = answerList.map;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-notes-container\",\n      children: props.questionList.map((question, idx) => /*#__PURE__*/_jsxDEV(QuestionNote, {\n        idx: idx,\n        question: question,\n        answer: answerList.find(question.id)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c2 = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c, _c2;\n$RefreshReg$(_c, \"AnswerForTheQuestion\");\n$RefreshReg$(_c2, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNote","AnswerForTheQuestion","element","question","questionId","id","QuestionNoteList","props","answerList","answer","map","questionList","idx","find"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNote from \"./QuestionNoteAnony\";\n\nexport interface Props {\n\tquestionList: IQuestion[];\n\tanswerList: IAnswer[];\n}\n\nfunction AnswerForTheQuestion(element, question) {\n\tif(element.questionId === question.id) {\n\t\treturn element\n\t}\n}\n\nfunction QuestionNoteList(props: Props) {\n\tconst answerList = props.answerList;\n\tconst answer = answerList.map\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{props.questionList.map((question, idx) => (\n\t\t\t\t\t<QuestionNote key={idx} idx={idx} question={question} answer={answerList.find(question.id)}/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":";AAMA,OAAOA,YAAY,MAAM,qBAAqB;AAAC;AAAA;AAO/C,SAASC,oBAAoB,CAACC,OAAO,EAAEC,QAAQ,EAAE;EAChD,IAAGD,OAAO,CAACE,UAAU,KAAKD,QAAQ,CAACE,EAAE,EAAE;IACtC,OAAOH,OAAO;EACf;AACD;AAAC,KAJQD,oBAAoB;AAM7B,SAASK,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,UAAU,GAAGD,KAAK,CAACC,UAAU;EACnC,MAAMC,MAAM,GAAGD,UAAU,CAACE,GAAG;EAC7B,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,0BAA0B;MAAA,UACvCH,KAAK,CAACI,YAAY,CAACD,GAAG,CAAC,CAACP,QAAQ,EAAES,GAAG,kBACrC,QAAC,YAAY;QAAW,GAAG,EAAEA,GAAI;QAAC,QAAQ,EAAET,QAAS;QAAC,MAAM,EAAEK,UAAU,CAACK,IAAI,CAACV,QAAQ,CAACE,EAAE;MAAE,GAAxEO,GAAG;QAAA;QAAA;QAAA;MAAA,QACtB;IAAC;MAAA;MAAA;MAAA;IAAA;EACG,iBACJ;AAEL;AAAC,MAZQN,gBAAgB;AAczB,eAAeA,gBAAgB;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}