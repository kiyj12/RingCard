{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnsweredQuestionNote.tsx\";\nimport HyperlinkBox from \"./HyperlinkBox\";\nimport NowDate from \"./NowDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnsweredQuestionNote(props) {\n  const question = props.question;\n  const answer = props.answer;\n  const tapePositionList = [\"width: 130px; height: 28px; margin: 0 auto; margin-top: -8px;\", \"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -2.5px; transform: rotate(6deg);\", \"width: 120px; height: 28px; transform: rotate(-30deg); margin: 7px auto -15px -13px;\", \"width: 130px; height: 28px; transform: rotate(-18deg); margin: 3px auto -30px -8px;\", \"width: 130px; height: 28px; transform: rotate(20deg); margin: 6px -9px -10px auto;\", \"width: 100px; height: 28px; transform: rotate(36deg); margin: 8px -11px -10px auto;\"];\n  const chosenPosition = tapePositionList[question.tapePosition - 1];\n  const qIdStr = String(question.id);\n  const tapeTypeStr = String(question.tapeType);\n  const tapeUrl = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n  const eachNote = document.getElementById(qIdStr);\n  eachNote === null || eachNote === void 0 ? void 0 : eachNote.setAttribute(\"style\", chosenPosition);\n  const qNoteType = String(question.noteType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"each-question-note-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionNote-maskingTape-box\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"QuestionNote-maskingTape-img\",\n        id: qIdStr,\n        src: tapeUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"each-question-note-header-edge-img-box\",\n      style: {\n        backgroundImage: `url(\"/notes/note${qNoteType}-top-edge.png\")`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"each-question-note-body\",\n      style: {\n        backgroundImage: `url(\"/notes/note${qNoteType}-body.png\")`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-note-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-profile-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/profile-imgs/oring_2.png\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(NowDate, {\n          questionUploadTime: question.uploadTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-note-content-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"each-note-content\",\n          children: question.questionContents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), question.questionHyperlink == null || question.questionHyperlink === \"\" ? undefined : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuestionNote-note-hyperlink-box\",\n        children: /*#__PURE__*/_jsxDEV(HyperlinkBox, {\n          hyperlinkContent: question.questionHyperlink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"note-hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-note-answer-content-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"AnsweredQuestionNote-answer-content\",\n          children: answer.answerContents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"each-question-note-footer-edge-img-box\",\n      style: {\n        backgroundImage: `url(\"/notes/note${qNoteType}-bottom-edge.png\")`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n_c = AnsweredQuestionNote;\nexport default AnsweredQuestionNote;\nvar _c;\n$RefreshReg$(_c, \"AnsweredQuestionNote\");","map":{"version":3,"names":["HyperlinkBox","NowDate","AnsweredQuestionNote","props","question","answer","tapePositionList","chosenPosition","tapePosition","qIdStr","String","id","tapeTypeStr","tapeType","tapeUrl","eachNote","document","getElementById","setAttribute","qNoteType","noteType","backgroundImage","uploadTime","questionContents","questionHyperlink","undefined","answerContents"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnsweredQuestionNote.tsx"],"sourcesContent":["import HyperlinkBox from \"./HyperlinkBox\";\nimport NowDate from \"./NowDate\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nexport interface Props {\n\tquestion: IQuestion;\n\tanswer: IAnswer;\n}\n\nfunction AnsweredQuestionNote(props: Props) {\n\tconst question = props.question;\n\tconst answer = props.answer;\n\n\tconst tapePositionList = [\n\t\t\"width: 130px; height: 28px; margin: 0 auto; margin-top: -8px;\",\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -2.5px; transform: rotate(6deg);\",\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: 7px auto -15px -13px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: 3px auto -30px -8px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: 6px -9px -10px auto;\",\n\t\t\"width: 100px; height: 28px; transform: rotate(36deg); margin: 8px -11px -10px auto;\",\n\t];\n\tconst chosenPosition = tapePositionList[question.tapePosition - 1];\n\n\tconst qIdStr = String(question.id);\n\tconst tapeTypeStr = String(question.tapeType);\n\tconst tapeUrl = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n\n\tconst eachNote = document.getElementById(qIdStr);\n\teachNote?.setAttribute(\"style\", chosenPosition);\n\n\tconst qNoteType = String(question.noteType);\n\n\treturn (\n\t\t<div className=\"each-question-note-box\">\n\t\t\t<div className=\"QuestionNote-maskingTape-box\">\n\t\t\t\t<img\n\t\t\t\t\tclassName=\"QuestionNote-maskingTape-img\"\n\t\t\t\t\tid={qIdStr}\n\t\t\t\t\tsrc={tapeUrl}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"each-question-note-header-edge-img-box\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-top-edge.png\")`,\n\t\t\t\t}}\n\t\t\t></div>\n\t\t\t<div\n\t\t\t\tclassName=\"each-question-note-body\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-body.png\")`,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"each-note-header\">\n\t\t\t\t\t<div className=\"note-profile-pic\">\n\t\t\t\t\t\t<img src=\"/profile-imgs/oring_2.png\" alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<NowDate questionUploadTime={question.uploadTime} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"each-note-content-box\">\n\t\t\t\t\t<div className=\"each-note-content\">{question.questionContents}</div>\n\t\t\t\t</div>\n\t\t\t\t{question.questionHyperlink == null ||\n\t\t\t\tquestion.questionHyperlink === \"\" ? undefined : (\n\t\t\t\t\t<div className=\"QuestionNote-note-hyperlink-box\">\n\t\t\t\t\t\t<HyperlinkBox hyperlinkContent={question.questionHyperlink} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<hr className=\"note-hr\" />\n\t\t\t\t<div className=\"each-note-answer-content-box\">\n\t\t\t\t\t{/* <div className=\"AnsweredQuestionNote-answer-profile-pic\">\n\t\t\t\t\t\t<img src=\"/profile.png\" alt=\"\" />\n\t\t\t\t\t</div> */}\n\t\t\t\t\t<div className=\"AnsweredQuestionNote-answer-content\">\n\t\t\t\t\t\t{answer.answerContents}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"each-question-note-footer-edge-img-box\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-bottom-edge.png\")`,\n\t\t\t\t}}\n\t\t\t></div>\n\t\t</div>\n\t);\n}\n\nexport default AnsweredQuestionNote;\n"],"mappings":";AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,WAAW;AAAC;AAQhC,SAASC,oBAAoB,CAACC,KAAY,EAAE;EAC3C,MAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;EAC/B,MAAMC,MAAM,GAAGF,KAAK,CAACE,MAAM;EAE3B,MAAMC,gBAAgB,GAAG,CACxB,+DAA+D,EAC/D,iGAAiG,EACjG,sFAAsF,EACtF,qFAAqF,EACrF,oFAAoF,EACpF,qFAAqF,CACrF;EACD,MAAMC,cAAc,GAAGD,gBAAgB,CAACF,QAAQ,CAACI,YAAY,GAAG,CAAC,CAAC;EAElE,MAAMC,MAAM,GAAGC,MAAM,CAACN,QAAQ,CAACO,EAAE,CAAC;EAClC,MAAMC,WAAW,GAAGF,MAAM,CAACN,QAAQ,CAACS,QAAQ,CAAC;EAC7C,MAAMC,OAAO,GAAGJ,MAAM,CAAC,qBAAqB,GAAGE,WAAW,GAAG,MAAM,CAAC;EAEpE,MAAMG,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAACR,MAAM,CAAC;EAChDM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,YAAY,CAAC,OAAO,EAAEX,cAAc,CAAC;EAE/C,MAAMY,SAAS,GAAGT,MAAM,CAACN,QAAQ,CAACgB,QAAQ,CAAC;EAE3C,oBACC;IAAK,SAAS,EAAC,wBAAwB;IAAA,wBACtC;MAAK,SAAS,EAAC,8BAA8B;MAAA,uBAC5C;QACC,SAAS,EAAC,8BAA8B;QACxC,EAAE,EAAEX,MAAO;QACX,GAAG,EAAEK,OAAQ;QACb,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MACC,SAAS,EAAC,wCAAwC;MAClD,KAAK,EAAE;QACNO,eAAe,EAAG,mBAAkBF,SAAU;MAC/C;IAAE;MAAA;MAAA;MAAA;IAAA,QACI,eACP;MACC,SAAS,EAAC,yBAAyB;MACnC,KAAK,EAAE;QACNE,eAAe,EAAG,mBAAkBF,SAAU;MAC/C,CAAE;MAAA,wBAEF;QAAK,SAAS,EAAC,kBAAkB;QAAA,wBAChC;UAAK,SAAS,EAAC,kBAAkB;UAAA,uBAChC;YAAK,GAAG,EAAC,2BAA2B;YAAC,GAAG,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACzC,eACN,QAAC,OAAO;UAAC,kBAAkB,EAAEf,QAAQ,CAACkB;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,eACN;QAAK,SAAS,EAAC,uBAAuB;QAAA,uBACrC;UAAK,SAAS,EAAC,mBAAmB;UAAA,UAAElB,QAAQ,CAACmB;QAAgB;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QAC/D,EACLnB,QAAQ,CAACoB,iBAAiB,IAAI,IAAI,IACnCpB,QAAQ,CAACoB,iBAAiB,KAAK,EAAE,GAAGC,SAAS,gBAC5C;QAAK,SAAS,EAAC,iCAAiC;QAAA,uBAC/C,QAAC,YAAY;UAAC,gBAAgB,EAAErB,QAAQ,CAACoB;QAAkB;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAE/D,eACD;QAAI,SAAS,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1B;QAAK,SAAS,EAAC,8BAA8B;QAAA,uBAI5C;UAAK,SAAS,EAAC,qCAAqC;UAAA,UAClDnB,MAAM,CAACqB;QAAc;UAAA;UAAA;UAAA;QAAA;MACjB;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACD,eACN;MACC,SAAS,EAAC,wCAAwC;MAClD,KAAK,EAAE;QACNL,eAAe,EAAG,mBAAkBF,SAAU;MAC/C;IAAE;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAER;AAAC,KA9EQjB,oBAAoB;AAgF7B,eAAeA,oBAAoB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}