{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies\n */\nvar url = require('url');\nvar Streamparser = require('./parser');\nvar request = require('request');\nvar extend = require('deep-extend');\n\n// Package version\nvar VERSION = require('../package.json').version;\nfunction Twitter(options) {\n  if (!(this instanceof Twitter)) {\n    return new Twitter(options);\n  }\n  this.VERSION = VERSION;\n\n  // Merge the default options with the client submitted options\n  this.options = extend({\n    consumer_key: null,\n    consumer_secret: null,\n    access_token_key: null,\n    access_token_secret: null,\n    bearer_token: null,\n    rest_base: 'https://api.twitter.com/1.1',\n    stream_base: 'https://stream.twitter.com/1.1',\n    user_stream_base: 'https://userstream.twitter.com/1.1',\n    site_stream_base: 'https://sitestream.twitter.com/1.1',\n    media_base: 'https://upload.twitter.com/1.1',\n    request_options: {\n      headers: {\n        Accept: '*/*',\n        Connection: 'close',\n        'User-Agent': 'node-twitter/' + VERSION\n      }\n    }\n  }, options);\n\n  // Default to user authentication\n  var authentication_options = {\n    oauth: {\n      consumer_key: this.options.consumer_key,\n      consumer_secret: this.options.consumer_secret,\n      token: this.options.access_token_key,\n      token_secret: this.options.access_token_secret\n    }\n  };\n\n  // Check to see if we are going to use User Authentication or Application Authetication\n  if (this.options.bearer_token) {\n    authentication_options = {\n      headers: {\n        Authorization: 'Bearer ' + this.options.bearer_token\n      }\n    };\n  }\n\n  // Configure default request options\n  this.request = request.defaults(extend(this.options.request_options, authentication_options));\n\n  // Check if Promise present\n  this.allow_promise = typeof Promise === 'function';\n}\nTwitter.prototype.__buildEndpoint = function (path, base) {\n  var bases = {\n    'rest': this.options.rest_base,\n    'stream': this.options.stream_base,\n    'user_stream': this.options.user_stream_base,\n    'site_stream': this.options.site_stream_base,\n    'media': this.options.media_base\n  };\n  var endpoint = bases.hasOwnProperty(base) ? bases[base] : bases.rest;\n  // if full url is specified we use that\n  var isFullUrl = url.parse(path).protocol !== null;\n  if (isFullUrl) {\n    endpoint = path;\n  } else {\n    // If the path begins with media or /media\n    if (path.match(/^(\\/)?media/)) {\n      endpoint = bases.media;\n    }\n    endpoint += path.charAt(0) === '/' ? path : '/' + path;\n  }\n\n  // Remove trailing slash\n  endpoint = endpoint.replace(/\\/$/, '');\n  if (!isFullUrl) {\n    // Add json extension if not provided in call... only if a full url is not specified\n    endpoint += path.split('.').pop() !== 'json' ? '.json' : '';\n  }\n  return endpoint;\n};\nTwitter.prototype.__request = function (method, path, params, callback) {\n  var base = 'rest',\n    promise = false;\n\n  // Set the callback if no params are passed\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  // Return promise if no callback is passed and promises available\n  else if (callback === undefined && this.allow_promise) {\n    promise = true;\n  }\n\n  // Set API base\n  if (typeof params.base !== 'undefined') {\n    base = params.base;\n    delete params.base;\n  }\n\n  // Build the options to pass to our custom request object\n  var options = {\n    method: method.toLowerCase(),\n    // Request method - get || post\n    url: this.__buildEndpoint(path, base) // Generate url\n  };\n\n  // Pass url parameters if get\n  if (method === 'get') {\n    options.qs = params;\n  }\n\n  // Pass form data if post\n  if (method === 'post') {\n    var formKey = 'form';\n    if (typeof params.media !== 'undefined') {\n      formKey = 'formData';\n    }\n    options[formKey] = params;\n  }\n\n  // Promisified version\n  if (promise) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      _this.request(options, function (error, response, data) {\n        // request error\n        if (error) {\n          return reject(error);\n        }\n\n        // JSON parse error or empty strings\n        try {\n          // An empty string is a valid response\n          if (data === '') {\n            data = {};\n          } else {\n            data = JSON.parse(data);\n          }\n        } catch (parseError) {\n          return reject(new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage));\n        }\n\n        // response object errors\n        // This should return an error object not an array of errors\n        if (data.errors !== undefined) {\n          return reject(data.errors);\n        }\n\n        // status code errors\n        if (response.statusCode < 200 || response.statusCode > 299) {\n          return reject(new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage));\n        }\n\n        // no errors\n        resolve(data);\n      });\n    });\n  }\n\n  // Callback version\n  this.request(options, function (error, response, data) {\n    // request error\n    if (error) {\n      return callback(error, data, response);\n    }\n\n    // JSON parse error or empty strings\n    try {\n      // An empty string is a valid response\n      if (data === '') {\n        data = {};\n      } else {\n        data = JSON.parse(data);\n      }\n    } catch (parseError) {\n      return callback(new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage), data, response);\n    }\n\n    // response object errors\n    // This should return an error object not an array of errors\n    if (data.errors !== undefined) {\n      return callback(data.errors, data, response);\n    }\n\n    // status code errors\n    if (response.statusCode < 200 || response.statusCode > 299) {\n      return callback(new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage), data, response);\n    }\n    // no errors\n    callback(null, data, response);\n  });\n};\n\n/**\n * GET\n */\nTwitter.prototype.get = function (url, params, callback) {\n  return this.__request('get', url, params, callback);\n};\n\n/**\n * POST\n */\nTwitter.prototype.post = function (url, params, callback) {\n  return this.__request('post', url, params, callback);\n};\n\n/**\n * STREAM\n */\nTwitter.prototype.stream = function (method, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  var base = 'stream';\n  if (method === 'user' || method === 'site') {\n    base = method + '_' + base;\n  }\n  var url = this.__buildEndpoint(method, base);\n  var request = this.request({\n    url: url,\n    qs: params\n  });\n  var stream = new Streamparser();\n  stream.destroy = function () {\n    // FIXME: should we emit end/close on explicit destroy?\n    if (typeof request.abort === 'function') {\n      request.abort(); // node v0.4.0\n    } else {\n      request.socket.destroy();\n    }\n  };\n  request.on('response', function (response) {\n    if (response.statusCode !== 200) {\n      stream.emit('error', new Error('Status Code: ' + response.statusCode));\n    } else {\n      stream.emit('response', response);\n    }\n    response.on('data', function (chunk) {\n      stream.receive(chunk);\n    });\n    response.on('error', function (error) {\n      stream.emit('error', error);\n    });\n    response.on('end', function () {\n      stream.emit('end', response);\n    });\n  });\n  request.on('error', function (error) {\n    stream.emit('error', error);\n  });\n  request.end();\n  if (typeof callback === 'function') {\n    callback(stream);\n  } else {\n    return stream;\n  }\n};\nmodule.exports = Twitter;","map":{"version":3,"names":["url","require","Streamparser","request","extend","VERSION","version","Twitter","options","consumer_key","consumer_secret","access_token_key","access_token_secret","bearer_token","rest_base","stream_base","user_stream_base","site_stream_base","media_base","request_options","headers","Accept","Connection","authentication_options","oauth","token","token_secret","Authorization","defaults","allow_promise","Promise","prototype","__buildEndpoint","path","base","bases","endpoint","hasOwnProperty","rest","isFullUrl","parse","protocol","match","media","charAt","replace","split","pop","__request","method","params","callback","promise","undefined","toLowerCase","qs","formKey","_this","resolve","reject","error","response","data","JSON","parseError","Error","statusCode","statusMessage","errors","get","post","stream","destroy","abort","socket","on","emit","chunk","receive","end","module","exports"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/twitter/lib/twitter.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies\n */\n\nvar url = require('url');\nvar Streamparser = require('./parser');\nvar request = require('request');\nvar extend = require('deep-extend');\n\n// Package version\nvar VERSION = require('../package.json').version;\n\nfunction Twitter(options) {\n  if (!(this instanceof Twitter)) { return new Twitter(options) }\n\n  this.VERSION = VERSION;\n\n  // Merge the default options with the client submitted options\n  this.options = extend({\n    consumer_key: null,\n    consumer_secret: null,\n    access_token_key: null,\n    access_token_secret: null,\n    bearer_token: null,\n    rest_base: 'https://api.twitter.com/1.1',\n    stream_base: 'https://stream.twitter.com/1.1',\n    user_stream_base: 'https://userstream.twitter.com/1.1',\n    site_stream_base: 'https://sitestream.twitter.com/1.1',\n    media_base: 'https://upload.twitter.com/1.1',\n    request_options: {\n      headers: {\n        Accept: '*/*',\n        Connection: 'close',\n        'User-Agent': 'node-twitter/' + VERSION\n      }\n    }\n  }, options);\n\n  // Default to user authentication\n  var authentication_options = {\n    oauth: {\n      consumer_key: this.options.consumer_key,\n      consumer_secret: this.options.consumer_secret,\n      token: this.options.access_token_key,\n      token_secret: this.options.access_token_secret\n    }\n  };\n\n  // Check to see if we are going to use User Authentication or Application Authetication\n  if (this.options.bearer_token) {\n    authentication_options = {\n      headers: {\n        Authorization: 'Bearer ' + this.options.bearer_token\n      }\n    };\n  }\n\n  // Configure default request options\n  this.request = request.defaults(\n    extend(\n      this.options.request_options,\n      authentication_options\n    )\n  );\n\n  // Check if Promise present\n  this.allow_promise = (typeof Promise === 'function');\n}\n\nTwitter.prototype.__buildEndpoint = function(path, base) {\n  var bases = {\n    'rest': this.options.rest_base,\n    'stream': this.options.stream_base,\n    'user_stream': this.options.user_stream_base,\n    'site_stream': this.options.site_stream_base,\n    'media': this.options.media_base\n  };\n  var endpoint = (bases.hasOwnProperty(base)) ? bases[base] : bases.rest;\n  // if full url is specified we use that\n  var isFullUrl = (url.parse(path).protocol !== null);\n  if (isFullUrl) {\n    endpoint = path;\n  }\n  else {\n    // If the path begins with media or /media\n    if (path.match(/^(\\/)?media/)) {\n      endpoint = bases.media;\n    }\n    endpoint += (path.charAt(0) === '/') ? path : '/' + path;\n  }\n\n  // Remove trailing slash\n  endpoint = endpoint.replace(/\\/$/, '');\n\n  if(!isFullUrl) {\n    // Add json extension if not provided in call... only if a full url is not specified\n    endpoint += (path.split('.').pop() !== 'json') ? '.json' : '';\n  }\n\n  return endpoint;\n};\n\nTwitter.prototype.__request = function(method, path, params, callback) {\n  var base = 'rest', promise = false;\n\n  // Set the callback if no params are passed\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  // Return promise if no callback is passed and promises available\n  else if (callback === undefined && this.allow_promise) {\n    promise = true;\n  }\n\n  // Set API base\n  if (typeof params.base !== 'undefined') {\n    base = params.base;\n    delete params.base;\n  }\n\n  // Build the options to pass to our custom request object\n  var options = {\n    method: method.toLowerCase(),  // Request method - get || post\n    url: this.__buildEndpoint(path, base) // Generate url\n  };\n\n  // Pass url parameters if get\n  if (method === 'get') {\n    options.qs = params;\n  }\n\n  // Pass form data if post\n  if (method === 'post') {\n    var formKey = 'form';\n\n    if (typeof params.media !== 'undefined') {\n      formKey = 'formData';\n    }\n    options[formKey] = params;\n  }\n\n  // Promisified version\n  if (promise) {\n    var _this = this;\n    return new Promise(function(resolve, reject) {\n      _this.request(options, function(error, response, data) {\n        // request error\n        if (error) {\n          return reject(error);\n        }\n\n        // JSON parse error or empty strings\n        try {\n          // An empty string is a valid response\n          if (data === '') {\n            data = {};\n          }\n          else {\n            data = JSON.parse(data);\n          }\n        }\n        catch(parseError) {\n          return reject(new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage));\n        }\n\n        // response object errors\n        // This should return an error object not an array of errors\n        if (data.errors !== undefined) {\n          return reject(data.errors);\n        }\n\n        // status code errors\n        if(response.statusCode < 200 || response.statusCode > 299) {\n          return reject(new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage));\n        }\n\n        // no errors\n        resolve(data);\n      });\n    });\n  }\n\n  // Callback version\n  this.request(options, function(error, response, data) {\n    // request error\n    if (error) {\n      return callback(error, data, response);\n    }\n\n    // JSON parse error or empty strings\n    try {\n      // An empty string is a valid response\n      if (data === '') {\n        data = {};\n      }\n      else {\n        data = JSON.parse(data);\n      }\n    }\n    catch(parseError) {\n      return callback(\n        new Error('JSON parseError with HTTP Status: ' + response.statusCode + ' ' + response.statusMessage),\n        data,\n        response\n      );\n    }\n\n\n    // response object errors\n    // This should return an error object not an array of errors\n    if (data.errors !== undefined) {\n      return callback(data.errors, data, response);\n    }\n\n    // status code errors\n    if(response.statusCode < 200 || response.statusCode > 299) {\n      return callback(\n        new Error('HTTP Error: ' + response.statusCode + ' ' + response.statusMessage),\n        data,\n        response\n      );\n    }\n    // no errors\n    callback(null, data, response);\n  });\n\n};\n\n/**\n * GET\n */\nTwitter.prototype.get = function(url, params, callback) {\n  return this.__request('get', url, params, callback);\n};\n\n/**\n * POST\n */\nTwitter.prototype.post = function(url, params, callback) {\n  return this.__request('post', url, params, callback);\n};\n\n/**\n * STREAM\n */\nTwitter.prototype.stream = function(method, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n\n  var base = 'stream';\n\n  if (method === 'user' || method === 'site') {\n    base = method + '_' + base;\n  }\n\n  var url = this.__buildEndpoint(method, base);\n  var request = this.request({url: url, qs: params});\n  var stream = new Streamparser();\n\n  stream.destroy = function() {\n    // FIXME: should we emit end/close on explicit destroy?\n    if ( typeof request.abort === 'function' ) {\n      request.abort(); // node v0.4.0\n    }\n    else {\n      request.socket.destroy();\n    }\n  };\n\n  request.on('response', function(response) {\n    if(response.statusCode !== 200) {\n      stream.emit('error', new Error('Status Code: ' + response.statusCode));\n    }\n    else {\n      stream.emit('response', response);\n    }\n\n    response.on('data', function(chunk) {\n      stream.receive(chunk);\n    });\n\n    response.on('error', function(error) {\n      stream.emit('error', error);\n    });\n\n    response.on('end', function() {\n      stream.emit('end', response);\n    });\n  });\n\n  request.on('error', function(error) {\n    stream.emit('error', error);\n  });\n  request.end();\n\n  if (typeof callback === 'function') {\n    callback(stream);\n  }\n  else {\n    return stream;\n  }\n};\n\n\nmodule.exports = Twitter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}