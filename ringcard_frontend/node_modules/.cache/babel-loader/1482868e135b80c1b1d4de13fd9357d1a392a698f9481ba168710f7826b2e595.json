{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/FindPassword.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport HeaderRingcaShort from \"../../components/HeaderRingcaShort\";\nimport \"../../styles/layout/layout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FindPassword() {\n  _s();\n  const [response, setResponse] = useState({\n    bindingResultHasErrors: false,\n    noEmailLikeThat: false\n  });\n  // submitted==true여야 새로고침 되도록.\n  const [submitted, setSubmitted] = useState(false);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    await axios.post(\"/findPassword\", data).then(res => {\n      console.log(res.data);\n      if (res.data.noEmailLikeThat) {\n        alert();\n      }\n      setResponse(res.data);\n      console.log(res.data);\n      setSubmitted(true);\n    }).catch(err => {\n      console.log(err.config);\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isDirty,\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FindPassword-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderRingcaShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        name: \"sendEmail\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC785\\uB825\\uD55C \\uC774\\uBA54\\uC77C\\uB85C \\uC784\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC804\\uC1A1\\uB429\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-in\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-text\",\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-box-div-light user-icon-email-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-icon-bar\",\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"user-inner-transparent\",\n                type: \"email\",\n                ...register(\"userEmail\", {\n                  required: \"가입할 때 입력한 이메일을 입력해주세요.\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn\",\n            id: \"checkEmail\",\n            onClick: handleSendPwdClick,\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBC1C\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(FindPassword, \"6TixVS8TT9UzqaildIbX4SKdnL0=\", false, function () {\n  return [useForm];\n});\n_c = FindPassword;\nexport default FindPassword;\nvar _c;\n$RefreshReg$(_c, \"FindPassword\");","map":{"version":3,"names":["axios","useState","useForm","HeaderRingcaShort","FindPassword","response","setResponse","bindingResultHasErrors","noEmailLikeThat","submitted","setSubmitted","onSubmit","data","Promise","r","setTimeout","console","log","post","then","res","alert","catch","err","config","register","handleSubmit","formState","isSubmitting","isDirty","errors","required","handleSendPwdClick"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/FindPassword.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport HeaderRingcaShort from \"../../components/HeaderRingcaShort\";\nimport \"../../styles/layout/layout.css\";\n\nfunction FindPassword() {\n\ttype ResponseList = {\n\t\tbindingResultHasErrors: boolean;\n\t\tnoEmailLikeThat: boolean;\n\t};\n\tconst [response, setResponse] = useState<ResponseList>({\n\t\tbindingResultHasErrors: false,\n\t\tnoEmailLikeThat: false,\n\t});\n\t// submitted==true여야 새로고침 되도록.\n\tconst [submitted, setSubmitted] = useState(false);\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\n\t\t// alert(JSON.stringify(data));\n\t\tconsole.log(data);\n\n\t\tawait axios\n\t\t\t.post(\"/findPassword\", data)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tif (res.data.noEmailLikeThat) {\n\t\t\t\t\talert()\n\t\t\t\t}\n\t\t\t\tsetResponse(res.data);\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetSubmitted(true);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err.config);\n\t\t\t});\n\t};\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { isSubmitting, isDirty, errors },\n\t} = useForm();\n\n\treturn (\n\t\t<div className=\"FindPassword-container\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<HeaderRingcaShort />\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} name=\"sendEmail\">\n\t\t\t\t\t<p>입력한 이메일로 임시 비밀번호가 전송됩니다.</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"user-box-in\">\n\t\t\t\t\t\t\t<div className=\"user-text\">이메일</div>\n\t\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-email-light\">\n\t\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t{...register(\"userEmail\", {\n\t\t\t\t\t\t\t\t\t\trequired: \"가입할 때 입력한 이메일을 입력해주세요.\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\tid=\"checkEmail\"\n\t\t\t\t\t\t\tonClick={handleSendPwdClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t비밀번호 발송\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FindPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAoBC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAO,gCAAgC;AAAC;AAExC,SAASC,YAAY,GAAG;EAAA;EAKvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAe;IACtDM,sBAAsB,EAAE,KAAK;IAC7BC,eAAe,EAAE;EAClB,CAAC,CAAC;EACF;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,QAAQ,GAAG,MAAOC,IAAS,IAAK;IACrC,MAAM,IAAIC,OAAO,CAAEC,CAAC,IAAKC,UAAU,CAACD,CAAC,EAAE,GAAG,CAAC,CAAC;;IAE5C;IACAE,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IAEjB,MAAMZ,KAAK,CACTkB,IAAI,CAAC,eAAe,EAAEN,IAAI,CAAC,CAC3BO,IAAI,CAAEC,GAAG,IAAK;MACdJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAACR,IAAI,CAAC;MACrB,IAAIQ,GAAG,CAACR,IAAI,CAACJ,eAAe,EAAE;QAC7Ba,KAAK,EAAE;MACR;MACAf,WAAW,CAACc,GAAG,CAACR,IAAI,CAAC;MACrBI,OAAO,CAACC,GAAG,CAACG,GAAG,CAACR,IAAI,CAAC;MACrBF,YAAY,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,CACDY,KAAK,CAAEC,GAAG,IAAK;MACfP,OAAO,CAACC,GAAG,CAACM,GAAG,CAACC,MAAM,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC;EAED,MAAM;IACLC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC,YAAY;MAAEC,OAAO;MAAEC;IAAO;EAC5C,CAAC,GAAG5B,OAAO,EAAE;EAEb,oBACC;IAAK,SAAS,EAAC,wBAAwB;IAAA,uBACtC;MAAK,SAAS,EAAC,WAAW;MAAA,wBACzB,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA,QAAG,eAErB;QAAM,QAAQ,EAAEwB,YAAY,CAACf,QAAQ,CAAE;QAAC,IAAI,EAAC,WAAW;QAAA,wBACvD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA+B,eAC/B;UAAA,uBACC;YAAK,SAAS,EAAC,aAAa;YAAA,wBAC3B;cAAK,SAAS,EAAC,WAAW;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAU,eACpC;cAAK,SAAS,EAAC,0CAA0C;cAAA,wBACxD;gBAAM,SAAS,EAAC,eAAe;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAS,eACxC;gBACC,SAAS,EAAC,wBAAwB;gBAClC,IAAI,EAAC,OAAO;gBAAA,GACRc,QAAQ,CAAC,WAAW,EAAE;kBACzBM,QAAQ,EAAE;gBACX,CAAC;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QACM;YAAA;cAAA;cAAA;cAAA;YAAA,QACJ;UAAA;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA,QACD,eACN;UAAK,SAAS,EAAC,aAAa;UAAA,uBAC3B;YACC,IAAI,EAAC,QAAQ;YACb,SAAS,EAAC,KAAK;YACf,EAAE,EAAC,YAAY;YACf,OAAO,EAAEC,kBAAmB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAGpB;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAEA;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAER;AAAC,GA7EQ5B,YAAY;EAAA,QAsChBF,OAAO;AAAA;AAAA,KAtCHE,YAAY;AA+ErB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}