{"ast":null,"code":"import _objectSpread from\"C:/Users/yuleg/Dev/Ringca/ORIN33copy/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/yuleg/Dev/Ringca/ORIN33copy/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/yuleg/Dev/Ringca/ORIN33copy/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/yuleg/Dev/Ringca/ORIN33copy/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useEffect,useState}from\"react\";import{useForm}from\"react-hook-form\";import\"../styles/answerQuestionNote.css\";import TextareaAutosize from\"react-textarea-autosize\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AnswerForm(props){var questionId=String(props.questionId);// place holder로 넣음.\nvar PropsOldAnswer=String(props.oldAnswer);var _useState=useState(),_useState2=_slicedToArray(_useState,2),oldAnswer=_useState2[0],setOldAnswer=_useState2[1];useEffect(function(){setOldAnswer(PropsOldAnswer);},[PropsOldAnswer]);var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(r){return setTimeout(r,100);});case 2:// alert(JSON.stringify(data));\nconsole.log(data);_context.next=5;return axios.post(\"/question/\"+questionId+\"/edit/user\",data).then(function(res){console.log(\"posthere\");console.log(data);window.location.replace(\"/question/\"+questionId+\"/completed/user\");}).catch(function(error){if(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.log(error.response.data);console.log(error.response.status);console.log(error.response.headers);}else if(error.request){// The request was made but no response was received\n// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n// http.ClientRequest in node.js\nconsole.log(error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.log(\"Error\",error.message);}console.log(error.config);});case 5:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;// 디폴트 밸류로 예전 값 넣는 방법.\n// TODO: 근데 디폴트값이랑 현재값 연동이 안 돼서 보류\n// const {\n// \tregister,\n// \thandleSubmit,\n// \treset,\n// \tformState: { isSubmitting, isDirty, errors },\n// } = useForm({ defaultValues: oldAnswer });\n// useEffect(() => {\n// \tsetOldAnswer(props.oldAnswer);\n// \treset(props.oldAnswer);\n// }, [props.oldAnswer]);\n// // 유저 입력 값을 넣을 변수\n// const [checkItemContent, setCheckItemContent] = useState(\"\");\n// // 줄 수를 계산해서 저장할 변수\n// const [textareaHeight, setTextareaHeight] = useState(0);\n// // 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n// // 엔터('\\n') 개수를 세서 textareaHeight에 저장\n// const checkItemChangeHandler = (event: any) => {\n// \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n// \tsetCheckItemContent(event.target.value);\n// };\n// const checkItemChangeHandler = (event: any) => {\n// \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n// \tsetCheckItemContent(event.target.value);\n// };\nfunction checkLengthHandler(event){var text=event.target.value;var test_length=text.length;//최대 글자수\nvar max_length=5000;if(test_length>max_length){alert(max_length+\"자 이상 작성할 수 없습니다.\");text=text.substr(0,max_length);event.target.value=text;event.target.focus();}}return/*#__PURE__*/_jsxs(\"form\",{className:\"answerForm-answer-form\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"answerForm-text-box checkItem\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"cursur-bar\",children:\"|\"}),/*#__PURE__*/_jsx(TextareaAutosize,_objectSpread({id:\"answerAdd\",className:\"answerForm-textarea\"// value={checkItemContent}\n// onInput={checkItemChangeHandler}\n,defaultValue:oldAnswer// value={oldAnswer}\n,onKeyUp:checkLengthHandler,rows:5,maxRows:10// onChange={onChangeEvent}\n// onHeightChange={onHeightChangeEvent}\n},register(\"answerContents\",{required:\"답변이 입력되지 않았습니다.\"})))]}),/*#__PURE__*/_jsx(\"div\",{className:\"answerForm-btn-box\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:/*#__PURE__*/_jsx(\"img\",{className:\"note-send-answer-btn\",src:\"/buttons/send-answer-btn.svg\",alt:\"\"})})})]});}export default AnswerForm;","map":{"version":3,"names":["axios","useEffect","useState","useForm","TextareaAutosize","AnswerForm","props","questionId","String","PropsOldAnswer","oldAnswer","setOldAnswer","onSubmit","data","Promise","r","setTimeout","console","log","post","then","res","window","location","replace","catch","error","response","status","headers","request","message","config","register","handleSubmit","checkLengthHandler","event","text","target","value","test_length","length","max_length","alert","substr","focus","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33copy/ringcard/ringcard_frontend/src/components/EditAnswerForm.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"../styles/answerQuestionNote.css\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\n\r\nexport interface Props {\r\n\tquestionId: number;\r\n\toldAnswer: String;\r\n}\r\n\r\nfunction AnswerForm(props: Props) {\r\n\tconst questionId = String(props.questionId);\r\n\r\n\t// place holder로 넣음.\r\n\tconst PropsOldAnswer = String(props.oldAnswer);\r\n\tconst [oldAnswer, setOldAnswer] = useState<any>();\r\n\tuseEffect(() => {\r\n\t\tsetOldAnswer(PropsOldAnswer);\r\n\t}, [PropsOldAnswer]);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/question/\" + questionId + \"/edit/user\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"posthere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\twindow.location.replace(\"/question/\" + questionId + \"/completed/user\");\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\t// The request was made and the server responded with a status code\r\n\t\t\t\t\t// that falls out of the range of 2xx\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tconsole.log(error.response.headers);\r\n\t\t\t\t} else if (error.request) {\r\n\t\t\t\t\t// The request was made but no response was received\r\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t\t\t\t// http.ClientRequest in node.js\r\n\t\t\t\t\tconsole.log(error.request);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\r\n\t\t\t\t\tconsole.log(\"Error\", error.message);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\t// formState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// 디폴트 밸류로 예전 값 넣는 방법.\r\n\t// TODO: 근데 디폴트값이랑 현재값 연동이 안 돼서 보류\r\n\t// const {\r\n\t// \tregister,\r\n\t// \thandleSubmit,\r\n\t// \treset,\r\n\t// \tformState: { isSubmitting, isDirty, errors },\r\n\t// } = useForm({ defaultValues: oldAnswer });\r\n\t// useEffect(() => {\r\n\t// \tsetOldAnswer(props.oldAnswer);\r\n\t// \treset(props.oldAnswer);\r\n\t// }, [props.oldAnswer]);\r\n\r\n\t// // 유저 입력 값을 넣을 변수\r\n\t// const [checkItemContent, setCheckItemContent] = useState(\"\");\r\n\t// // 줄 수를 계산해서 저장할 변수\r\n\t// const [textareaHeight, setTextareaHeight] = useState(0);\r\n\r\n\t// // 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\r\n\t// // 엔터('\\n') 개수를 세서 textareaHeight에 저장\r\n\t// const checkItemChangeHandler = (event: any) => {\r\n\t// \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t// \tsetCheckItemContent(event.target.value);\r\n\t// };\r\n\t// const checkItemChangeHandler = (event: any) => {\r\n\t// \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t// \tsetCheckItemContent(event.target.value);\r\n\t// };\r\n\r\n\tfunction checkLengthHandler(event: any) {\r\n\t\tvar text = event.target.value;\r\n\t\tvar test_length = text.length;\r\n\r\n\t\t//최대 글자수\r\n\t\tvar max_length = 5000;\r\n\r\n\t\tif (test_length > max_length) {\r\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\r\n\t\t\ttext = text.substr(0, max_length);\r\n\t\t\tevent.target.value = text;\r\n\t\t\tevent.target.focus();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"answerForm-text-box checkItem\">\r\n\t\t\t\t<span className=\"cursur-bar\">|</span>\r\n\t\t\t\t{/* <textarea\r\n\t\t\t\t\tid=\"answerAdd\"\r\n\t\t\t\t\tclassName=\"answerForm-textarea\"\r\n\t\t\t\t\t// value={checkItemContent}\r\n\t\t\t\t\tonInput={checkItemChangeHandler}\r\n\t\t\t\t\tstyle={{ height: (textareaHeight + 1) * 27 + \"px\" }}\r\n\t\t\t\t\t// placeholder={oldAnswer}\r\n\t\t\t\t\tdefaultValue={oldAnswer} \r\n\t\t\t\t\t{...register(\"answerContents\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t})}\r\n\t\t\t\t></textarea> */}\r\n\r\n\t\t\t\t<TextareaAutosize\r\n\t\t\t\t\tid=\"answerAdd\"\r\n\t\t\t\t\tclassName=\"answerForm-textarea\"\r\n\t\t\t\t\t// value={checkItemContent}\r\n\t\t\t\t\t// onInput={checkItemChangeHandler}\r\n\t\t\t\t\tdefaultValue={oldAnswer}\r\n\t\t\t\t\t// value={oldAnswer}\r\n\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\trows={5}\r\n\t\t\t\t\tmaxRows={10}\r\n\t\t\t\t\t// onChange={onChangeEvent}\r\n\t\t\t\t\t// onHeightChange={onHeightChangeEvent}\r\n\t\t\t\t\t{...register(\"answerContents\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"answerForm-btn-box\">\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AnswerForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}