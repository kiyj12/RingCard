{"ast":null,"code":"const base64url = require('./helpers/base64url');\nconst now = require('./helpers/unix_timestamp');\nclass TokenSet {\n  constructor(values) {\n    Object.assign(this, values);\n    const {\n      constructor,\n      ...properties\n    } = Object.getOwnPropertyDescriptors(this.constructor.prototype);\n    Object.defineProperties(this, properties);\n  }\n  set expires_in(value) {\n    this.expires_at = now() + Number(value);\n  }\n  get expires_in() {\n    return Math.max.apply(null, [this.expires_at - now(), 0]);\n  }\n  expired() {\n    return this.expires_in === 0;\n  }\n  claims() {\n    if (!this.id_token) {\n      throw new TypeError('id_token not present in TokenSet');\n    }\n    return JSON.parse(base64url.decode(this.id_token.split('.')[1]));\n  }\n}\nmodule.exports = TokenSet;","map":{"version":3,"names":["base64url","require","now","TokenSet","constructor","values","Object","assign","properties","getOwnPropertyDescriptors","prototype","defineProperties","expires_in","value","expires_at","Number","Math","max","apply","expired","claims","id_token","TypeError","JSON","parse","decode","split","module","exports"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/openid-client/lib/token_set.js"],"sourcesContent":["const base64url = require('./helpers/base64url');\nconst now = require('./helpers/unix_timestamp');\n\nclass TokenSet {\n  constructor(values) {\n    Object.assign(this, values);\n    const { constructor, ...properties } = Object.getOwnPropertyDescriptors(\n      this.constructor.prototype,\n    );\n\n    Object.defineProperties(this, properties);\n  }\n\n  set expires_in(value) {\n    this.expires_at = now() + Number(value);\n  }\n\n  get expires_in() {\n    return Math.max.apply(null, [this.expires_at - now(), 0]);\n  }\n\n  expired() {\n    return this.expires_in === 0;\n  }\n\n  claims() {\n    if (!this.id_token) {\n      throw new TypeError('id_token not present in TokenSet');\n    }\n\n    return JSON.parse(base64url.decode(this.id_token.split('.')[1]));\n  }\n}\n\nmodule.exports = TokenSet;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAMC,GAAG,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAE/C,MAAME,QAAQ,CAAC;EACbC,WAAW,CAACC,MAAM,EAAE;IAClBC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEF,MAAM,CAAC;IAC3B,MAAM;MAAED,WAAW;MAAE,GAAGI;IAAW,CAAC,GAAGF,MAAM,CAACG,yBAAyB,CACrE,IAAI,CAACL,WAAW,CAACM,SAAS,CAC3B;IAEDJ,MAAM,CAACK,gBAAgB,CAAC,IAAI,EAAEH,UAAU,CAAC;EAC3C;EAEA,IAAII,UAAU,CAACC,KAAK,EAAE;IACpB,IAAI,CAACC,UAAU,GAAGZ,GAAG,EAAE,GAAGa,MAAM,CAACF,KAAK,CAAC;EACzC;EAEA,IAAID,UAAU,GAAG;IACf,OAAOI,IAAI,CAACC,GAAG,CAACC,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAACJ,UAAU,GAAGZ,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;EAC3D;EAEAiB,OAAO,GAAG;IACR,OAAO,IAAI,CAACP,UAAU,KAAK,CAAC;EAC9B;EAEAQ,MAAM,GAAG;IACP,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAClB,MAAM,IAAIC,SAAS,CAAC,kCAAkC,CAAC;IACzD;IAEA,OAAOC,IAAI,CAACC,KAAK,CAACxB,SAAS,CAACyB,MAAM,CAAC,IAAI,CAACJ,QAAQ,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGzB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}