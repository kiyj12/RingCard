{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\components\\\\AnswerForm.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useRef, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useForm } from \"react-hook-form\";\nimport \"../styles/answerQuestionNote.css\";\nimport html2canvas from 'html2canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerForm(props) {\n  _s();\n  const questionId = String(props.questionId);\n  // 트위터 이미지로 전환할 질문 내용.\n  const questionContents = props.questionContents;\n  const [answerContents, setAnswerContents] = useState();\n  const [cookies, setCookie, removeCookie] = useCookies(['accessToken']);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    // 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\n\n    console.log(questionContents);\n    await axios.post(\"/question/\" + questionId + \"/unanswered/user\", data).then(async res => {\n      console.log(\"posthere\");\n      console.log(data.answerContents);\n      setAnswerContents(data.answerContents);\n      // window.location.href = \"/question/\" + questionId + \"/completed/user\";\n\n      if (checked) {\n        const tweetData = {\n          text: \"질문 : \" + questionContents + \"\\n답변 : \" + data.answerContents + \" https://m.place.naver.com/restaurant/1720673456/home?entry=ple\"\n        };\n\n        // const tweetDataTest = {\n        // \t\t\t\t\t\"text\": \"Testing, testing...\\n\\nA new way to have a convo with exactly who you want. We’re starting with a small % globally, so keep your 👀 out to see it in action. https://t.co/pV53mvjAVT\",\n        // \t\t\t\t\t\"id\": \"1263145271946551300\",\n        // \t\t\t\t\t\"attachments\": {\n        // \t\t\t\t\t\t\t\"media_keys\": [\n        // \t\t\t\t\t\t\t\t\t\"13_1263145212760805376\"\n        // \t\t\t\t\t\t\t]\n        // \t\t\t\t\t}\n        // \t\t};\n\n        // const media = \n        // \t\t\t\t{\n        // \t\t\t\t\t\t\t\"duration_ms\": 46947,\n        // \t\t\t\t\t\t\t\"type\": \"video\",\n        // \t\t\t\t\t\t\t\"height\": 1080,\n        // \t\t\t\t\t\t\t\"media_key\": \"13_1263145212760805376\",\n        // \t\t\t\t\t\t\t\"public_metrics\": {\n        // \t\t\t\t\t\t\t\t\t\"view_count\": 6909260\n        // \t\t\t\t\t\t\t},\n        // \t\t\t\t\t\t\t\"preview_image_url\": \"https://pbs.twimg.com/media/EYeX7akWsAIP1_1.jpg\",\n        // \t\t\t\t\t\t\t\"width\": 1920\n        // \t\t\t\t\t};\n\n        await axios({\n          method: 'post',\n          // url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets?expansions=attachments.media_keys&media.fields=duration_ms,height,media_key,preview_image_url,public_metrics,type,url,width,alt_text',\n\n          url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\n          // url: 'https://upload.twitter.com/1.1/media/upload.json?media_category=tweet_image',\n\n          data: tweetData,\n          // media: media,\n          headers: {\n            'Authorization': `Bearer ${cookies.accessToken.accessToken}`\n          }\n        }).then(res => {\n          console.log(res);\n          // alert(\"생성이 완료되었습니다.\");\n        });\n      }\n\n      window.location.href = \"/question/\" + questionId + \"/completed/user\";\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log(\"Error\", error.message);\n      }\n      console.log(error.config);\n    });\n  };\n\n  // function BtnToCreateTweet(){\n  // \tfunction handleClick(e: any){\n  // \t\tconsole.log(cookies.accessToken);\n  //     const data = {\n  //       text: \"질문 : \" + questionContents + \"\\n 답변 :\" + answerContents\n  //     };\n\n  //     axios({\n  //       method: 'post',\n  //       url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\n\n  //       data: data,\n  //       headers: {\n  //         'Authorization': `Bearer ${cookies.accessToken.accessToken}`,\n  //       }\n\n  //     }).then((res) => {\n  //       console.log(res);\n  //       // alert(\"생성이 완료되었습니다.\");\n  //       });\n  // \t}\n  // \treturn (\n  // \t\t<button onClick={handleClick}>\n  //       CreateTweet\n  // \t\t</button>\n  // \t);\n  // }\n\n  const {\n    register,\n    handleSubmit\n    // formState: { isSubmitting, isDirty, errors },\n  } = useForm();\n\n  // 유저 입력 값을 넣을 변수\n  const [checkItemContent, setCheckItemContent] = useState(\"\");\n\n  // 줄 수를 계산해서 저장할 변수\n  const [textareaHeight, setTextareaHeight] = useState(0);\n\n  // 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n  // 엔터('\\n') 개수를 세서 textareaHeight에 저장\n  const checkItemChangeHandler = event => {\n    setTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n    setCheckItemContent(event.target.value);\n  };\n  function checkLengthHandler(event) {\n    var text = event.target.value;\n    var test_length = text.length;\n\n    //최대 글자수\n    var max_length = 5000;\n    if (test_length > max_length) {\n      alert(max_length + \"자 이상 작성할 수 없습니다.\");\n      text = text.substr(0, max_length);\n      event.target.value = text;\n      event.target.focus();\n    }\n  }\n\n  // checkBox Start\n  const [checked, setChecked] = useState(false);\n  const checkHandler = event => {\n    if (checked) {\n      setChecked(false);\n    } else if (checked === false) {\n      setChecked(true);\n    }\n  };\n  const CheckToSendTwitter = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: checked,\n        onChange: e => checkHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this);\n  };\n  // checkBox Fin.\n\n  const printRef = useRef(null);\n  // const printRef = useRef();\n\n  const handleDownloadImage = async () => {\n    const element = printRef.current;\n    const canvas = await html2canvas(element);\n    const data = canvas.toDataURL('image/jpg');\n    const link = document.createElement('a');\n    if (typeof link.download === 'string') {\n      link.href = data;\n      link.download = 'image.jpg';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"answerForm-answer-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-text-box checkItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursur-bar\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"answerAdd\",\n        className: \"answerForm-textarea\",\n        value: checkItemContent,\n        onInput: checkItemChangeHandler,\n        onKeyUp: checkLengthHandler,\n        style: {\n          height: (textareaHeight + 1) * 27 + \"px\",\n          whiteSpace: \"pre-wrap\"\n        },\n        placeholder: \"\\uB2F5\\uBCC0\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694\",\n        ...register(\"answerContents\", {\n          required: \"답변이 입력되지 않았습니다.\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-btn-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"note-send-answer-btn\",\n          src: \"/buttons/send-answer-btn.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Post Tweet?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CheckToSendTwitter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 3\n  }, this);\n}\n_s(AnswerForm, \"XYQf4fHfCHjRzceKVAeTYJasWkY=\", false, function () {\n  return [useCookies, useForm];\n});\n_c = AnswerForm;\nexport default AnswerForm;\nvar _c;\n$RefreshReg$(_c, \"AnswerForm\");","map":{"version":3,"names":["axios","useRef","useState","useCookies","useForm","html2canvas","AnswerForm","props","questionId","String","questionContents","answerContents","setAnswerContents","cookies","setCookie","removeCookie","onSubmit","data","Promise","r","setTimeout","console","log","post","then","res","checked","tweetData","text","method","url","headers","accessToken","window","location","href","catch","error","response","status","request","message","config","register","handleSubmit","checkItemContent","setCheckItemContent","textareaHeight","setTextareaHeight","checkItemChangeHandler","event","target","value","split","length","checkLengthHandler","test_length","max_length","alert","substr","focus","setChecked","checkHandler","CheckToSendTwitter","e","printRef","handleDownloadImage","element","current","canvas","toDataURL","link","document","createElement","download","body","appendChild","click","removeChild","open","height","whiteSpace","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/components/AnswerForm.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getCookie } from \"../pages/auth/Cookie\";\r\nimport \"../styles/answerQuestionNote.css\";\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport interface Props {\r\n\tquestionId: number;\r\n\tquestionContents: string;\r\n}\r\n\r\nfunction AnswerForm(props: Props) {\r\n\tconst questionId = String(props.questionId);\r\n\t// 트위터 이미지로 전환할 질문 내용.\r\n\tconst questionContents = props.questionContents;\r\n\tconst [answerContents, setAnswerContents] = useState();\r\n\r\n\tconst [cookies, setCookie, removeCookie] = useCookies(['accessToken']);\r\n\r\n\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\t\t// 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\r\n\t\t\r\n\t\tconsole.log(questionContents);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/question/\" + questionId + \"/unanswered/user\", data)\r\n\t\t\t.then(async(res) => {\r\n\t\t\t\tconsole.log(\"posthere\");\r\n\t\t\t\tconsole.log(data.answerContents);\r\n\t\t\t\tsetAnswerContents(data.answerContents);\r\n\t\t\t\t// window.location.href = \"/question/\" + questionId + \"/completed/user\";\r\n\r\n\t\t\t\tif(checked){\r\n\t\t\t\t\tconst tweetData = {\r\n\t\t\t\t\t\ttext: \"질문 : \" + questionContents + \"\\n답변 : \" + data.answerContents + \" https://m.place.naver.com/restaurant/1720673456/home?entry=ple\"\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// const tweetDataTest = {\r\n\t\t\t\t\t// \t\t\t\t\t\"text\": \"Testing, testing...\\n\\nA new way to have a convo with exactly who you want. We’re starting with a small % globally, so keep your 👀 out to see it in action. https://t.co/pV53mvjAVT\",\r\n\t\t\t\t\t// \t\t\t\t\t\"id\": \"1263145271946551300\",\r\n\t\t\t\t\t// \t\t\t\t\t\"attachments\": {\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"media_keys\": [\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\"13_1263145212760805376\"\r\n\t\t\t\t\t// \t\t\t\t\t\t\t]\r\n\t\t\t\t\t// \t\t\t\t\t}\r\n\t\t\t\t\t// \t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// const media = \r\n\t\t\t\t\t// \t\t\t\t{\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"duration_ms\": 46947,\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"type\": \"video\",\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"height\": 1080,\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"media_key\": \"13_1263145212760805376\",\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"public_metrics\": {\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\"view_count\": 6909260\r\n\t\t\t\t\t// \t\t\t\t\t\t\t},\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"preview_image_url\": \"https://pbs.twimg.com/media/EYeX7akWsAIP1_1.jpg\",\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"width\": 1920\r\n\t\t\t\t\t// \t\t\t\t\t};\r\n\r\n\t\t\t\tawait axios({\r\n\t\t\t\t\t\tmethod: 'post',\r\n\t\t\t\t\t\t// url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets?expansions=attachments.media_keys&media.fields=duration_ms,height,media_key,preview_image_url,public_metrics,type,url,width,alt_text',\r\n\r\n\t\t\t\t\t\turl: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n\t\t\t\t\t\t// url: 'https://upload.twitter.com/1.1/media/upload.json?media_category=tweet_image',\r\n\r\n\r\n\r\n\t\t\t\t\t\tdata: tweetData,\r\n\t\t\t\t\t\t// media: media,\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Authorization': `Bearer ${cookies.accessToken.accessToken}`,\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}).then((res) => {\r\n\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t// alert(\"생성이 완료되었습니다.\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\twindow.location.href = \"/question/\" + questionId + \"/completed/user\";\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\t// The request was made and the server responded with a status code\r\n\t\t\t\t\t// that falls out of the range of 2xx\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tconsole.log(error.response.headers);\r\n\t\t\t\t} else if (error.request) {\r\n\t\t\t\t\t// The request was made but no response was received\r\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t\t\t\t// http.ClientRequest in node.js\r\n\t\t\t\t\tconsole.log(error.request);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\r\n\t\t\t\t\tconsole.log(\"Error\", error.message);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\t// function BtnToCreateTweet(){\r\n\t// \tfunction handleClick(e: any){\r\n\t// \t\tconsole.log(cookies.accessToken);\r\n  //     const data = {\r\n  //       text: \"질문 : \" + questionContents + \"\\n 답변 :\" + answerContents\r\n  //     };\r\n\r\n  //     axios({\r\n  //       method: 'post',\r\n  //       url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n  //       data: data,\r\n  //       headers: {\r\n  //         'Authorization': `Bearer ${cookies.accessToken.accessToken}`,\r\n  //       }\r\n\r\n  //     }).then((res) => {\r\n  //       console.log(res);\r\n  //       // alert(\"생성이 완료되었습니다.\");\r\n  //       });\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<button onClick={handleClick}>\r\n  //       CreateTweet\r\n\t// \t\t</button>\r\n\t// \t);\r\n\t// }\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\t// formState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// 유저 입력 값을 넣을 변수\r\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\r\n\r\n\t// 줄 수를 계산해서 저장할 변수\r\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\r\n\r\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\r\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\r\n\tconst checkItemChangeHandler = (event: any) => {\r\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t\tsetCheckItemContent(event.target.value);\r\n\t};\r\n\r\n\tfunction checkLengthHandler(event: any) {\r\n\t\tvar text = event.target.value;\r\n\t\tvar test_length = text.length;\r\n\r\n\t\t//최대 글자수\r\n\t\tvar max_length = 5000;\r\n\r\n\t\tif (test_length > max_length) {\r\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\r\n\t\t\ttext = text.substr(0, max_length);\r\n\t\t\tevent.target.value = text;\r\n\t\t\tevent.target.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t// checkBox Start\r\n\tconst [checked, setChecked] = useState(false);\r\n\r\n\tconst checkHandler = (event:any) => {\r\n\t\tif(checked){\r\n\t\t\tsetChecked(false);\r\n\t\t}else if(checked === false){\r\n\t\t\tsetChecked(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst CheckToSendTwitter = () => {\r\n  return (\r\n    <div>\r\n      <input type=\"checkbox\" checked={checked} onChange={(e) => checkHandler(e)} />\r\n    </div>\r\n  \t);\r\n\t};\r\n\t// checkBox Fin.\r\n\r\n\tconst printRef = useRef<HTMLInputElement>(null);\r\n\t// const printRef = useRef();\r\n\r\n  const handleDownloadImage = async () => {\r\n    const element:any = printRef.current;\r\n    const canvas = await html2canvas(element);\r\n\r\n    const data = canvas.toDataURL('image/jpg');\r\n    const link = document.createElement('a');\r\n\r\n    if (typeof link.download === 'string') {\r\n      link.href = data;\r\n      link.download = 'image.jpg';\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      window.open(data);\r\n    }\r\n  };\r\n\r\n\treturn (\r\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"answerForm-text-box checkItem\">\r\n\t\t\t\t<span className=\"cursur-bar\">|</span>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"answerAdd\"\r\n\t\t\t\t\tclassName=\"answerForm-textarea\"\r\n\t\t\t\t\tvalue={checkItemContent}\r\n\t\t\t\t\tonInput={checkItemChangeHandler}\r\n\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: (textareaHeight + 1) * 27 + \"px\",\r\n\t\t\t\t\t\twhiteSpace: \"pre-wrap\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tplaceholder=\"답변을 적어주세요\"\r\n\t\t\t\t\t{...register(\"answerContents\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t})}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"answerForm-btn-box\">\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{/* <BtnToCreateTweet/> */}\r\n\t\t\t\t<p>Post Tweet?</p>\r\n\t\t\t\t<CheckToSendTwitter/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AnswerForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}