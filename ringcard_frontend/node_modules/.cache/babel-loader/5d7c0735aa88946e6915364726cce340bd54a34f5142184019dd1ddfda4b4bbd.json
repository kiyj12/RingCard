{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst client_v1_write_1 = __importDefault(require(\"../v1/client.v1.write\"));\nconst client_v2_write_1 = __importDefault(require(\"../v2/client.v2.write\"));\nconst readonly_1 = __importDefault(require(\"./readonly\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadWrite extends readonly_1.default {\n  /* Direct access to subclients */\n  get v1() {\n    if (this._v1) return this._v1;\n    return this._v1 = new client_v1_write_1.default(this);\n  }\n  get v2() {\n    if (this._v2) return this._v2;\n    return this._v2 = new client_v2_write_1.default(this);\n  }\n  /**\n   * Get a client with read only rights.\n   */\n  get readOnly() {\n    return this;\n  }\n}\nexports.default = TwitterApiReadWrite;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","client_v1_write_1","require","client_v2_write_1","readonly_1","TwitterApiReadWrite","default","v1","_v1","v2","_v2","readOnly"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/twitter-api-v2/dist/client/readwrite.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_v1_write_1 = __importDefault(require(\"../v1/client.v1.write\"));\nconst client_v2_write_1 = __importDefault(require(\"../v2/client.v2.write\"));\nconst readonly_1 = __importDefault(require(\"./readonly\"));\n/**\n * Twitter v1.1 and v2 API client.\n */\nclass TwitterApiReadWrite extends readonly_1.default {\n    /* Direct access to subclients */\n    get v1() {\n        if (this._v1)\n            return this._v1;\n        return this._v1 = new client_v1_write_1.default(this);\n    }\n    get v2() {\n        if (this._v2)\n            return this._v2;\n        return this._v2 = new client_v2_write_1.default(this);\n    }\n    /**\n     * Get a client with read only rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\nexports.default = TwitterApiReadWrite;\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,iBAAiB,GAAGP,eAAe,CAACQ,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC3E,MAAMC,iBAAiB,GAAGT,eAAe,CAACQ,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC3E,MAAME,UAAU,GAAGV,eAAe,CAACQ,OAAO,CAAC,YAAY,CAAC,CAAC;AACzD;AACA;AACA;AACA,MAAMG,mBAAmB,SAASD,UAAU,CAACE,OAAO,CAAC;EACjD;EACA,IAAIC,EAAE,GAAG;IACL,IAAI,IAAI,CAACC,GAAG,EACR,OAAO,IAAI,CAACA,GAAG;IACnB,OAAO,IAAI,CAACA,GAAG,GAAG,IAAIP,iBAAiB,CAACK,OAAO,CAAC,IAAI,CAAC;EACzD;EACA,IAAIG,EAAE,GAAG;IACL,IAAI,IAAI,CAACC,GAAG,EACR,OAAO,IAAI,CAACA,GAAG;IACnB,OAAO,IAAI,CAACA,GAAG,GAAG,IAAIP,iBAAiB,CAACG,OAAO,CAAC,IAAI,CAAC;EACzD;EACA;AACJ;AACA;EACI,IAAIK,QAAQ,GAAG;IACX,OAAO,IAAI;EACf;AACJ;AACAZ,OAAO,CAACO,OAAO,GAAGD,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}