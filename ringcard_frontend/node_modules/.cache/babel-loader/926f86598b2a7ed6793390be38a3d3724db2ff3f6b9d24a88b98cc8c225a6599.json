{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\login\\\\Oauth2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { TwitterApi } from 'twitter-api-v2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Oauth2 = () => {\n  _s();\n  const CONSUMER_KEY = process.env.REACT_APP_CONSUMER_KEY;\n  const CONSUMER_SECRET = process.env.REACT_APP_CONSUMER_SECRET;\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n  const ACCESS_TOKEN = process.env.REACT_APP_ACCESS_TOKEN;\n  const ACCESS_TOKEN_SECRET = process.env.REACT_APP_ACCESS_TOKEN_SECRET;\n  const CALLBACK_URL = process.env.REACT_APP_CALLBACK_URL;\n  const BEARER_TOKEN = process.env.REACT_APP_BEARER_TOKEN;\n  useEffect(() => {\n    const oauthTest = async () => {\n      if (CONSUMER_KEY && CONSUMER_SECRET && ACCESS_TOKEN && ACCESS_TOKEN_SECRET) {\n        // OAuth 1.0a (User context)\n        const client = new TwitterApi({\n          appKey: CONSUMER_KEY,\n          appSecret: CONSUMER_SECRET,\n          // Following access tokens are not required if you are\n          // at part 1 of user-auth process (ask for a request token)\n          // or if you want a app-only client (see below)\n          accessToken: ACCESS_TOKEN,\n          accessSecret: ACCESS_TOKEN_SECRET\n        });\n        // const hello= client.v2;\n        // console.log(hello);\n        // const { data: createdTweet } = await client.v2.tweet('twitter-api-v2 is awesome!', {\n        // poll: { duration_minutes: 120, options: ['Absolutely', 'For sure!'] },\n        // });\n\n        // console.log('Tweet', createdTweet.id, ':', createdTweet.text);\n\n        const createdTweet = await client.v1.tweet('twitter-api-v2 is awesome!', {\n          lat: 1.23,\n          long: -13.392\n        });\n        console.log('Tweet', createdTweet.id_str, ':', createdTweet.full_text);\n      }\n    };\n    oauthTest();\n  }, []);\n\n  // const authHandler = (err:any, data:any) => {\n  //   console.log(err, data);\n  // };\n\n  // const [user, setUser] = useState<any>([]);\n\n  // useEffect(() => {\n  // \taxios\n  // \t\t.get(\"/oauth2\")\n  // \t\t.then((res) => {\n  // \t\t\tsetUser(res.data);\n  // \t\t\tconsole.log(res.data);\n  // \t\t})\n  // \t\t.catch((err) => {\n  // \t\t\tconsole.log(err.config);\n  // \t\t\tconsole.log(err.response.data);\n  // \t\t});\n  // }, []);\n\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\n\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\n\n  // Consuming a Stream\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function OauthTwitter() {\n  //     const stream = client.tweets.sampleStream({\n  //       \"tweet.fields\": [\"author_id\"],\n  //     });\n  //     for await (const tweet of stream) {\n  //       console.log(tweet.data?.author_id);\n  //     }\n\n  //     return(null);\n  //   }\n  //   return(<div><OauthTwitter/></div>)\n  // }\n\n  // Getting a Tweet\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function GettingATweet() {\n  //     const tweet = await client.tweets.findTweetById(\"20\");\n  //     // console.log(tweet.data.text);\n  //     console.log(tweet);\n  //   }\n\n  //     return(null);\n  // }\n\n  // oauth2-bearer.ts \n  // if(BEARER_TOKEN){\n  //   async function Oauth2Bearer() {\n  //     const client = new Client(BEARER_TOKEN);\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n  //     if (!data) throw new Error(\"Couldn't find user\");\n  //     let count = 0;\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\n  //       console.log(followers);\n  //       if (++count === 3) {\n  //         break;\n  //       }\n  //     }\n  //     return (<div></div>);\n  //   }\n  // }\n\n  // if(BEARER_TOKEN){\n  //     const client = new Client(BEARER_TOKEN);\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\n  //     if (!data) throw new Error(\"Couldn't find user\");\n  //     let count = 0;\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\n  //       console.log(followers);\n  //       if (++count === 3) {\n  //         break;\n  //       }\n  //     }\n  //     return (<div></div>);\n  // }\n\n  // const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\n  // const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\n  // function TestOauth(){\n  //   if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\n  //     authCallback={authHandler}\n  //     consumerKey={CONSUMER_KEY}\n  //     consumerSecret={CONSUMER_SECRET}\n  //   />)}\n  //   else{\n  //     return(<div></div>)\n  //   }\n  // }\n  // return (<p>1<GettingATweet/></p>)\n  return (\n    /*#__PURE__*/\n    // <TestOauth/>\n    _jsxDEV(\"div\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Oauth2, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Oauth2;\nexport default Oauth2;\nvar _c;\n$RefreshReg$(_c, \"Oauth2\");","map":{"version":3,"names":["React","useEffect","TwitterApi","Oauth2","CONSUMER_KEY","process","env","REACT_APP_CONSUMER_KEY","CONSUMER_SECRET","REACT_APP_CONSUMER_SECRET","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","ACCESS_TOKEN","REACT_APP_ACCESS_TOKEN","ACCESS_TOKEN_SECRET","REACT_APP_ACCESS_TOKEN_SECRET","CALLBACK_URL","REACT_APP_CALLBACK_URL","BEARER_TOKEN","REACT_APP_BEARER_TOKEN","oauthTest","client","appKey","appSecret","accessToken","accessSecret","createdTweet","v1","tweet","lat","long","console","log","id_str","full_text"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Oauth2.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TwitterLogin from \"react-twitter-login\";\r\nimport { Client } from \"twitter-api-sdk\";\r\nimport { TwitterApi } from 'twitter-api-v2';\r\nimport { createHmac } from \"crypto\";\r\nconst Oauth2=()=>{\r\n\r\n\r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  const CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst ACCESS_TOKEN=process.env.REACT_APP_ACCESS_TOKEN;\r\n\tconst ACCESS_TOKEN_SECRET=process.env.REACT_APP_ACCESS_TOKEN_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\tconst BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  useEffect(() => {\r\n    const oauthTest = async () => {\r\n  if(CONSUMER_KEY&&CONSUMER_SECRET&&ACCESS_TOKEN&&ACCESS_TOKEN_SECRET){\r\n    // OAuth 1.0a (User context)\r\n  const client = new TwitterApi({\r\n    appKey: CONSUMER_KEY,\r\n    appSecret: CONSUMER_SECRET,\r\n    // Following access tokens are not required if you are\r\n    // at part 1 of user-auth process (ask for a request token)\r\n    // or if you want a app-only client (see below)\r\n    accessToken: ACCESS_TOKEN,\r\n    accessSecret: ACCESS_TOKEN_SECRET,\r\n  });\r\n  // const hello= client.v2;\r\n  // console.log(hello);\r\n  // const { data: createdTweet } = await client.v2.tweet('twitter-api-v2 is awesome!', {\r\n  // poll: { duration_minutes: 120, options: ['Absolutely', 'For sure!'] },\r\n  // });\r\n  \r\n  // console.log('Tweet', createdTweet.id, ':', createdTweet.text);\r\n\r\n  const createdTweet = await client.v1.tweet('twitter-api-v2 is awesome!', {\r\n  lat: 1.23,\r\n  long: -13.392,\r\n  });\r\n  console.log('Tweet', createdTweet.id_str, ':', createdTweet.full_text);\r\n\r\n  }\r\n   };\r\n\t\toauthTest();\r\n\t}, []);\r\n\r\n\r\n  \r\n\r\n  // const authHandler = (err:any, data:any) => {\r\n  //   console.log(err, data);\r\n  // };\r\n\r\n  // const [user, setUser] = useState<any>([]);\r\n  \r\n  // useEffect(() => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/oauth2\")\r\n\t// \t\t.then((res) => {\r\n\t// \t\t\tsetUser(res.data);\r\n\t// \t\t\tconsole.log(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err.config);\r\n\t// \t\t\tconsole.log(err.response.data);\r\n\t// \t\t});\r\n\t// }, []);\r\n\r\n\r\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\r\n\r\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n  // oauth2-bearer.ts \r\n  // if(BEARER_TOKEN){\r\n  //   async function Oauth2Bearer() {\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  //   }\r\n  // }\r\n\r\n  // if(BEARER_TOKEN){\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  // }\r\n\r\n  // const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  // const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  // function TestOauth(){\r\n  //   if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\r\n  //     authCallback={authHandler}\r\n  //     consumerKey={CONSUMER_KEY}\r\n  //     consumerSecret={CONSUMER_SECRET}\r\n  //   />)}\r\n  //   else{\r\n  //     return(<div></div>)\r\n  //   }\r\n  // }\r\n  // return (<p>1<GettingATweet/></p>)\r\n  return (\r\n    // <TestOauth/>\r\n    <div>hello</div>\r\n  );\r\n}\r\n\r\nexport default Oauth2;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAGlD,SAASC,UAAU,QAAQ,gBAAgB;AAAC;AAE5C,MAAMC,MAAM,GAAC,MAAI;EAAA;EAGf,MAAMC,YAAY,GAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACrD,MAAMC,eAAe,GAACH,OAAO,CAACC,GAAG,CAACG,yBAAyB;EAC3D,MAAMC,SAAS,GAACL,OAAO,CAACC,GAAG,CAACK,mBAAmB;EAChD,MAAMC,aAAa,GAACP,OAAO,CAACC,GAAG,CAACO,uBAAuB;EACvD,MAAMC,YAAY,GAACT,OAAO,CAACC,GAAG,CAACS,sBAAsB;EACrD,MAAMC,mBAAmB,GAACX,OAAO,CAACC,GAAG,CAACW,6BAA6B;EACnE,MAAMC,YAAY,GAACb,OAAO,CAACC,GAAG,CAACa,sBAAsB;EACrD,MAAMC,YAAY,GAACf,OAAO,CAACC,GAAG,CAACe,sBAAsB;EAEpDpB,SAAS,CAAC,MAAM;IACd,MAAMqB,SAAS,GAAG,YAAY;MAChC,IAAGlB,YAAY,IAAEI,eAAe,IAAEM,YAAY,IAAEE,mBAAmB,EAAC;QAClE;QACF,MAAMO,MAAM,GAAG,IAAIrB,UAAU,CAAC;UAC5BsB,MAAM,EAAEpB,YAAY;UACpBqB,SAAS,EAAEjB,eAAe;UAC1B;UACA;UACA;UACAkB,WAAW,EAAEZ,YAAY;UACzBa,YAAY,EAAEX;QAChB,CAAC,CAAC;QACF;QACA;QACA;QACA;QACA;;QAEA;;QAEA,MAAMY,YAAY,GAAG,MAAML,MAAM,CAACM,EAAE,CAACC,KAAK,CAAC,4BAA4B,EAAE;UACzEC,GAAG,EAAE,IAAI;UACTC,IAAI,EAAE,CAAC;QACP,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEN,YAAY,CAACO,MAAM,EAAE,GAAG,EAAEP,YAAY,CAACQ,SAAS,CAAC;MAEtE;IACC,CAAC;IACFd,SAAS,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;;EAKL;EACA;EACA;;EAEA;;EAEA;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGC;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;IAAA;IACE;IACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAgB;AAEpB,CAAC;AAAA,GAvJKnB,MAAM;AAAA,KAANA,MAAM;AAyJZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}