{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx\";\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction makeTapeUrl(tapeType) {\n  const tapeTypeStr = String(tapeType);\n  const result = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n  return result;\n}\nfunction QuestionNoteList(props) {\n  const QandAmap = props.map;\n  const tapeImages = document.getElementsByClassName(\"QuestionNote-maskingTape-img\");\n  var tapeImageList = Array.from(tapeImages);\n\n  // tapeImageList.forEach((tapeImage) => {\n  // \tconst chosenPosition =\n  // \t\ttapePositionList[Math.floor(Math.random() * cntPosition)];\n  // \ttapeImage.setAttribute(\"style\", chosenPosition);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-notes-container\",\n      children: QandAmap.map((QA, idx) => /*#__PURE__*/_jsxDEV(QuestionNoteAnony, {\n        idx: idx,\n        question: QA[0],\n        answer: QA[1],\n        tapeUrl: makeTapeUrl(QA[0].tapeType)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c;\n$RefreshReg$(_c, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNoteAnony","React","makeTapeUrl","tapeType","tapeTypeStr","String","result","QuestionNoteList","props","QandAmap","map","tapeImages","document","getElementsByClassName","tapeImageList","Array","from","QA","idx"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tmap: [IQuestion, IAnswer][];\n}\n\nfunction makeTapeUrl(tapeType: Number) {\n\tconst tapeTypeStr = String(tapeType);\n\tconst result = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n\treturn result;\n}\n\n\nfunction QuestionNoteList(props: Props) {\n\tconst QandAmap = props.map;\n\n\tconst tapeImages = document.getElementsByClassName(\n\t\t\"QuestionNote-maskingTape-img\"\n\t);\n\n\tvar tapeImageList = Array.from(tapeImages);\n\n\t// tapeImageList.forEach((tapeImage) => {\n\t// \tconst chosenPosition =\n\t// \t\ttapePositionList[Math.floor(Math.random() * cntPosition)];\n\t// \ttapeImage.setAttribute(\"style\", chosenPosition);\n\t// });\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{QandAmap.map((QA, idx) => (\n\t\t\t\t\t<QuestionNoteAnony\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tquestion={QA[0]}\n\t\t\t\t\t\tanswer={QA[1]}\n\t\t\t\t\t\ttapeUrl={makeTapeUrl(QA[0].tapeType)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":";AAMA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAM1B,SAASC,WAAW,CAACC,QAAgB,EAAE;EACtC,MAAMC,WAAW,GAAGC,MAAM,CAACF,QAAQ,CAAC;EACpC,MAAMG,MAAM,GAAGD,MAAM,CAAC,qBAAqB,GAAGD,WAAW,GAAG,MAAM,CAAC;EACnE,OAAOE,MAAM;AACd;AAGA,SAASC,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;EAE1B,MAAMC,UAAU,GAAGC,QAAQ,CAACC,sBAAsB,CACjD,8BAA8B,CAC9B;EAED,IAAIC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC;;EAE1C;EACA;EACA;EACA;EACA;;EAEA,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,0BAA0B;MAAA,UACvCF,QAAQ,CAACC,GAAG,CAAC,CAACO,EAAE,EAAEC,GAAG,kBACrB,QAAC,iBAAiB;QAEjB,GAAG,EAAEA,GAAI;QACT,QAAQ,EAAED,EAAE,CAAC,CAAC,CAAE;QAChB,MAAM,EAAEA,EAAE,CAAC,CAAC,CAAE;QACd,OAAO,EAAEf,WAAW,CAACe,EAAE,CAAC,CAAC,CAAC,CAACd,QAAQ;MAAE,GAJhCe,GAAG;QAAA;QAAA;QAAA;MAAA,QAMT;IAAC;MAAA;MAAA;MAAA;IAAA;EACG,iBACJ;AAEL;AAAC,KA9BQX,gBAAgB;AAgCzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}