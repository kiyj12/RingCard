{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\auth\\\\Oauth2Step3.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport qs from \"qs\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Oauth2Step3 = () => {\n  _s();\n  const {\n    Client,\n    auth\n  } = require(\"twitter-api-sdk\");\n  const [accessToken, setAccessToken] = useState();\n  const [userMe, setUserMe] = useState([]);\n  const CONSUMER_KEY = process.env.REACT_APP_CONSUMER_KEY;\n  const CONSUMER_SECRET = process.env.REACT_APP_CONSUMER_SECRET;\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n  const ACCESS_TOKEN = process.env.REACT_APP_ACCESS_TOKEN;\n  const ACCESS_TOKEN_SECRET = process.env.REACT_APP_ACCESS_TOKEN_SECRET;\n  const CALLBACK_URL = process.env.REACT_APP_CALLBACK_URL;\n  const BEARER_TOKEN = process.env.REACT_APP_BEARER_TOKEN;\n\n  // const TWITTER_STATE = \"twitter-increaser-state\";\n  const TWITTER_STATE = \"state\";\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"tweet.write\"].join(\" \");\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\n\n  const [searchParams] = useSearchParams();\n  const state = searchParams.get(\"state\");\n  const code = searchParams.get(\"code\");\n  const authClient = new auth.OAuth2User({\n    client_id: CLIENT_ID,\n    client_secret: CLIENT_SECRET,\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"]\n  });\n  const client = new Client(authClient);\n  const params = {\n    expansions: \"author_id\",\n    \"user.fields\": [\"username\", \"created_at\"],\n    \"tweet.fields\": [\"geo\", \"entities\", \"context_annotations\"]\n  };\n  function BtnToTwitterLogin() {\n    function handleClick(e) {\n      const createFormParams = params => {\n        return Object.keys(params).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join('&');\n      };\n      if (code && CLIENT_ID) {\n        const data = qs.stringify({\n          code: code,\n          grant_type: 'authorization_code',\n          client_id: CLIENT_ID,\n          redirect_uri: 'http://localhost:3000/login/oauth2/code/twitter',\n          code_verifier: 'challenge'\n        });\n        axios({\n          method: 'post',\n          url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/oauth2/token',\n          data: data,\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        }).then(res => {\n          console.log(res);\n          console.log(res.data);\n          console.log(res.data.access_token);\n          setAccessToken(res.data.access_token);\n          // alert(\"생성이 완료되었습니다.\");\n        });\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this);\n  }\n  function BtnToCreateTweet() {\n    function handleClick(e) {\n      const endpointURL = `https://api.twitter.com/2/tweets`;\n      const data = {\n        text: \"Hello Worldsss!!!!!!!!\"\n      };\n      axios({\n        method: 'post',\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\n        data: data,\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(res => {\n        console.log(res);\n        // alert(\"생성이 완료되었습니다.\");\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this);\n  }\n  function BtnToUserMe() {\n    function handleClick(e) {\n      const endpointURL = `https://api.twitter.com/2/users/me`;\n      axios({\n        method: 'get',\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/me',\n        // data: data,\n        headers: {\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }).then(res => {\n        console.log(res);\n        console.log(res.data.data);\n        setUserMe(res.data.data);\n        // alert(\"생성이 완료되었습니다.\");\n        // axios({\n        //   method: 'post',\n        //   url: 'login/user/me',\n        //   headers :{'Content-Type' : 'application/json',\n        //             'Access-Control-Allow-Origin' : '*',\n        //             'Access-Control-Allow-Headers' : '*',\n        //             'Access-Control-Allow-Methods': 'GET, POST'},\n        //   data: res.data.data,\n        //   baseURL: 'http://localhost:8080',\n        // });\n\n        // axios.post('login/user/me', res.data.data).then((res) => {\n        // \t// setResponse(res.data);\n        // \t// console.log(res.data);\n        // \t// setSubmitted(true);\n        // })\n        // .catch(function (error) {\n        // \tconsole.log(error.config);\n        // });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }, this);\n  }\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    await axios.post('/login/user/me', data).then(res => {\n      // setResponse(res.data);\n      // console.log(res.data);\n      // setSubmitted(true);\n      console.log(data);\n    }).catch(function (error) {\n      console.log(error.config);\n    });\n\n    // axios({\n    //     method: 'post',\n    //     url: 'https://cors-anywhere.herokuapp.com/https://localhost:8080/login/user/me',\n    //     headers :{'Content-Type' : 'application/json',\n    //               // 'Access-Control-Allow-Origin' : '*',\n    //               // 'Access-Control-Allow-Headers' : '*',\n    //               // 'Access-Control-Allow-Methods': 'GET, POST'\n    //             },\n    //     data: data,\n    //   });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isDirty,\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BtnToTwitterLogin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BtnToCreateTweet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BtnToUserMe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: userMe.id\n          // placeholder=\"이름을 입력해주세요\"\n          ,\n          ...register(\"id\", {\n            required: \"답변이 입력되지 않았습니다.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userMe.name\n          // placeholder=\"이름을 입력해주세요\"\n          ,\n          ...register(\"name\", {\n            required: \"답변이 입력되지 않았습니다.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userMe.username\n          // placeholder=\"이름을 입력해주세요\"\n          ,\n          ...register(\"username\", {\n            required: \"답변이 입력되지 않았습니다.\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Oauth2Step3, \"JoiXgF6hoiUhu60vlC3bFDvsfe0=\", false, function () {\n  return [useSearchParams, useForm];\n});\n_c = Oauth2Step3;\nexport default Oauth2Step3;\nvar _c;\n$RefreshReg$(_c, \"Oauth2Step3\");","map":{"version":3,"names":["axios","React","useState","useSearchParams","qs","useForm","Oauth2Step3","Client","auth","require","accessToken","setAccessToken","userMe","setUserMe","CONSUMER_KEY","process","env","REACT_APP_CONSUMER_KEY","CONSUMER_SECRET","REACT_APP_CONSUMER_SECRET","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","ACCESS_TOKEN","REACT_APP_ACCESS_TOKEN","ACCESS_TOKEN_SECRET","REACT_APP_ACCESS_TOKEN_SECRET","CALLBACK_URL","REACT_APP_CALLBACK_URL","BEARER_TOKEN","REACT_APP_BEARER_TOKEN","TWITTER_STATE","TWITTER_CODE_CHALLENGE","TWITTER_AUTH_URL","TWITTER_SCOPE","join","searchParams","state","get","code","authClient","OAuth2User","client_id","client_secret","callback","scopes","client","params","expansions","BtnToTwitterLogin","handleClick","e","createFormParams","Object","keys","map","key","encodeURIComponent","data","stringify","grant_type","redirect_uri","code_verifier","method","url","headers","then","res","console","log","access_token","BtnToCreateTweet","endpointURL","text","BtnToUserMe","onSubmit","Promise","r","setTimeout","post","catch","error","config","register","handleSubmit","formState","isSubmitting","isDirty","errors","id","required","name","username"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/auth/Oauth2Step3.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TwitterLogin from \"react-twitter-login\";\r\nimport { Client } from \"twitter-api-sdk\";\r\nimport { TwitterApi } from 'twitter-api-v2';\r\nimport { createHmac } from \"crypto\";\r\nimport { Navigate, useParams, useSearchParams } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Oauth2Step3=()=>{\r\n\r\n    const { Client, auth } = require(\"twitter-api-sdk\");\r\n\r\n    const [accessToken, setAccessToken] = useState();\r\n    const [userMe, setUserMe] = useState<any>([]);\r\n\r\n\r\n\r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  const CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst ACCESS_TOKEN=process.env.REACT_APP_ACCESS_TOKEN;\r\n\tconst ACCESS_TOKEN_SECRET=process.env.REACT_APP_ACCESS_TOKEN_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\tconst BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  \r\n  // const TWITTER_STATE = \"twitter-increaser-state\";\r\n  const TWITTER_STATE = \"state\";\r\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\r\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\r\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\",\"tweet.write\"].join(\" \");\r\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const state = searchParams.get(\"state\");\r\n  const code = searchParams.get(\"code\");\r\n  \r\n  const authClient = new auth.OAuth2User({\r\n    client_id: CLIENT_ID,\r\n    client_secret: CLIENT_SECRET,\r\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\r\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"],\r\n  });\r\n\r\n  const client = new Client(authClient);\r\n\r\n  const params = {\r\n  expansions: \"author_id\",\r\n  \"user.fields\": [\"username\", \"created_at\"],\r\n  \"tweet.fields\": [\"geo\", \"entities\", \"context_annotations\"],\r\n};\r\n\r\nfunction BtnToTwitterLogin(){\r\n\tfunction handleClick(e: any){\r\n\r\n    const createFormParams = (params:any) => {\r\n        return Object.keys(params)\r\n            .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\r\n            .join('&')\r\n    }\r\n\r\n  if(code&&CLIENT_ID){\r\n    const data = qs.stringify({\r\n          code: code,\r\n          grant_type: 'authorization_code',\r\n          client_id: CLIENT_ID,\r\n          redirect_uri: 'http://localhost:3000/login/oauth2/code/twitter',\r\n          code_verifier: 'challenge',\r\n        });\r\n    \r\n    axios({\r\n    method: 'post',\r\n    url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/oauth2/token',\r\n\r\n    data: data,\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    }\r\n\r\n    }).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      console.log(res.data.access_token);\r\n      setAccessToken(res.data.access_token);\r\n      // alert(\"생성이 완료되었습니다.\");\r\n  })}}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\r\n  function BtnToCreateTweet(){\r\n\t\tfunction handleClick(e: any){\r\n      const endpointURL = `https://api.twitter.com/2/tweets`;\r\n      const data = {\r\n        text: \"Hello Worldsss!!!!!!!!\"\r\n      };\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n        data: data,\r\n        headers: {\r\n          'Authorization': 'Bearer ' + accessToken,\r\n        }\r\n\r\n      }).then((res) => {\r\n        console.log(res);\r\n        // alert(\"생성이 완료되었습니다.\");\r\n        });\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  function BtnToUserMe(){\r\n\t\tfunction handleClick(e: any){\r\n      const endpointURL = `https://api.twitter.com/2/users/me`;\r\n\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/me',\r\n\r\n      // data: data,\r\n      headers: {\r\n        'Authorization': 'Bearer ' +accessToken,\r\n      }\r\n    }).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data.data);\r\n      setUserMe(res.data.data);\r\n      // alert(\"생성이 완료되었습니다.\");\r\n      // axios({\r\n      //   method: 'post',\r\n      //   url: 'login/user/me',\r\n      //   headers :{'Content-Type' : 'application/json',\r\n      //             'Access-Control-Allow-Origin' : '*',\r\n      //             'Access-Control-Allow-Headers' : '*',\r\n      //             'Access-Control-Allow-Methods': 'GET, POST'},\r\n      //   data: res.data.data,\r\n      //   baseURL: 'http://localhost:8080',\r\n      // });\r\n      \r\n\r\n      // axios.post('login/user/me', res.data.data).then((res) => {\r\n\t\t\t// \t// setResponse(res.data);\r\n\t\t\t// \t// console.log(res.data);\r\n\t\t\t// \t// setSubmitted(true);\r\n\t\t\t// })\r\n\t\t\t// .catch(function (error) {\r\n\t\t\t// \tconsole.log(error.config);\r\n\t\t\t// });\r\n      });\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  const onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios.post('/login/user/me', data).then((res) => {\r\n\t\t\t\t// setResponse(res.data);\r\n\t\t\t\t// console.log(res.data);\r\n\t\t\t\t// setSubmitted(true);\r\n        console.log(data);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\r\n    // axios({\r\n    //     method: 'post',\r\n    //     url: 'https://cors-anywhere.herokuapp.com/https://localhost:8080/login/user/me',\r\n    //     headers :{'Content-Type' : 'application/json',\r\n    //               // 'Access-Control-Allow-Origin' : '*',\r\n    //               // 'Access-Control-Allow-Headers' : '*',\r\n    //               // 'Access-Control-Allow-Methods': 'GET, POST'\r\n    //             },\r\n    //     data: data,\r\n    //   });\r\n\t};\r\n\r\n  const {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n  \r\n  return (\r\n    <div>\r\n    <BtnToTwitterLogin/>\r\n    <BtnToCreateTweet/>\r\n    <BtnToUserMe/>\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n\t\t\t\t<input\r\n          value={userMe.id}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"id\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n\r\n        <input\r\n          value={userMe.name}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"name\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n\r\n        <input\r\n          value={userMe.username}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"username\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n        \r\n        <button type=\"submit\">\r\n          <div>저장하기</div>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Oauth2Step3;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}