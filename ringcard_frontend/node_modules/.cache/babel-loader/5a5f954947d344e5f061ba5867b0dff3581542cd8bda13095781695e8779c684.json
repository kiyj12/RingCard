{"ast":null,"code":"import _objectSpread from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from\"axios\";import{useState}from\"react\";import{useForm}from\"react-hook-form\";import{getCookie}from\"../pages/auth/Cookie\";import\"../styles/answerQuestionNote.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AnswerForm(props){var questionId=String(props.questionId);// 트위터 이미지로 전환할 질문 내용.\nvar questionContents=props.questionContents;var _useState=useState(),_useState2=_slicedToArray(_useState,2),answerContents=_useState2[0],setAnswerContents=_useState2[1];var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(r){return setTimeout(r,100);});case 2:// alert(JSON.stringify(data));\nconsole.log(data);// 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\nsetAnswerContents(data);console.log(questionContents);_context.next=7;return axios.post(\"/question/\"+questionId+\"/unanswered/user\",data).then(function(res){console.log(\"posthere\");console.log(data);// window.location.href = \"/question/\" + questionId + \"/completed/user\";\n}).catch(function(error){if(error.response){// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconsole.log(error.response.data);console.log(error.response.status);console.log(error.response.headers);}else if(error.request){// The request was made but no response was received\n// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n// http.ClientRequest in node.js\nconsole.log(error.request);}else{// Something happened in setting up the request that triggered an Error\nconsole.log(\"Error\",error.message);}console.log(error.config);});case 7:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();function BtnToCreateTweet(){function handleClick(e){var data={text:\"질문 : \"+questionContents+\"\\n 답변 :\"+answerContents};axios({method:'post',url:'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',data:data,headers:{'Authorization':\"Bearer \".concat(getCookie('accessToken'))}}).then(function(res){console.log(res);// alert(\"생성이 완료되었습니다.\");\n});}return/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,children:\"CreateTweet\"});}var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;// 유저 입력 값을 넣을 변수\nvar _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),checkItemContent=_useState4[0],setCheckItemContent=_useState4[1];// 줄 수를 계산해서 저장할 변수\nvar _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),textareaHeight=_useState6[0],setTextareaHeight=_useState6[1];// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n// 엔터('\\n') 개수를 세서 textareaHeight에 저장\nvar checkItemChangeHandler=function checkItemChangeHandler(event){setTextareaHeight(event.target.value.split(\"\\n\").length-1);setCheckItemContent(event.target.value);};function checkLengthHandler(event){var text=event.target.value;var test_length=text.length;//최대 글자수\nvar max_length=5000;if(test_length>max_length){alert(max_length+\"자 이상 작성할 수 없습니다.\");text=text.substr(0,max_length);event.target.value=text;event.target.focus();}}return/*#__PURE__*/_jsxs(\"form\",{className:\"answerForm-answer-form\",onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"answerForm-text-box checkItem\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"cursur-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"textarea\",_objectSpread({id:\"answerAdd\",className:\"answerForm-textarea\",value:checkItemContent,onInput:checkItemChangeHandler,onKeyUp:checkLengthHandler,style:{height:(textareaHeight+1)*27+\"px\",whiteSpace:\"pre-wrap\"},placeholder:\"\\uB2F5\\uBCC0\\uC744 \\uC801\\uC5B4\\uC8FC\\uC138\\uC694\"},register(\"answerContents\",{required:\"답변이 입력되지 않았습니다.\"})))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"answerForm-btn-box\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:/*#__PURE__*/_jsx(\"img\",{className:\"note-send-answer-btn\",src:\"/buttons/send-answer-btn.svg\",alt:\"\"})}),/*#__PURE__*/_jsx(BtnToCreateTweet,{})]})]});}export default AnswerForm;","map":{"version":3,"names":["axios","useState","useForm","getCookie","AnswerForm","props","questionId","String","questionContents","answerContents","setAnswerContents","onSubmit","data","Promise","r","setTimeout","console","log","post","then","res","catch","error","response","status","headers","request","message","config","BtnToCreateTweet","handleClick","e","text","method","url","register","handleSubmit","checkItemContent","setCheckItemContent","textareaHeight","setTextareaHeight","checkItemChangeHandler","event","target","value","split","length","checkLengthHandler","test_length","max_length","alert","substr","focus","height","whiteSpace","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/components/AnswerForm.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getCookie } from \"../pages/auth/Cookie\";\r\nimport \"../styles/answerQuestionNote.css\";\r\n\r\nexport interface Props {\r\n\tquestionId: number;\r\n\tquestionContents: string;\r\n}\r\n\r\nfunction AnswerForm(props: Props) {\r\n\tconst questionId = String(props.questionId);\r\n\t// 트위터 이미지로 전환할 질문 내용.\r\n\tconst questionContents = props.questionContents;\r\n\tconst [answerContents, setAnswerContents] = useState();\r\n\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\t\t// 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\r\n\t\tsetAnswerContents(data);\r\n\t\tconsole.log(questionContents);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/question/\" + questionId + \"/unanswered/user\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"posthere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\t// window.location.href = \"/question/\" + questionId + \"/completed/user\";\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\t// The request was made and the server responded with a status code\r\n\t\t\t\t\t// that falls out of the range of 2xx\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tconsole.log(error.response.headers);\r\n\t\t\t\t} else if (error.request) {\r\n\t\t\t\t\t// The request was made but no response was received\r\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t\t\t\t// http.ClientRequest in node.js\r\n\t\t\t\t\tconsole.log(error.request);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\r\n\t\t\t\t\tconsole.log(\"Error\", error.message);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction BtnToCreateTweet(){\r\n\t\tfunction handleClick(e: any){\r\n\r\n\t\t\t\r\n\r\n      const data = {\r\n        text: \"질문 : \" + questionContents + \"\\n 답변 :\" + answerContents\r\n      };\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n        data: data,\r\n        headers: {\r\n          'Authorization': `Bearer ${getCookie('accessToken')}`,\r\n        }\r\n\r\n      }).then((res) => {\r\n        console.log(res);\r\n        // alert(\"생성이 완료되었습니다.\");\r\n        });\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n        CreateTweet\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\t// formState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// 유저 입력 값을 넣을 변수\r\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\r\n\r\n\t// 줄 수를 계산해서 저장할 변수\r\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\r\n\r\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\r\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\r\n\tconst checkItemChangeHandler = (event: any) => {\r\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t\tsetCheckItemContent(event.target.value);\r\n\t};\r\n\r\n\tfunction checkLengthHandler(event: any) {\r\n\t\tvar text = event.target.value;\r\n\t\tvar test_length = text.length;\r\n\r\n\t\t//최대 글자수\r\n\t\tvar max_length = 5000;\r\n\r\n\t\tif (test_length > max_length) {\r\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\r\n\t\t\ttext = text.substr(0, max_length);\r\n\t\t\tevent.target.value = text;\r\n\t\t\tevent.target.focus();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"answerForm-text-box checkItem\">\r\n\t\t\t\t<span className=\"cursur-bar\">|</span>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"answerAdd\"\r\n\t\t\t\t\tclassName=\"answerForm-textarea\"\r\n\t\t\t\t\tvalue={checkItemContent}\r\n\t\t\t\t\tonInput={checkItemChangeHandler}\r\n\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: (textareaHeight + 1) * 27 + \"px\",\r\n\t\t\t\t\t\twhiteSpace: \"pre-wrap\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tplaceholder=\"답변을 적어주세요\"\r\n\t\t\t\t\t{...register(\"answerContents\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t})}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"answerForm-btn-box\">\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t\t<BtnToCreateTweet/>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AnswerForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}