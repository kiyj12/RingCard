{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\components\\\\QuestionNoteListAnony.tsx\";\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionNoteList(props) {\n  const QandAmap = props.map;\n  const questionId = Number(props.questionId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: QandAmap.map((QA, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questionId != QA[0].id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-notes-container\",\n        children: /*#__PURE__*/_jsxDEV(QuestionNoteAnony, {\n          idx: idx,\n          question: QA[0],\n          answer: QA[1]\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this)\n\n  // <div className=\"question-notes-container\">\n  // \t{QandAmap.map((QA, idx) => (\n  // \t\t<QuestionNoteAnony\n  // \t\t\tkey={idx}\n  // \t\t\tidx={idx}\n  // \t\t\tquestion={QA[0]}\n  // \t\t\tanswer={QA[1]}\n  // \t\t/>\n  // \t))}\n  // </div>\n  ;\n}\n_c = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c;\n$RefreshReg$(_c, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNoteAnony","React","QuestionNoteList","props","QandAmap","map","questionId","Number","QA","idx","id"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { url } from \"inspector\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { IAnswer, IQuestion } from \"./types\";\r\n\r\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\r\nimport React from \"react\";\r\n\r\nexport interface Props {\r\n\tmap: [IQuestion, IAnswer][];\r\n\tquestionId: string;\r\n}\r\n\r\nfunction QuestionNoteList(props: Props) {\r\n\tconst QandAmap = props.map;\r\n\tconst questionId = Number(props.questionId);\r\n\r\n\treturn (\r\n\r\n\t\t<div>\r\n\t\t\t{QandAmap.map((QA, idx) => (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{questionId!=QA[0].id \r\n\t\t\t\t\t\t? (<div className=\"question-notes-container\">\r\n\t\t\t\t\t\t\t\t<QuestionNoteAnony\r\n\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\tidx={idx}\r\n\t\t\t\t\t\t\t\t\tquestion={QA[0]}\r\n\t\t\t\t\t\t\t\t\tanswer={QA[1]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t\t// <div className=\"question-notes-container\">\r\n\t\t// \t{QandAmap.map((QA, idx) => (\r\n\t\t// \t\t<QuestionNoteAnony\r\n\t\t// \t\t\tkey={idx}\r\n\t\t// \t\t\tidx={idx}\r\n\t\t// \t\t\tquestion={QA[0]}\r\n\t\t// \t\t\tanswer={QA[1]}\r\n\t\t// \t\t/>\r\n\t\t// \t))}\r\n\t\t// </div>\r\n\r\n\t);\r\n}\r\n\r\nexport default QuestionNoteList;\r\n"],"mappings":";AAMA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAO1B,SAASC,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;EAC1B,MAAMC,UAAU,GAAGC,MAAM,CAACJ,KAAK,CAACG,UAAU,CAAC;EAE3C,oBAEC;IAAA,UACEF,QAAQ,CAACC,GAAG,CAAC,CAACG,EAAE,EAAEC,GAAG,kBACpB;MAAA,UACEH,UAAU,IAAEE,EAAE,CAAC,CAAC,CAAC,CAACE,EAAE,gBAClB;QAAK,SAAS,EAAC,0BAA0B;QAAA,uBAC1C,QAAC,iBAAiB;UAEjB,GAAG,EAAED,GAAI;UACT,QAAQ,EAAED,EAAE,CAAC,CAAC,CAAE;UAChB,MAAM,EAAEA,EAAE,CAAC,CAAC;QAAE,GAHTC,GAAG;UAAA;UAAA;UAAA;QAAA;MAIP;QAAA;QAAA;QAAA;MAAA,QACG,GACL;IAAI;MAAA;MAAA;MAAA;IAAA,QAEP;EAAC;IAAA;IAAA;IAAA;EAAA;;EAIJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAGF;AAAC,KApCQP,gBAAgB;AAsCzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}