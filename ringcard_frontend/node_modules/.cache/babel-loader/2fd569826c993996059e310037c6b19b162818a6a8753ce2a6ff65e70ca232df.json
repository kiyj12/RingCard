{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/FindPassword.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport HeaderRingcaShort from \"../../components/HeaderRingcaShort\";\nimport \"../../styles/layout/layout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FindPassword() {\n  _s();\n  const [response, setResponse] = useState({\n    bindingResultHasErrors: false,\n    noEmailLikeThat: false\n  });\n  // submitted==true여야 새로고침 되도록.\n  const [submitted, setSubmitted] = useState(false);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    await axios.post(\"/joinForm\", data).then(res => {\n      console.log(\"postHere\");\n      console.log(data);\n      setResponse(res.data);\n      console.log(res.data);\n      setSubmitted(true);\n    }).catch(function (error) {\n      console.log(error.config);\n    });\n  };\n\n  // $(\"#checkEmail\").click(\n\n  function handleSendPwdClick() {\n    const userEmail = $(\"#userEmail\").val();\n    const sendEmail = document.forms[0];\n    $.ajax({\n      type: \"post\",\n      url: \"emailDuplication\",\n      data: {\n        memberEmail: userEmail\n      },\n      dataType: \"text\",\n      success: function (result) {\n        if (result == \"no\") {\n          // 중복되는 것이 있다면 no == 일치하는 이메일이 있다!\n          alert(\"임시비밀번호를 전송 했습니다.\");\n          sendEmail.submit();\n        } else {\n          alert(\"가입되지 않은 이메일입니다.\");\n        }\n      },\n      error: function () {\n        console.log(\"에러 체크!!\");\n      }\n    });\n  }\n  // );\n\n  function RedirectAndInputErrors() {\n    if (response.bindingResultHasErrors && response.noEmailLikeThat) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-text-error\",\n          children: \"bindingResultHasErrors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-text-error\",\n          children: \"noEmailLikeThat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    } else if (response.bindingResultHasErrors) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-text-error\",\n        children: \"bindingResultHasErrors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this);\n    } else if (response.noEmailLikeThat) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-text-error\",\n        children: \"noEmailLikeThat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this);\n    } else if (submitted) {\n      // 위 조건 만족할 때만 loginForm으로 새로고침\n      window.location.href = \"/loginForm\";\n      return null;\n    }\n    return null;\n  }\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isDirty,\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FindPassword-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderRingcaShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        name: \"sendEmail\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC785\\uB825\\uD55C \\uC774\\uBA54\\uC77C\\uB85C \\uC784\\uC2DC \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC804\\uC1A1\\uB429\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-in\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-text\",\n              children: \"\\uC774\\uBA54\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-box-div-light user-icon-email-light\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-icon-bar\",\n                children: \"|\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"user-inner-transparent\",\n                type: \"email\",\n                ...register(\"userEmail\", {\n                  required: \"가입할 때 입력한 이메일을 입력해주세요.\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn\",\n            id: \"checkEmail\",\n            onClick: handleSendPwdClick,\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBC1C\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RedirectAndInputErrors, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n}\n_s(FindPassword, \"6TixVS8TT9UzqaildIbX4SKdnL0=\", false, function () {\n  return [useForm];\n});\n_c = FindPassword;\nexport default FindPassword;\nvar _c;\n$RefreshReg$(_c, \"FindPassword\");","map":{"version":3,"names":["axios","useState","useForm","HeaderRingcaShort","FindPassword","response","setResponse","bindingResultHasErrors","noEmailLikeThat","submitted","setSubmitted","onSubmit","data","Promise","r","setTimeout","console","log","post","then","res","catch","error","config","handleSendPwdClick","userEmail","$","val","sendEmail","document","forms","ajax","type","url","memberEmail","dataType","success","result","alert","submit","RedirectAndInputErrors","window","location","href","register","handleSubmit","formState","isSubmitting","isDirty","errors","required"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/FindPassword.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport HeaderRingcaShort from \"../../components/HeaderRingcaShort\";\nimport \"../../styles/layout/layout.css\";\n\nfunction FindPassword() {\n\ttype ResponseList = {\n\t\tbindingResultHasErrors: boolean;\n\t\tnoEmailLikeThat: boolean;\n\t};\n\tconst [response, setResponse] = useState<ResponseList>({\n\t\tbindingResultHasErrors: false,\n\t\tnoEmailLikeThat: false,\n\t});\n\t// submitted==true여야 새로고침 되도록.\n\tconst [submitted, setSubmitted] = useState(false);\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\n\t\t// alert(JSON.stringify(data));\n\t\tconsole.log(data);\n\n\t\tawait axios\n\t\t\t.post(\"/joinForm\", data)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(\"postHere\");\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetResponse(res.data);\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tsetSubmitted(true);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t};\n\n\t// $(\"#checkEmail\").click(\n\n\tfunction handleSendPwdClick() {\n\t\tconst userEmail = $(\"#userEmail\").val();\n\t\tconst sendEmail = document.forms[0];\n\t\t$.ajax({\n\t\t\ttype: \"post\",\n\t\t\turl: \"emailDuplication\",\n\t\t\tdata: {\n\t\t\t\tmemberEmail: userEmail,\n\t\t\t},\n\t\t\tdataType: \"text\",\n\t\t\tsuccess: function (result) {\n\t\t\t\tif (result == \"no\") {\n\t\t\t\t\t// 중복되는 것이 있다면 no == 일치하는 이메일이 있다!\n\t\t\t\t\talert(\"임시비밀번호를 전송 했습니다.\");\n\t\t\t\t\tsendEmail.submit();\n\t\t\t\t} else {\n\t\t\t\t\talert(\"가입되지 않은 이메일입니다.\");\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\tconsole.log(\"에러 체크!!\");\n\t\t\t},\n\t\t});\n\t}\n\t// );\n\n\tfunction RedirectAndInputErrors() {\n\t\tif (response.bindingResultHasErrors && response.noEmailLikeThat) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"user-text-error\">bindingResultHasErrors</div>\n\t\t\t\t\t<div className=\"user-text-error\">noEmailLikeThat</div>\n\t\t\t\t</>\n\t\t\t);\n\t\t} else if (response.bindingResultHasErrors) {\n\t\t\treturn <div className=\"user-text-error\">bindingResultHasErrors</div>;\n\t\t} else if (response.noEmailLikeThat) {\n\t\t\treturn <div className=\"user-text-error\">noEmailLikeThat</div>;\n\t\t} else if (submitted) {\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\n\t\t\twindow.location.href = \"/loginForm\";\n\t\t\treturn null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { isSubmitting, isDirty, errors },\n\t} = useForm();\n\n\treturn (\n\t\t<div className=\"FindPassword-container\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<HeaderRingcaShort />\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} name=\"sendEmail\">\n\t\t\t\t\t<p>입력한 이메일로 임시 비밀번호가 전송됩니다.</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"user-box-in\">\n\t\t\t\t\t\t\t<div className=\"user-text\">이메일</div>\n\t\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-email-light\">\n\t\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t{...register(\"userEmail\", {\n\t\t\t\t\t\t\t\t\t\trequired: \"가입할 때 입력한 이메일을 입력해주세요.\",\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\tid=\"checkEmail\"\n\t\t\t\t\t\t\tonClick={handleSendPwdClick}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t비밀번호 발송\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<RedirectAndInputErrors />\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n}\n\nexport default FindPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}