{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/layout/layout.css\";\nimport \"../../styles/layout/header.css\";\nimport \"../../styles/user/userBox.css\";\nimport \"../../styles/user/userIcon.css\";\nimport \"../../styles/user/userHeader.css\";\nimport \"../../styles/layout/reactToast.css\";\nimport \"../../styles/login.css\";\nimport HeaderRingca from \"../../components/HeaderRingca\";\nimport { useForm } from \"react-hook-form\";\n// import Toastify from \"../../components/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // const client = new Client(\"AAAAAAAAAAAAAAAAAAAAAOWsiwEAAAAADbR%2FLCPhXEE5vHgf%2BCli0CgKOjk%3DMjxq0SR9yVxDzuVCiN5sjmeiG26QYTSrIu6BM2sQozQY3ViVtd\");\n\n  // function BtnToPageUp(){\n  // \tfunction handleClick(e: any){\n\n  // \t\tasync function main() {\n  // \t\t\tconst tweet = await client.tweets.findTweetById(\"20\");\n  // \t\t\tif(tweet.data){\n  // \t\t\tconsole.log(tweet.data.text);\n  // \t\t\t}\n  // \t\t}\n  // \t\tmain();\n  // \t}\n  // \treturn (\n  // \t\t<button className=\"page-btn\" onClick={handleClick}>\n  // \t\t\t<img alt=\"\" src=\"/buttons/move-next-page-btn.svg\" />\n  // \t\t</button>\n  // \t);\n  // }\n\n  // var Twitter = require('twitter');\n\n  // var client = new Twitter({\n  //   consumer_key: 'S0FVySANFNnlISMw5D1vSE8P0',\n  //   consumer_secret: 'KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X',\n  //   access_token_key: '1516353113430851586-BikPyEoaehv4mDqSnCLc5mMQGuigeR',\n  //   access_token_secret: 'zReOE8IWZ5wbGnPC4D8AClbBqc1hXhDQZcbBf2OOar2vw'\n  // });\n\n  // function tweetPost(content: string) {\n  //   client.post('statuses/update', {status: content}, function(error: any, tweet: any, response: any) {\n  //     if (!error) {\n  //       console.log(\"tweet success: \" + content);\n  //     } else {\n  //       console.log(error);\n  //     }\n  //   });\n  // }\n  // dotenv.config();\n\n  // const app = express();\n\n  // const authClient = new auth.OAuth2User({\n  //   client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\n  //   client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\n  //   callback: \"https://127.0.0.1:3000/callback\",\n  //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\n  // });\n\n  // // const authClient = new auth.OAuth2User({\n  // //   client_id: process.env.CLIENT_ID as string,\n  // //   client_secret: process.env.CLIENT_SECRET as string,\n  // //   callback: \"https://127.0.0.1:3000/callback\",\n  // //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\n  // // });\n\n  // const client = new Client(authClient);\n\n  // const STATE = \"my-state\";\n\n  // app.get(\"/callback\", async function (req, res) {\n  //   try {\n  //     const { code, state } = req.query;\n  //     if (state !== STATE) return res.status(500).send(\"State isn't matching\");\n  //     await authClient.requestAccessToken(code as string);\n  //     res.redirect(\"/tweets\");\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // });\n\n  // app.get(\"/login\", async function (req, res) {\n  //   const authUrl = authClient.generateAuthURL({\n  //     state: STATE,\n  //     code_challenge_method: \"plain\",\n  //     code_challenge: \"test\",\n  //   });\n  //   res.redirect(authUrl);\n  // });\n\n  // app.get(\"/tweets\", async function (req, res) {\n  //   try {\n  //     const tweets = await client.tweets.findTweetById(\"20\");\n  //     res.send(tweets);\n  //   } catch (error) {\n  //     console.log(\"tweets error\", error);\n  //   }\n  // });\n\n  // app.get(\"/revoke\", async function (req, res) {\n  //   try {\n  //     const response = await authClient.revokeAccessToken();\n  //     res.send(response);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // });\n\n  // app.listen(3000, () => {\n  //   console.log(`Go here to login: http://127.0.0.1:3000/login`);\n  // });\n\n  // \t// toastify 알람 실행 함수 만들기\n  //   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", {\n  // \t\tautoClose: 700,\n  // \t\tposition:\"top-center\",\n  // \t\tpauseOnFocusLoss: true,\n  // \t\thideProgressBar: true,\n  // \t\tdraggable: true,\n  // \t\tpauseOnHover: true,\n  // \t\ttheme: \"dark\",\n  // \t\tcloseButton: false,\n  // \t\ttransition: Zoom,\n  // \t\t// onOpen: () => window.alert('Called when I open'),\n  // \t\t// onClose: () => window.alert('Called when I close')\n  // })\n  useEffect(() => {\n    axios.all([axios.get(\"/loginForm\"), axios.get(\"/\"), axios.get(\"\")]).then(axios.spread((res1, res2, res3) => {\n      console.log(\"front loginForm\");\n      // window.location.href = \"/loginForm\";\n    })).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // twitterOAuth2({\n  // client_id: 'YOUR-CLIENT-ID',\n  // client_secret: 'YOUR-CLIENT-SECRET',\n  // redirect_uri: 'YOUR-REDIRECT-URI',\n  // scope: 'tweet.read users.read offline.access'\n  // })\t\n\n  const [response, setResponse] = useState({\n    bindingResultHasErrors: false,\n    overlappedUsername: false\n  });\n  // submitted==true여야 새로고침 되도록.\n  const [submitted, setSubmitted] = useState(false);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    await axios.post(\"/login\", data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      console.log(\"postHere\");\n      console.log(data);\n      setResponse(res.data);\n      console.log(res.data);\n      setSubmitted(true);\n      window.location.replace(\"/home/unanswered\");\n    }).catch(function (error) {\n      console.log(error.config);\n    });\n  };\n  function RedirectAndInputErrors() {\n    if (response.bindingResultHasErrors && response.overlappedUsername) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-text-error\",\n          children: \"bindingResultHasErrors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-text-error\",\n          children: \"overlappedUsername\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    } else if (response.bindingResultHasErrors) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-text-error\",\n        children: \"bindingResultHasErrors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this);\n    } else if (response.overlappedUsername) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-text-error\",\n        children: \"overlappedUsername\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this);\n    } else if (submitted) {\n      // 위 조건 만족할 때만 loginForm으로 새로고침\n      window.location.href = \"/loginForm\";\n      return null;\n    }\n    return null;\n  }\n  const authHandler = (err, data) => {\n    console.log(err, data);\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isDirty,\n      errors\n    }\n  } = useForm();\n\n  // PW toggle start.\n  const [showPw, setShowPw] = useState(false);\n  const toggleShowPw = () => {\n    setShowPw(!showPw);\n  };\n  function handlePwClick(e) {\n    toggleShowPw();\n  }\n  function ShowPw(props) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"\\uBCC0\\uACBD\",\n      className: \"user-show-pw\",\n      onClick: handlePwClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 4\n    }, this);\n  }\n  function HidePw(props) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"\\uBCC0\\uACBD\",\n      className: \"user-hide-pw\",\n      onClick: handlePwClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 4\n    }, this);\n  }\n  // PW toggle fin.\n\n  function BtnToJoin() {\n    function handleClick(e) {\n      window.location.href = \"/joinForm\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-join\",\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-join-text\",\n        children: \"\\uC544\\uC9C1 \\uB9C1\\uCE74\\uC758 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 4\n    }, this);\n  }\n  const responseErrorTwitter = async response => {\n    console.log(response);\n  };\n  const responseSuccessTwitter = async response => {\n    //do something\n    console.log(response.resources);\n  };\n  const onResponse = resp => {\n    console.log(resp);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderRingca, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-text\",\n            children: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-div-light user-icon-user-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-icon-bar\",\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"user-inner-transparent\",\n              ...register(\"username\", {\n                required: \"답변이 입력되지 않았습니다.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-text\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-div user-icon-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-icon-bar\",\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPw ? \"text\" : \"password\",\n              className: \"user-inner-transparent\"\n              // placeholder=\"비밀번호를 입력해주세요\"\n              ,\n              ...register(\"password\", {\n                required: \"답변이 입력되지 않았습니다.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 8\n            }, this), showPw ? /*#__PURE__*/_jsxDEV(ShowPw, {\n              onClick: toggleShowPw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 9\n            }, this) : /*#__PURE__*/_jsxDEV(HidePw, {\n              onClick: toggleShowPw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-text user-text-right\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box-in\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"user-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-btn-text\",\n              children: \"\\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/oauth2/authorization/twitter\",\n          children: \"\\uD2B8\\uC704\\uD130 \\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-join-box\",\n          children: /*#__PURE__*/_jsxDEV(BtnToJoin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"n+xAkMXuaNuegQPqfRuEaSNHhQ8=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","HeaderRingca","useForm","Login","all","get","then","spread","res1","res2","res3","console","log","catch","err","response","setResponse","bindingResultHasErrors","overlappedUsername","submitted","setSubmitted","onSubmit","data","Promise","r","setTimeout","post","headers","res","window","location","replace","error","config","RedirectAndInputErrors","href","authHandler","register","handleSubmit","formState","isSubmitting","isDirty","errors","showPw","setShowPw","toggleShowPw","handlePwClick","e","ShowPw","props","HidePw","BtnToJoin","handleClick","responseErrorTwitter","responseSuccessTwitter","resources","onResponse","resp","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/layout/reactToast.css\";\r\nimport \"../../styles/login.css\";\r\nimport HeaderNoProfile from \"../../components/HeaderNoProfile\";\r\nimport HeaderRingca from \"../../components/HeaderRingca\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import Toastify from \"../../components/Toast\";\r\nimport TwitterLogin from \"react-twitter-login\";\r\nimport ReactTwitterLogin from \"react-twitter-login\";\r\n// import ReactGoogleLogin from \"react-google-login\";\r\nimport { twitterOAuth2 } from 'twitter-oauth2';\r\nimport { Client } from \"twitter-api-sdk\";\r\n\r\nconst Login = () => {\r\n\r\n\t// const client = new Client(\"AAAAAAAAAAAAAAAAAAAAAOWsiwEAAAAADbR%2FLCPhXEE5vHgf%2BCli0CgKOjk%3DMjxq0SR9yVxDzuVCiN5sjmeiG26QYTSrIu6BM2sQozQY3ViVtd\");\r\n\r\n\t// function BtnToPageUp(){\r\n\t// \tfunction handleClick(e: any){\r\n\t\t\t\r\n\t// \t\tasync function main() {\r\n\t// \t\t\tconst tweet = await client.tweets.findTweetById(\"20\");\r\n\t// \t\t\tif(tweet.data){\r\n\t// \t\t\tconsole.log(tweet.data.text);\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tmain();\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<button className=\"page-btn\" onClick={handleClick}>\r\n\t// \t\t\t<img alt=\"\" src=\"/buttons/move-next-page-btn.svg\" />\r\n\t// \t\t</button>\r\n\t// \t);\r\n\t// }\r\n\r\n\t\r\n\t\r\n\t// var Twitter = require('twitter');\r\n\r\n\t// var client = new Twitter({\r\n\t//   consumer_key: 'S0FVySANFNnlISMw5D1vSE8P0',\r\n\t//   consumer_secret: 'KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X',\r\n\t//   access_token_key: '1516353113430851586-BikPyEoaehv4mDqSnCLc5mMQGuigeR',\r\n\t//   access_token_secret: 'zReOE8IWZ5wbGnPC4D8AClbBqc1hXhDQZcbBf2OOar2vw'\r\n\t// });\r\n\r\n\t// function tweetPost(content: string) {\r\n\t//   client.post('statuses/update', {status: content}, function(error: any, tweet: any, response: any) {\r\n\t//     if (!error) {\r\n\t//       console.log(\"tweet success: \" + content);\r\n\t//     } else {\r\n\t//       console.log(error);\r\n\t//     }\r\n\t//   });\r\n\t// }\r\n\t// dotenv.config();\r\n\r\n\t// const app = express();\r\n\r\n\t// const authClient = new auth.OAuth2User({\r\n\t//   client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\r\n\t//   client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\r\n\t//   callback: \"https://127.0.0.1:3000/callback\",\r\n\t//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n\t// });\r\n\r\n\t// // const authClient = new auth.OAuth2User({\r\n\t// //   client_id: process.env.CLIENT_ID as string,\r\n\t// //   client_secret: process.env.CLIENT_SECRET as string,\r\n\t// //   callback: \"https://127.0.0.1:3000/callback\",\r\n\t// //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n\t// // });\r\n\r\n\t// const client = new Client(authClient);\r\n\r\n\t// const STATE = \"my-state\";\r\n\r\n\t// app.get(\"/callback\", async function (req, res) {\r\n\t//   try {\r\n\t//     const { code, state } = req.query;\r\n\t//     if (state !== STATE) return res.status(500).send(\"State isn't matching\");\r\n\t//     await authClient.requestAccessToken(code as string);\r\n\t//     res.redirect(\"/tweets\");\r\n\t//   } catch (error) {\r\n\t//     console.log(error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.get(\"/login\", async function (req, res) {\r\n\t//   const authUrl = authClient.generateAuthURL({\r\n\t//     state: STATE,\r\n\t//     code_challenge_method: \"plain\",\r\n\t//     code_challenge: \"test\",\r\n\t//   });\r\n\t//   res.redirect(authUrl);\r\n\t// });\r\n\r\n\t// app.get(\"/tweets\", async function (req, res) {\r\n\t//   try {\r\n\t//     const tweets = await client.tweets.findTweetById(\"20\");\r\n\t//     res.send(tweets);\r\n\t//   } catch (error) {\r\n\t//     console.log(\"tweets error\", error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.get(\"/revoke\", async function (req, res) {\r\n\t//   try {\r\n\t//     const response = await authClient.revokeAccessToken();\r\n\t//     res.send(response);\r\n\t//   } catch (error) {\r\n\t//     console.log(error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.listen(3000, () => {\r\n\t//   console.log(`Go here to login: http://127.0.0.1:3000/login`);\r\n\t// });\r\n\r\n\t// \t// toastify 알람 실행 함수 만들기\r\n\t//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", {\r\n\t// \t\tautoClose: 700,\r\n\t// \t\tposition:\"top-center\",\r\n\t// \t\tpauseOnFocusLoss: true,\r\n\t// \t\thideProgressBar: true,\r\n\t// \t\tdraggable: true,\r\n\t// \t\tpauseOnHover: true,\r\n\t// \t\ttheme: \"dark\",\r\n\t// \t\tcloseButton: false,\r\n\t// \t\ttransition: Zoom,\r\n\t// \t\t// onOpen: () => window.alert('Called when I open'),\r\n\t// \t\t// onClose: () => window.alert('Called when I close')\r\n\t// })\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.all([axios.get(\"/loginForm\"), axios.get(\"/\"), axios.get(\"\")])\r\n\t\t\t.then(\r\n\t\t\t\taxios.spread((res1, res2, res3) => {\r\n\t\t\t\t\tconsole.log(\"front loginForm\");\r\n\t\t\t\t\t// window.location.href = \"/loginForm\";\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\t// twitterOAuth2({\r\n  // client_id: 'YOUR-CLIENT-ID',\r\n  // client_secret: 'YOUR-CLIENT-SECRET',\r\n  // redirect_uri: 'YOUR-REDIRECT-URI',\r\n  // scope: 'tweet.read users.read offline.access'\r\n\t// })\t\r\n\r\n\ttype ResponseList = {\r\n\t\tbindingResultHasErrors: boolean;\r\n\t\toverlappedUsername: boolean;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tbindingResultHasErrors: false,\r\n\t\toverlappedUsername: false,\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/login\", data, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t\twindow.location.replace(\"/home/unanswered\");\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors() {\r\n\t\tif (response.bindingResultHasErrors && response.overlappedUsername) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t\t\t\t<div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else if (response.bindingResultHasErrors) {\r\n\t\t\treturn <div className=\"user-text-error\">bindingResultHasErrors</div>;\r\n\t\t} else if (response.overlappedUsername) {\r\n\t\t\treturn <div className=\"user-text-error\">overlappedUsername</div>;\r\n\t\t} else if (submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst authHandler = (err:any, data:any) => {\r\n    console.log(err, data);\r\n  };\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw = () => {\r\n\t\tsetShowPw(!showPw);\r\n\t};\r\n\r\n\tfunction handlePwClick(e: any) {\r\n\t\ttoggleShowPw();\r\n\t}\r\n\r\n\tfunction ShowPw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-show-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-hide-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\t// PW toggle fin.\r\n\r\n\tfunction BtnToJoin() {\r\n\t\tfunction handleClick(e: any) {\r\n\t\t\twindow.location.href = \"/joinForm\";\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"login-join\" onClick={handleClick}>\r\n\t\t\t\t<div className=\"login-join-text\">아직 링카의 회원이 아니신가요?</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tconst responseErrorTwitter = async (response:any) => {\r\n        console.log(response);\r\n    };\r\n    const responseSuccessTwitter = async (response:any) => {\r\n        //do something\r\n        console.log(response.resources);\r\n    };\r\n\r\n\tconst onResponse = (resp:any) => {\r\n    console.log(resp);\r\n  };\r\n\t\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderRingca />\r\n\t\t\t\t{/* <ToastContainer/> */}\r\n\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-user-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t{...register(\"username\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t// placeholder=\"비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"user-text user-text-right\">\r\n\t\t\t\t\t\t\t비밀번호를 잊으셨나요?\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">비밀번호 변경</button>\r\n\t\t\t\t</form> */}\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"user-btn\">\r\n\t\t\t\t\t\t\t<div className=\"user-btn-text\">로그인</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <TwitterLogin\r\n          authCallback={authHandler}\r\n          consumerKey={\"S0FVySANFNnlISMw5D1vSE8P0\"}\r\n          consumerSecret={\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\"}\r\n          callbackUrl={\"http://localhost:3000/login/oauth2/code/twitter\"}\r\n          buttonTheme={\"dark\"}\r\n        \t/> */}\r\n\r\n\t\t\t\t\t{/* <TwitterLogin onFailure={responseErrorTwitter}\r\n                      onSuccess={responseSuccessTwitter}\r\n                      credentials=\"include\"\r\n                      customHeaders={\r\n                          {\r\n                              \"X-Requested-With\": \"XMLHttpRequest\",\r\n                          }\r\n                      }\r\n                      authenticationUrl=\"https://example.com/auth/twitter\"\r\n                      requestUrl=\"https://example.com/auth/twitter/url\">\r\n            Login with Twitter\r\n        </TwitterLogin> */}\r\n\r\n\t\t\t\t{/* <ReactTwitterLogin\r\n\t\t\t\t\tauthCallback={authHandler}\r\n\t\t\t\t\tconsumerKey=\"S0FVySANFNnlISMw5D1vSE8P0\" // We created this, remember?\r\n\t\t\t\t\tconsumerSecret=\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" // We created this, remember?\r\n\t\t\t\t\tcallbackUrl=\"http://localhost:3000/login/oauth2/code/twitter\" // You set this up in the twitter app settings, remember?\r\n\t\t\t\t/> */}\r\n\r\n\t\t\t\t{/* <ReactGoogleLogin\r\n\t\t\t\t\tclientId=\"229666542925-10vg43mj7b66bp06vkakne3spsr309pp.apps.googleusercontent.com\" // We created this earlier, remember?\r\n\t\t\t\t\tbuttonText=\"Login with Google\"\r\n\t\t\t\t\tonSuccess={onResponse}\r\n\t\t\t\t\tonFailure={onResponse}\r\n\t\t\t\t/> */}\r\n\t\t\t\t{/* <BtnToPageUp/> */}\r\n\r\n\t\t\t\t\t<a href=\"/oauth2/authorization/twitter\">트위터 로그인</a>\r\n\r\n\t\t\t\t\t<div className=\"login-join-box\">\r\n\t\t\t\t\t\t<BtnToJoin />\r\n\t\t\t\t\t\t{/* <button onClick={notify}/> */}\r\n\t\t\t\t\t\t{/* <Toastify text=\"hello\"/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}