{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx\";\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction makeTapeUrl(tapeType) {\n  const tapeTypeStr = String(tapeType);\n  const result = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n  return result;\n}\nfunction makeTapePosition(tapePosition) {\n  const tapePositionList = [\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -25px;\", \"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -22.5px; transform: rotate(6deg);\", \"width: 120px; height: 28px; transform: rotate(-30deg); margin: -10px auto -15px -40px;\", \"width: 130px; height: 28px; transform: rotate(-18deg); margin: -20px auto -30px -30px;\", \"width: 130px; height: 28px; transform: rotate(20deg); margin: -12px -40px -10px auto;\", \"width: 100px; height: 28px; transform: rotate(36deg); margin: -10px -40px -10px auto;\"];\n  const chosenPosition = tapePositionList[tapePosition];\n  // tapeImage.setAttribute(\"style\", chosenPosition);\n}\n\nfunction QuestionNoteList(props) {\n  const QandAmap = props.map;\n  const cntPosition = tapePositionList.length;\n  const tapeImages = document.getElementsByClassName(\"QuestionNote-maskingTape-img\");\n  var tapeImageList = Array.from(tapeImages);\n  tapeImageList.forEach(tapeImage => {\n    const chosenPosition = tapePositionList[Math.floor(Math.random() * cntPosition)];\n    tapeImage.setAttribute(\"style\", chosenPosition);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-notes-container\",\n      children: QandAmap.map((QA, idx) => /*#__PURE__*/_jsxDEV(QuestionNoteAnony, {\n        idx: idx,\n        question: QA[0],\n        answer: QA[1],\n        tapeUrl: makeTapeUrl(QA[0].tapeType)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c;\n$RefreshReg$(_c, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNoteAnony","React","makeTapeUrl","tapeType","tapeTypeStr","String","result","makeTapePosition","tapePosition","tapePositionList","chosenPosition","QuestionNoteList","props","QandAmap","map","cntPosition","length","tapeImages","document","getElementsByClassName","tapeImageList","Array","from","forEach","tapeImage","Math","floor","random","setAttribute","QA","idx"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tmap: [IQuestion, IAnswer][];\n}\n\nfunction makeTapeUrl(tapeType: Number) {\n\tconst tapeTypeStr = String(tapeType);\n\tconst result = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n\treturn result;\n}\n\nfunction makeTapePosition(tapePosition: any) {\n\tconst tapePositionList = [\n\t\t\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -25px;\",\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -22.5px; transform: rotate(6deg);\",\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: -10px auto -15px -40px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: -20px auto -30px -30px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: -12px -40px -10px auto;\",\n\t\t\"width: 100px; height: 28px; transform: rotate(36deg); margin: -10px -40px -10px auto;\",\n\t];\n\tconst chosenPosition =\n\t\t\ttapePositionList[tapePosition];\n\t\t// tapeImage.setAttribute(\"style\", chosenPosition);\n}\n\nfunction QuestionNoteList(props: Props) {\n\tconst QandAmap = props.map;\n\n\t\n\tconst cntPosition = tapePositionList.length;\n\n\tconst tapeImages = document.getElementsByClassName(\n\t\t\"QuestionNote-maskingTape-img\"\n\t);\n\n\tvar tapeImageList = Array.from(tapeImages);\n\n\ttapeImageList.forEach((tapeImage) => {\n\t\tconst chosenPosition =\n\t\t\ttapePositionList[Math.floor(Math.random() * cntPosition)];\n\t\ttapeImage.setAttribute(\"style\", chosenPosition);\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{QandAmap.map((QA, idx) => (\n\t\t\t\t\t<QuestionNoteAnony\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tquestion={QA[0]}\n\t\t\t\t\t\tanswer={QA[1]}\n\t\t\t\t\t\ttapeUrl={makeTapeUrl(QA[0].tapeType)}\n\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":";AAMA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAM1B,SAASC,WAAW,CAACC,QAAgB,EAAE;EACtC,MAAMC,WAAW,GAAGC,MAAM,CAACF,QAAQ,CAAC;EACpC,MAAMG,MAAM,GAAGD,MAAM,CAAC,qBAAqB,GAAGD,WAAW,GAAG,MAAM,CAAC;EACnE,OAAOE,MAAM;AACd;AAEA,SAASC,gBAAgB,CAACC,YAAiB,EAAE;EAC5C,MAAMC,gBAAgB,GAAG,CACxB,kEAAkE,EAClE,kGAAkG,EAClG,wFAAwF,EACxF,wFAAwF,EACxF,uFAAuF,EACvF,uFAAuF,CACvF;EACD,MAAMC,cAAc,GAClBD,gBAAgB,CAACD,YAAY,CAAC;EAC/B;AACF;;AAEA,SAASG,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;EAG1B,MAAMC,WAAW,GAAGN,gBAAgB,CAACO,MAAM;EAE3C,MAAMC,UAAU,GAAGC,QAAQ,CAACC,sBAAsB,CACjD,8BAA8B,CAC9B;EAED,IAAIC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC;EAE1CG,aAAa,CAACG,OAAO,CAAEC,SAAS,IAAK;IACpC,MAAMd,cAAc,GACnBD,gBAAgB,CAACgB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGZ,WAAW,CAAC,CAAC;IAC1DS,SAAS,CAACI,YAAY,CAAC,OAAO,EAAElB,cAAc,CAAC;EAChD,CAAC,CAAC;EAEF,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,0BAA0B;MAAA,UACvCG,QAAQ,CAACC,GAAG,CAAC,CAACe,EAAE,EAAEC,GAAG,kBACrB,QAAC,iBAAiB;QAEjB,GAAG,EAAEA,GAAI;QACT,QAAQ,EAAED,EAAE,CAAC,CAAC,CAAE;QAChB,MAAM,EAAEA,EAAE,CAAC,CAAC,CAAE;QACd,OAAO,EAAE3B,WAAW,CAAC2B,EAAE,CAAC,CAAC,CAAC,CAAC1B,QAAQ;MAAE,GAJhC2B,GAAG;QAAA;QAAA;QAAA;MAAA,QAOT;IAAC;MAAA;MAAA;MAAA;IAAA;EACG,iBACJ;AAEL;AAAC,KAlCQnB,gBAAgB;AAoCzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}