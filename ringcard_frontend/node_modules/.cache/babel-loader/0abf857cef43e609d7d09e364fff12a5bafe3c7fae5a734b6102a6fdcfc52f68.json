{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/EditAnswerForm.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../styles/answerQuestionNote.css\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerForm(props) {\n  _s();\n  const questionId = String(props.questionId);\n  const PropsOldAnswer = String(props.oldAnswer);\n  const [oldAnswer, setOldAnswer] = useState();\n  useEffect(() => {\n    setOldAnswer(PropsOldAnswer);\n  }, [PropsOldAnswer]);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n    await axios.post(\"/question/\" + questionId + \"/edit/user\", data).then(res => {\n      window.location.replace(\"/question/\" + questionId + \"/completed/user\");\n    }).catch(function (error) {\n      console.log(error.config);\n    });\n  };\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  // 디폴트 밸류로 예전 값 넣는 방법.\n  // TODO: 근데 디폴트값이랑 현재값 연동이 안 돼서 보류\n  // const {\n  // \tregister,\n  // \thandleSubmit,\n  // \treset,\n  // \tformState: { isSubmitting, isDirty, errors },\n  // } = useForm({ defaultValues: oldAnswer });\n  // useEffect(() => {\n  // \tsetOldAnswer(props.oldAnswer);\n  // \treset(props.oldAnswer);\n  // }, [props.oldAnswer]);\n\n  // // 유저 입력 값을 넣을 변수\n  // const [checkItemContent, setCheckItemContent] = useState(\"\");\n  // // 줄 수를 계산해서 저장할 변수\n  // const [textareaHeight, setTextareaHeight] = useState(0);\n\n  // // 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n  // // 엔터('\\n') 개수를 세서 textareaHeight에 저장\n  // const checkItemChangeHandler = (event: any) => {\n  // \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n  // \tsetCheckItemContent(event.target.value);\n  // };\n  // const checkItemChangeHandler = (event: any) => {\n  // \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n  // \tsetCheckItemContent(event.target.value);\n  // };\n\n  function checkLengthHandler(event) {\n    var text = event.target.value;\n    var test_length = text.length;\n\n    //최대 글자수\n    var max_length = 5000;\n    if (test_length > max_length) {\n      alert(max_length + \"자 이상 작성할 수 없습니다.\");\n      text = text.substr(0, max_length);\n      event.target.value = text;\n      event.target.focus();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"answerForm-answer-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-text-box checkItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursur-bar\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n        id: \"answerAdd\",\n        className: \"answerForm-textarea\"\n        // value={checkItemContent}\n        // onInput={checkItemChangeHandler}\n        ,\n        defaultValue: oldAnswer\n        // value={oldAnswer}\n        ,\n        onKeyUp: checkLengthHandler,\n        rows: 5,\n        maxRows: 10\n        // onChange={onChangeEvent}\n        // onHeightChange={onHeightChangeEvent}\n        ,\n        ...register(\"answerContents\", {\n          required: \"답변이 입력되지 않았습니다.\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-btn-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"note-send-answer-btn\",\n          src: \"/buttons/send-answer-btn.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n_s(AnswerForm, \"o8BoHo+fL1qw/h05ygLtI6sVd3I=\", false, function () {\n  return [useForm];\n});\n_c = AnswerForm;\nexport default AnswerForm;\nvar _c;\n$RefreshReg$(_c, \"AnswerForm\");","map":{"version":3,"names":["axios","useEffect","useState","useForm","TextareaAutosize","AnswerForm","props","questionId","String","PropsOldAnswer","oldAnswer","setOldAnswer","onSubmit","data","Promise","r","setTimeout","post","then","res","window","location","replace","catch","error","console","log","config","register","handleSubmit","checkLengthHandler","event","text","target","value","test_length","length","max_length","alert","substr","focus","required"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/EditAnswerForm.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../styles/answerQuestionNote.css\";\nimport TextareaAutosize from \"react-textarea-autosize\";\n\nexport interface Props {\n\tquestionId: number;\n\toldAnswer: String;\n}\n\nfunction AnswerForm(props: Props) {\n\tconst questionId = String(props.questionId);\n\tconst PropsOldAnswer = String(props.oldAnswer);\n\tconst [oldAnswer, setOldAnswer] = useState<any>();\n\tuseEffect(() => {\n\t\tsetOldAnswer(PropsOldAnswer);\n\t}, [PropsOldAnswer]);\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\t\tawait axios\n\t\t\t.post(\"/question/\" + questionId + \"/edit/user\", data)\n\t\t\t.then((res) => {\n\t\t\t\twindow.location.replace(\"/question/\" + questionId + \"/completed/user\");\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t};\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t} = useForm();\n\n\t// 디폴트 밸류로 예전 값 넣는 방법.\n\t// TODO: 근데 디폴트값이랑 현재값 연동이 안 돼서 보류\n\t// const {\n\t// \tregister,\n\t// \thandleSubmit,\n\t// \treset,\n\t// \tformState: { isSubmitting, isDirty, errors },\n\t// } = useForm({ defaultValues: oldAnswer });\n\t// useEffect(() => {\n\t// \tsetOldAnswer(props.oldAnswer);\n\t// \treset(props.oldAnswer);\n\t// }, [props.oldAnswer]);\n\n\t// // 유저 입력 값을 넣을 변수\n\t// const [checkItemContent, setCheckItemContent] = useState(\"\");\n\t// // 줄 수를 계산해서 저장할 변수\n\t// const [textareaHeight, setTextareaHeight] = useState(0);\n\n\t// // 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n\t// // 엔터('\\n') 개수를 세서 textareaHeight에 저장\n\t// const checkItemChangeHandler = (event: any) => {\n\t// \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n\t// \tsetCheckItemContent(event.target.value);\n\t// };\n\t// const checkItemChangeHandler = (event: any) => {\n\t// \tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n\t// \tsetCheckItemContent(event.target.value);\n\t// };\n\n\tfunction checkLengthHandler(event: any) {\n\t\tvar text = event.target.value;\n\t\tvar test_length = text.length;\n\n\t\t//최대 글자수\n\t\tvar max_length = 5000;\n\n\t\tif (test_length > max_length) {\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\n\t\t\ttext = text.substr(0, max_length);\n\t\t\tevent.target.value = text;\n\t\t\tevent.target.focus();\n\t\t}\n\t}\n\n\treturn (\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div className=\"answerForm-text-box checkItem\">\n\t\t\t\t<span className=\"cursur-bar\">|</span>\n\t\t\t\t{/* <textarea\n\t\t\t\t\tid=\"answerAdd\"\n\t\t\t\t\tclassName=\"answerForm-textarea\"\n\t\t\t\t\t// value={checkItemContent}\n\t\t\t\t\tonInput={checkItemChangeHandler}\n\t\t\t\t\tstyle={{ height: (textareaHeight + 1) * 27 + \"px\" }}\n\t\t\t\t\t// placeholder={oldAnswer}\n\t\t\t\t\tdefaultValue={oldAnswer} \n\t\t\t\t\t{...register(\"answerContents\", {\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\n\t\t\t\t\t})}\n\t\t\t\t></textarea> */}\n\n\t\t\t\t<TextareaAutosize\n\t\t\t\t\tid=\"answerAdd\"\n\t\t\t\t\tclassName=\"answerForm-textarea\"\n\t\t\t\t\t// value={checkItemContent}\n\t\t\t\t\t// onInput={checkItemChangeHandler}\n\t\t\t\t\tdefaultValue={oldAnswer}\n\t\t\t\t\t// value={oldAnswer}\n\t\t\t\t\tonKeyUp={checkLengthHandler}\n\t\t\t\t\trows={5}\n\t\t\t\t\tmaxRows={10}\n\t\t\t\t\t// onChange={onChangeEvent}\n\t\t\t\t\t// onHeightChange={onHeightChangeEvent}\n\t\t\t\t\t{...register(\"answerContents\", {\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\n\t\t\t\t\t})}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"answerForm-btn-box\">\n\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default AnswerForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,qCAAqC;AAC5C,OAAOC,gBAAgB,MAAM,yBAAyB;AAAC;AAOvD,SAASC,UAAU,CAACC,KAAY,EAAE;EAAA;EACjC,MAAMC,UAAU,GAAGC,MAAM,CAACF,KAAK,CAACC,UAAU,CAAC;EAC3C,MAAME,cAAc,GAAGD,MAAM,CAACF,KAAK,CAACI,SAAS,CAAC;EAC9C,MAAM,CAACA,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,EAAO;EACjDD,SAAS,CAAC,MAAM;IACfU,YAAY,CAACF,cAAc,CAAC;EAC7B,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMG,QAAQ,GAAG,MAAOC,IAAS,IAAK;IACrC,MAAM,IAAIC,OAAO,CAAEC,CAAC,IAAKC,UAAU,CAACD,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5C,MAAMf,KAAK,CACTiB,IAAI,CAAC,YAAY,GAAGV,UAAU,GAAG,YAAY,EAAEM,IAAI,CAAC,CACpDK,IAAI,CAAEC,GAAG,IAAK;MACdC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,YAAY,GAAGf,UAAU,GAAG,iBAAiB,CAAC;IACvE,CAAC,CAAC,CACDgB,KAAK,CAAC,UAAUC,KAAK,EAAE;MACvBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC;EAED,MAAM;IACLC,QAAQ;IACRC;EACD,CAAC,GAAG1B,OAAO,EAAE;;EAEb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAAS2B,kBAAkB,CAACC,KAAU,EAAE;IACvC,IAAIC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC7B,IAAIC,WAAW,GAAGH,IAAI,CAACI,MAAM;;IAE7B;IACA,IAAIC,UAAU,GAAG,IAAI;IAErB,IAAIF,WAAW,GAAGE,UAAU,EAAE;MAC7BC,KAAK,CAACD,UAAU,GAAG,kBAAkB,CAAC;MACtCL,IAAI,GAAGA,IAAI,CAACO,MAAM,CAAC,CAAC,EAAEF,UAAU,CAAC;MACjCN,KAAK,CAACE,MAAM,CAACC,KAAK,GAAGF,IAAI;MACzBD,KAAK,CAACE,MAAM,CAACO,KAAK,EAAE;IACrB;EACD;EAEA,oBACC;IAAM,SAAS,EAAC,wBAAwB;IAAC,QAAQ,EAAEX,YAAY,CAACjB,QAAQ,CAAE;IAAA,wBACzE;MAAK,SAAS,EAAC,+BAA+B;MAAA,wBAC7C;QAAM,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS,eAcrC,QAAC,gBAAgB;QAChB,EAAE,EAAC,WAAW;QACd,SAAS,EAAC;QACV;QACA;QAAA;QACA,YAAY,EAAEF;QACd;QAAA;QACA,OAAO,EAAEoB,kBAAmB;QAC5B,IAAI,EAAE,CAAE;QACR,OAAO,EAAE;QACT;QACA;QAAA;QAAA,GACIF,QAAQ,CAAC,gBAAgB,EAAE;UAC9Ba,QAAQ,EAAE;QACX,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eACN;MAAK,SAAS,EAAC,oBAAoB;MAAA,uBAClC;QAAQ,IAAI,EAAC,QAAQ;QAAA,uBACpB;UACC,SAAS,EAAC,sBAAsB;UAChC,GAAG,EAAC,8BAA8B;UAClC,GAAG,EAAC;QAAE;UAAA;UAAA;UAAA;QAAA;MACL;QAAA;QAAA;QAAA;MAAA;IACM;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAET;AAAC,GAlHQpC,UAAU;EAAA,QAuBdF,OAAO;AAAA;AAAA,KAvBHE,UAAU;AAoHnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}