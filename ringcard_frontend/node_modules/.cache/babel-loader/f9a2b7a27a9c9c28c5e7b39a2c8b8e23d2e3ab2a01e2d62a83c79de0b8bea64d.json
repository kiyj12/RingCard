{"ast":null,"code":"const assert = require('assert');\nconst querystring = require('querystring');\nconst http = require('http');\nconst https = require('https');\nconst {\n  once\n} = require('events');\nconst {\n  URL\n} = require('url');\nconst LRU = require('lru-cache');\nconst pkg = require('../../package.json');\nconst {\n  RPError\n} = require('../errors');\nconst pick = require('./pick');\nconst {\n  deep: defaultsDeep\n} = require('./defaults');\nconst {\n  HTTP_OPTIONS\n} = require('./consts');\nlet DEFAULT_HTTP_OPTIONS;\nconst NQCHAR = /^[\\x21\\x23-\\x5B\\x5D-\\x7E]+$/;\nconst allowed = ['agent', 'ca', 'cert', 'crl', 'headers', 'key', 'lookup', 'passphrase', 'pfx', 'timeout'];\nconst setDefaults = (props, options) => {\n  DEFAULT_HTTP_OPTIONS = defaultsDeep({}, props.length ? pick(options, ...props) : options, DEFAULT_HTTP_OPTIONS);\n};\nsetDefaults([], {\n  headers: {\n    'User-Agent': `${pkg.name}/${pkg.version} (${pkg.homepage})`\n  },\n  timeout: 3500\n});\nfunction send(req, body, contentType) {\n  if (contentType) {\n    req.removeHeader('content-type');\n    req.setHeader('content-type', contentType);\n  }\n  if (body) {\n    req.removeHeader('content-length');\n    req.setHeader('content-length', Buffer.byteLength(body));\n    req.write(body);\n  }\n  req.end();\n}\nconst nonces = new LRU({\n  max: 100\n});\nmodule.exports = async function request(options) {\n  let {\n    accessToken,\n    mTLS = false,\n    DPoP\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let url;\n  try {\n    url = new URL(options.url);\n    delete options.url;\n    assert(/^(https?:)$/.test(url.protocol));\n  } catch (err) {\n    throw new TypeError('only valid absolute URLs can be requested');\n  }\n  const optsFn = this[HTTP_OPTIONS];\n  let opts = options;\n  const nonceKey = `${url.origin}${url.pathname}`;\n  if (DPoP && 'dpopProof' in this) {\n    opts.headers = opts.headers || {};\n    opts.headers.DPoP = await this.dpopProof({\n      htu: `${url.origin}${url.pathname}`,\n      htm: options.method,\n      nonce: nonces.get(nonceKey)\n    }, DPoP, accessToken);\n  }\n  let userOptions;\n  if (optsFn) {\n    userOptions = pick(optsFn.call(this, url, defaultsDeep({}, opts, DEFAULT_HTTP_OPTIONS)), ...allowed);\n  }\n  opts = defaultsDeep({}, userOptions, opts, DEFAULT_HTTP_OPTIONS);\n  if (mTLS && !opts.pfx && !(opts.key && opts.cert)) {\n    throw new TypeError('mutual-TLS certificate and key not set');\n  }\n  if (opts.searchParams) {\n    for (const [key, value] of Object.entries(opts.searchParams)) {\n      url.searchParams.delete(key);\n      url.searchParams.set(key, value);\n    }\n  }\n  let responseType;\n  let form;\n  let json;\n  let body;\n  ({\n    form,\n    responseType,\n    json,\n    body,\n    ...opts\n  } = opts);\n  for (const [key, value] of Object.entries(opts.headers || {})) {\n    if (value === undefined) {\n      delete opts.headers[key];\n    }\n  }\n  let response;\n  const req = (url.protocol === 'https:' ? https.request : http.request)(url.href, opts);\n  return (async () => {\n    if (json) {\n      send(req, JSON.stringify(json), 'application/json');\n    } else if (form) {\n      send(req, querystring.stringify(form), 'application/x-www-form-urlencoded');\n    } else if (body) {\n      send(req, body);\n    } else {\n      send(req);\n    }\n    [response] = await Promise.race([once(req, 'response'), once(req, 'timeout')]);\n\n    // timeout reached\n    if (!response) {\n      req.destroy();\n      throw new RPError(`outgoing request timed out after ${opts.timeout}ms`);\n    }\n    const parts = [];\n    for await (const part of response) {\n      parts.push(part);\n    }\n    if (parts.length) {\n      switch (responseType) {\n        case 'json':\n          {\n            Object.defineProperty(response, 'body', {\n              get() {\n                let value = Buffer.concat(parts);\n                try {\n                  value = JSON.parse(value);\n                } catch (err) {\n                  Object.defineProperty(err, 'response', {\n                    value: response\n                  });\n                  throw err;\n                } finally {\n                  Object.defineProperty(response, 'body', {\n                    value,\n                    configurable: true\n                  });\n                }\n                return value;\n              },\n              configurable: true\n            });\n            break;\n          }\n        case undefined:\n        case 'buffer':\n          {\n            Object.defineProperty(response, 'body', {\n              get() {\n                const value = Buffer.concat(parts);\n                Object.defineProperty(response, 'body', {\n                  value,\n                  configurable: true\n                });\n                return value;\n              },\n              configurable: true\n            });\n            break;\n          }\n        default:\n          throw new TypeError('unsupported responseType request option');\n      }\n    }\n    return response;\n  })().catch(err => {\n    if (response) Object.defineProperty(err, 'response', {\n      value: response\n    });\n    throw err;\n  }).finally(() => {\n    const dpopNonce = response && response.headers['dpop-nonce'];\n    if (dpopNonce && NQCHAR.test(dpopNonce)) {\n      nonces.set(nonceKey, dpopNonce);\n    }\n  });\n};\nmodule.exports.setDefaults = setDefaults.bind(undefined, allowed);","map":{"version":3,"names":["assert","require","querystring","http","https","once","URL","LRU","pkg","RPError","pick","deep","defaultsDeep","HTTP_OPTIONS","DEFAULT_HTTP_OPTIONS","NQCHAR","allowed","setDefaults","props","options","length","headers","name","version","homepage","timeout","send","req","body","contentType","removeHeader","setHeader","Buffer","byteLength","write","end","nonces","max","module","exports","request","accessToken","mTLS","DPoP","url","test","protocol","err","TypeError","optsFn","opts","nonceKey","origin","pathname","dpopProof","htu","htm","method","nonce","get","userOptions","call","pfx","key","cert","searchParams","value","Object","entries","delete","set","responseType","form","json","undefined","response","href","JSON","stringify","Promise","race","destroy","parts","part","push","defineProperty","concat","parse","configurable","catch","finally","dpopNonce","bind"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/openid-client/lib/helpers/request.js"],"sourcesContent":["const assert = require('assert');\nconst querystring = require('querystring');\nconst http = require('http');\nconst https = require('https');\nconst { once } = require('events');\nconst { URL } = require('url');\n\nconst LRU = require('lru-cache');\n\nconst pkg = require('../../package.json');\nconst { RPError } = require('../errors');\n\nconst pick = require('./pick');\nconst { deep: defaultsDeep } = require('./defaults');\nconst { HTTP_OPTIONS } = require('./consts');\n\nlet DEFAULT_HTTP_OPTIONS;\nconst NQCHAR = /^[\\x21\\x23-\\x5B\\x5D-\\x7E]+$/;\n\nconst allowed = [\n  'agent',\n  'ca',\n  'cert',\n  'crl',\n  'headers',\n  'key',\n  'lookup',\n  'passphrase',\n  'pfx',\n  'timeout',\n];\n\nconst setDefaults = (props, options) => {\n  DEFAULT_HTTP_OPTIONS = defaultsDeep(\n    {},\n    props.length ? pick(options, ...props) : options,\n    DEFAULT_HTTP_OPTIONS,\n  );\n};\n\nsetDefaults([], {\n  headers: { 'User-Agent': `${pkg.name}/${pkg.version} (${pkg.homepage})` },\n  timeout: 3500,\n});\n\nfunction send(req, body, contentType) {\n  if (contentType) {\n    req.removeHeader('content-type');\n    req.setHeader('content-type', contentType);\n  }\n  if (body) {\n    req.removeHeader('content-length');\n    req.setHeader('content-length', Buffer.byteLength(body));\n    req.write(body);\n  }\n  req.end();\n}\n\nconst nonces = new LRU({ max: 100 });\n\nmodule.exports = async function request(options, { accessToken, mTLS = false, DPoP } = {}) {\n  let url;\n  try {\n    url = new URL(options.url);\n    delete options.url;\n    assert(/^(https?:)$/.test(url.protocol));\n  } catch (err) {\n    throw new TypeError('only valid absolute URLs can be requested');\n  }\n  const optsFn = this[HTTP_OPTIONS];\n  let opts = options;\n\n  const nonceKey = `${url.origin}${url.pathname}`;\n  if (DPoP && 'dpopProof' in this) {\n    opts.headers = opts.headers || {};\n    opts.headers.DPoP = await this.dpopProof(\n      {\n        htu: `${url.origin}${url.pathname}`,\n        htm: options.method,\n        nonce: nonces.get(nonceKey),\n      },\n      DPoP,\n      accessToken,\n    );\n  }\n\n  let userOptions;\n  if (optsFn) {\n    userOptions = pick(\n      optsFn.call(this, url, defaultsDeep({}, opts, DEFAULT_HTTP_OPTIONS)),\n      ...allowed,\n    );\n  }\n  opts = defaultsDeep({}, userOptions, opts, DEFAULT_HTTP_OPTIONS);\n\n  if (mTLS && !opts.pfx && !(opts.key && opts.cert)) {\n    throw new TypeError('mutual-TLS certificate and key not set');\n  }\n\n  if (opts.searchParams) {\n    for (const [key, value] of Object.entries(opts.searchParams)) {\n      url.searchParams.delete(key);\n      url.searchParams.set(key, value);\n    }\n  }\n\n  let responseType;\n  let form;\n  let json;\n  let body;\n  ({ form, responseType, json, body, ...opts } = opts);\n\n  for (const [key, value] of Object.entries(opts.headers || {})) {\n    if (value === undefined) {\n      delete opts.headers[key];\n    }\n  }\n\n  let response;\n  const req = (url.protocol === 'https:' ? https.request : http.request)(url.href, opts);\n  return (async () => {\n    if (json) {\n      send(req, JSON.stringify(json), 'application/json');\n    } else if (form) {\n      send(req, querystring.stringify(form), 'application/x-www-form-urlencoded');\n    } else if (body) {\n      send(req, body);\n    } else {\n      send(req);\n    }\n\n    [response] = await Promise.race([once(req, 'response'), once(req, 'timeout')]);\n\n    // timeout reached\n    if (!response) {\n      req.destroy();\n      throw new RPError(`outgoing request timed out after ${opts.timeout}ms`);\n    }\n\n    const parts = [];\n\n    for await (const part of response) {\n      parts.push(part);\n    }\n\n    if (parts.length) {\n      switch (responseType) {\n        case 'json': {\n          Object.defineProperty(response, 'body', {\n            get() {\n              let value = Buffer.concat(parts);\n              try {\n                value = JSON.parse(value);\n              } catch (err) {\n                Object.defineProperty(err, 'response', { value: response });\n                throw err;\n              } finally {\n                Object.defineProperty(response, 'body', { value, configurable: true });\n              }\n              return value;\n            },\n            configurable: true,\n          });\n          break;\n        }\n        case undefined:\n        case 'buffer': {\n          Object.defineProperty(response, 'body', {\n            get() {\n              const value = Buffer.concat(parts);\n              Object.defineProperty(response, 'body', { value, configurable: true });\n              return value;\n            },\n            configurable: true,\n          });\n          break;\n        }\n        default:\n          throw new TypeError('unsupported responseType request option');\n      }\n    }\n\n    return response;\n  })()\n    .catch((err) => {\n      if (response) Object.defineProperty(err, 'response', { value: response });\n      throw err;\n    })\n    .finally(() => {\n      const dpopNonce = response && response.headers['dpop-nonce'];\n      if (dpopNonce && NQCHAR.test(dpopNonce)) {\n        nonces.set(nonceKey, dpopNonce);\n      }\n    });\n};\n\nmodule.exports.setDefaults = setDefaults.bind(undefined, allowed);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}