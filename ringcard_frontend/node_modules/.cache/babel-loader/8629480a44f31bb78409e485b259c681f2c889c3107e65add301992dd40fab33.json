{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Twitter, Inc.\n// SPDX-License-Identifier: Apache-2.0\nvar _regeneratorRuntime = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _objectSpread = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _objectWithoutProperties = require(\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nvar _excluded = [\"expires_in\"],\n  _excluded2 = [\"token\"];\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nvar _OAuth2User_options, _OAuth2User_code_verifier, _OAuth2User_code_challenge;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OAuth2User = void 0;\nvar crypto_1 = __importDefault(require(\"crypto\"));\nvar utils_1 = require(\"./utils\");\nvar request_1 = require(\"./request\");\nfunction sha256(buffer) {\n  return crypto_1.default.createHash(\"sha256\").update(buffer).digest();\n}\nfunction base64URLEncode(str) {\n  return str.toString(\"base64\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\nfunction processTokenResponse(token) {\n  var expires_in = token.expires_in,\n    rest = _objectWithoutProperties(token, _excluded);\n  return _objectSpread(_objectSpread({}, rest), !!expires_in && {\n    expires_at: Date.now() + expires_in * 1000\n  });\n}\n/**\n * Twitter OAuth2 Authentication Client\n */\nvar OAuth2User = /*#__PURE__*/function () {\n  function OAuth2User(options) {\n    _classCallCheck(this, OAuth2User);\n    _OAuth2User_options.set(this, void 0);\n    _OAuth2User_code_verifier.set(this, void 0);\n    _OAuth2User_code_challenge.set(this, void 0);\n    var token = options.token,\n      defaultOptions = _objectWithoutProperties(options, _excluded2);\n    __classPrivateFieldSet(this, _OAuth2User_options, defaultOptions, \"f\");\n    this.token = token;\n  }\n  /**\n   * Refresh the access token\n   */\n  _createClass(OAuth2User, [{\n    key: \"refreshAccessToken\",\n    value: function () {\n      var _refreshAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$token;\n        var refresh_token, _classPrivateFieldGe, client_id, client_secret, request_options, data, token;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                refresh_token = (_this$token = this.token) === null || _this$token === void 0 ? void 0 : _this$token.refresh_token;\n                _classPrivateFieldGe = __classPrivateFieldGet(this, _OAuth2User_options, \"f\"), client_id = _classPrivateFieldGe.client_id, client_secret = _classPrivateFieldGe.client_secret, request_options = _classPrivateFieldGe.request_options;\n                if (client_id) {\n                  _context.next = 4;\n                  break;\n                }\n                throw new Error(\"client_id is required\");\n              case 4:\n                if (refresh_token) {\n                  _context.next = 6;\n                  break;\n                }\n                throw new Error(\"refresh_token is required\");\n              case 6:\n                _context.next = 8;\n                return (0, request_1.rest)(_objectSpread(_objectSpread({}, request_options), {}, {\n                  endpoint: \"/2/oauth2/token\",\n                  params: {\n                    client_id: client_id,\n                    grant_type: \"refresh_token\",\n                    refresh_token: refresh_token\n                  },\n                  method: \"POST\",\n                  headers: _objectSpread(_objectSpread({}, request_options === null || request_options === void 0 ? void 0 : request_options.headers), {}, {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                  }, !!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret)\n                  })\n                }));\n              case 8:\n                data = _context.sent;\n                token = processTokenResponse(data);\n                this.token = token;\n                return _context.abrupt(\"return\", {\n                  token: token\n                });\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function refreshAccessToken() {\n        return _refreshAccessToken.apply(this, arguments);\n      }\n      return refreshAccessToken;\n    }()\n    /**\n     * Check if an access token is expired\n     */\n  }, {\n    key: \"isAccessTokenExpired\",\n    value: function isAccessTokenExpired() {\n      var _this$token2, _this$token3;\n      var refresh_token = (_this$token2 = this.token) === null || _this$token2 === void 0 ? void 0 : _this$token2.refresh_token;\n      var expires_at = (_this$token3 = this.token) === null || _this$token3 === void 0 ? void 0 : _this$token3.expires_at;\n      if (!expires_at) return true;\n      return !!refresh_token && expires_at <= Date.now() + 1000;\n    }\n    /**\n     * Request an access token\n     */\n  }, {\n    key: \"requestAccessToken\",\n    value: function () {\n      var _requestAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(code) {\n        var _classPrivateFieldGe2, client_id, client_secret, callback, request_options, code_verifier, params, data, token;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _classPrivateFieldGe2 = __classPrivateFieldGet(this, _OAuth2User_options, \"f\"), client_id = _classPrivateFieldGe2.client_id, client_secret = _classPrivateFieldGe2.client_secret, callback = _classPrivateFieldGe2.callback, request_options = _classPrivateFieldGe2.request_options;\n                code_verifier = __classPrivateFieldGet(this, _OAuth2User_code_verifier, \"f\");\n                if (client_id) {\n                  _context2.next = 4;\n                  break;\n                }\n                throw new Error(\"client_id is required\");\n              case 4:\n                if (callback) {\n                  _context2.next = 6;\n                  break;\n                }\n                throw new Error(\"callback is required\");\n              case 6:\n                params = {\n                  code: code,\n                  grant_type: \"authorization_code\",\n                  code_verifier: code_verifier,\n                  client_id: client_id,\n                  redirect_uri: callback\n                };\n                _context2.next = 9;\n                return (0, request_1.rest)(_objectSpread(_objectSpread({}, request_options), {}, {\n                  endpoint: \"/2/oauth2/token\",\n                  params: params,\n                  method: \"POST\",\n                  headers: _objectSpread(_objectSpread({}, request_options === null || request_options === void 0 ? void 0 : request_options.headers), {}, {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                  }, !!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret)\n                  })\n                }));\n              case 9:\n                data = _context2.sent;\n                token = processTokenResponse(data);\n                this.token = token;\n                return _context2.abrupt(\"return\", {\n                  token: token\n                });\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function requestAccessToken(_x) {\n        return _requestAccessToken.apply(this, arguments);\n      }\n      return requestAccessToken;\n    }()\n    /**\n     * Revoke an access token\n     */\n  }, {\n    key: \"revokeAccessToken\",\n    value: function () {\n      var _revokeAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this$token4, _this$token5;\n        var _classPrivateFieldGe3, client_id, client_secret, request_options, access_token, refresh_token, params;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _classPrivateFieldGe3 = __classPrivateFieldGet(this, _OAuth2User_options, \"f\"), client_id = _classPrivateFieldGe3.client_id, client_secret = _classPrivateFieldGe3.client_secret, request_options = _classPrivateFieldGe3.request_options;\n                access_token = (_this$token4 = this.token) === null || _this$token4 === void 0 ? void 0 : _this$token4.access_token;\n                refresh_token = (_this$token5 = this.token) === null || _this$token5 === void 0 ? void 0 : _this$token5.refresh_token;\n                if (client_id) {\n                  _context3.next = 5;\n                  break;\n                }\n                throw new Error(\"client_id is required\");\n              case 5:\n                if (!access_token) {\n                  _context3.next = 9;\n                  break;\n                }\n                params = {\n                  token_type_hint: \"access_token\",\n                  token: access_token,\n                  client_id: client_id\n                };\n                _context3.next = 14;\n                break;\n              case 9:\n                if (!refresh_token) {\n                  _context3.next = 13;\n                  break;\n                }\n                params = {\n                  token_type_hint: \"refresh_token\",\n                  token: refresh_token,\n                  client_id: client_id\n                };\n                _context3.next = 14;\n                break;\n              case 13:\n                throw new Error(\"access_token or refresh_token required\");\n              case 14:\n                return _context3.abrupt(\"return\", (0, request_1.rest)(_objectSpread(_objectSpread({}, request_options), {}, {\n                  endpoint: \"/2/oauth2/revoke\",\n                  params: params,\n                  method: \"POST\",\n                  headers: _objectSpread(_objectSpread({}, request_options === null || request_options === void 0 ? void 0 : request_options.headers), {}, {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\"\n                  }, !!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret)\n                  })\n                })));\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function revokeAccessToken() {\n        return _revokeAccessToken.apply(this, arguments);\n      }\n      return revokeAccessToken;\n    }()\n  }, {\n    key: \"generateAuthURL\",\n    value: function generateAuthURL(options) {\n      var _classPrivateFieldGe4 = __classPrivateFieldGet(this, _OAuth2User_options, \"f\"),\n        client_id = _classPrivateFieldGe4.client_id,\n        callback = _classPrivateFieldGe4.callback,\n        scopes = _classPrivateFieldGe4.scopes;\n      if (!callback) throw new Error(\"callback required\");\n      if (!scopes) throw new Error(\"scopes required\");\n      if (options.code_challenge_method === \"s256\") {\n        var code_verifier = base64URLEncode(crypto_1.default.randomBytes(32));\n        __classPrivateFieldSet(this, _OAuth2User_code_verifier, code_verifier, \"f\");\n        __classPrivateFieldSet(this, _OAuth2User_code_challenge, base64URLEncode(sha256(code_verifier)), \"f\");\n      } else {\n        __classPrivateFieldSet(this, _OAuth2User_code_challenge, options.code_challenge, \"f\");\n        __classPrivateFieldSet(this, _OAuth2User_code_verifier, options.code_challenge, \"f\");\n      }\n      var code_challenge = __classPrivateFieldGet(this, _OAuth2User_code_challenge, \"f\");\n      var url = new URL(\"https://twitter.com/i/oauth2/authorize\");\n      url.search = (0, utils_1.buildQueryString)(_objectSpread(_objectSpread({}, options), {}, {\n        client_id: client_id,\n        scope: scopes.join(\" \"),\n        response_type: \"code\",\n        redirect_uri: callback,\n        code_challenge_method: options.code_challenge_method || \"plain\",\n        code_challenge: code_challenge\n      }));\n      return url.toString();\n    }\n  }, {\n    key: \"getAuthHeader\",\n    value: function () {\n      var _getAuthHeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this$token6;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if ((_this$token6 = this.token) !== null && _this$token6 !== void 0 && _this$token6.access_token) {\n                  _context4.next = 2;\n                  break;\n                }\n                throw new Error(\"access_token is required\");\n              case 2:\n                if (!this.isAccessTokenExpired()) {\n                  _context4.next = 5;\n                  break;\n                }\n                _context4.next = 5;\n                return this.refreshAccessToken();\n              case 5:\n                return _context4.abrupt(\"return\", {\n                  Authorization: \"Bearer \".concat(this.token.access_token)\n                });\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function getAuthHeader() {\n        return _getAuthHeader.apply(this, arguments);\n      }\n      return getAuthHeader;\n    }()\n  }]);\n  return OAuth2User;\n}();\nexports.OAuth2User = OAuth2User;\n_OAuth2User_options = new WeakMap(), _OAuth2User_code_verifier = new WeakMap(), _OAuth2User_code_challenge = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","__importDefault","mod","__esModule","_OAuth2User_options","_OAuth2User_code_verifier","_OAuth2User_code_challenge","Object","defineProperty","exports","OAuth2User","crypto_1","require","utils_1","request_1","sha256","buffer","default","createHash","update","digest","base64URLEncode","str","toString","replace","processTokenResponse","token","expires_in","rest","expires_at","Date","now","options","defaultOptions","refresh_token","client_id","client_secret","request_options","Error","endpoint","params","grant_type","method","headers","Authorization","basicAuthHeader","data","code","callback","code_verifier","redirect_uri","access_token","token_type_hint","scopes","code_challenge_method","randomBytes","code_challenge","url","URL","search","buildQueryString","scope","join","response_type","isAccessTokenExpired","refreshAccessToken","WeakMap"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/twitter-api-sdk/dist/OAuth2User.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021 Twitter, Inc.\n// SPDX-License-Identifier: Apache-2.0\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _OAuth2User_options, _OAuth2User_code_verifier, _OAuth2User_code_challenge;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OAuth2User = void 0;\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst utils_1 = require(\"./utils\");\nconst request_1 = require(\"./request\");\nfunction sha256(buffer) {\n    return crypto_1.default.createHash(\"sha256\").update(buffer).digest();\n}\nfunction base64URLEncode(str) {\n    return str\n        .toString(\"base64\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\nfunction processTokenResponse(token) {\n    const { expires_in, ...rest } = token;\n    return {\n        ...rest,\n        ...(!!expires_in && {\n            expires_at: Date.now() + expires_in * 1000,\n        }),\n    };\n}\n/**\n * Twitter OAuth2 Authentication Client\n */\nclass OAuth2User {\n    constructor(options) {\n        _OAuth2User_options.set(this, void 0);\n        _OAuth2User_code_verifier.set(this, void 0);\n        _OAuth2User_code_challenge.set(this, void 0);\n        const { token, ...defaultOptions } = options;\n        __classPrivateFieldSet(this, _OAuth2User_options, defaultOptions, \"f\");\n        this.token = token;\n    }\n    /**\n     * Refresh the access token\n     */\n    async refreshAccessToken() {\n        const refresh_token = this.token?.refresh_token;\n        const { client_id, client_secret, request_options } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        if (!client_id) {\n            throw new Error(\"client_id is required\");\n        }\n        if (!refresh_token) {\n            throw new Error(\"refresh_token is required\");\n        }\n        const data = await (0, request_1.rest)({\n            ...request_options,\n            endpoint: `/2/oauth2/token`,\n            params: {\n                client_id,\n                grant_type: \"refresh_token\",\n                refresh_token,\n            },\n            method: \"POST\",\n            headers: {\n                ...request_options?.headers,\n                \"Content-type\": \"application/x-www-form-urlencoded\",\n                ...(!!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret),\n                }),\n            },\n        });\n        const token = processTokenResponse(data);\n        this.token = token;\n        return { token };\n    }\n    /**\n     * Check if an access token is expired\n     */\n    isAccessTokenExpired() {\n        const refresh_token = this.token?.refresh_token;\n        const expires_at = this.token?.expires_at;\n        if (!expires_at)\n            return true;\n        return !!refresh_token && expires_at <= Date.now() + 1000;\n    }\n    /**\n     * Request an access token\n     */\n    async requestAccessToken(code) {\n        const { client_id, client_secret, callback, request_options } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        const code_verifier = __classPrivateFieldGet(this, _OAuth2User_code_verifier, \"f\");\n        if (!client_id) {\n            throw new Error(\"client_id is required\");\n        }\n        if (!callback) {\n            throw new Error(\"callback is required\");\n        }\n        const params = {\n            code,\n            grant_type: \"authorization_code\",\n            code_verifier,\n            client_id,\n            redirect_uri: callback,\n        };\n        const data = await (0, request_1.rest)({\n            ...request_options,\n            endpoint: `/2/oauth2/token`,\n            params,\n            method: \"POST\",\n            headers: {\n                ...request_options?.headers,\n                \"Content-type\": \"application/x-www-form-urlencoded\",\n                ...(!!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret),\n                }),\n            },\n        });\n        const token = processTokenResponse(data);\n        this.token = token;\n        return { token };\n    }\n    /**\n     * Revoke an access token\n     */\n    async revokeAccessToken() {\n        const { client_id, client_secret, request_options } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        const access_token = this.token?.access_token;\n        const refresh_token = this.token?.refresh_token;\n        if (!client_id) {\n            throw new Error(\"client_id is required\");\n        }\n        let params;\n        if (!!access_token) {\n            params = {\n                token_type_hint: \"access_token\",\n                token: access_token,\n                client_id,\n            };\n        }\n        else if (!!refresh_token) {\n            params = {\n                token_type_hint: \"refresh_token\",\n                token: refresh_token,\n                client_id,\n            };\n        }\n        else {\n            throw new Error(\"access_token or refresh_token required\");\n        }\n        return (0, request_1.rest)({\n            ...request_options,\n            endpoint: `/2/oauth2/revoke`,\n            params,\n            method: \"POST\",\n            headers: {\n                ...request_options?.headers,\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                ...(!!client_secret && {\n                    Authorization: (0, utils_1.basicAuthHeader)(client_id, client_secret),\n                }),\n            },\n        });\n    }\n    generateAuthURL(options) {\n        const { client_id, callback, scopes } = __classPrivateFieldGet(this, _OAuth2User_options, \"f\");\n        if (!callback)\n            throw new Error(\"callback required\");\n        if (!scopes)\n            throw new Error(\"scopes required\");\n        if (options.code_challenge_method === \"s256\") {\n            const code_verifier = base64URLEncode(crypto_1.default.randomBytes(32));\n            __classPrivateFieldSet(this, _OAuth2User_code_verifier, code_verifier, \"f\");\n            __classPrivateFieldSet(this, _OAuth2User_code_challenge, base64URLEncode(sha256(code_verifier)), \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _OAuth2User_code_challenge, options.code_challenge, \"f\");\n            __classPrivateFieldSet(this, _OAuth2User_code_verifier, options.code_challenge, \"f\");\n        }\n        const code_challenge = __classPrivateFieldGet(this, _OAuth2User_code_challenge, \"f\");\n        const url = new URL(\"https://twitter.com/i/oauth2/authorize\");\n        url.search = (0, utils_1.buildQueryString)({\n            ...options,\n            client_id,\n            scope: scopes.join(\" \"),\n            response_type: \"code\",\n            redirect_uri: callback,\n            code_challenge_method: options.code_challenge_method || \"plain\",\n            code_challenge,\n        });\n        return url.toString();\n    }\n    async getAuthHeader() {\n        if (!this.token?.access_token)\n            throw new Error(\"access_token is required\");\n        if (this.isAccessTokenExpired())\n            await this.refreshAccessToken();\n        return {\n            Authorization: `Bearer ${this.token.access_token}`,\n        };\n    }\n}\nexports.OAuth2User = OAuth2User;\n_OAuth2User_options = new WeakMap(), _OAuth2User_code_verifier = new WeakMap(), _OAuth2User_code_challenge = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}