{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\components\\\\QuestionNoteListAnony.tsx\";\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction makeTapeUrl(tapeType) {\n  const tapeTypeStr = String(tapeType);\n  const result = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n  return result;\n}\nfunction QuestionNoteList(props) {\n  const QandAmap = props.map;\n  const tapePositionList = [\"width: 120px; height: 28px; transform: rotate(-30deg); margin: 13px auto -15px -10px;\", \"width: 110px; height: 28px; transform: rotate(-18deg); margin: 5px auto -30px -5px;\", \"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -5px;\", \"width: 130px; height: 28px; margin: 0 auto; margin-top: -5px; transform: rotate(6deg);\", \"width: 130px; height: 28px; transform: rotate(18deg); margin: 7px 0px -10px auto;\", \"width: 95px; height: 28px; transform: rotate(36deg); margin: 11px -10px -10px auto;\"];\n  const cntPosition = tapePositionList.length;\n  const tapeImages = document.getElementsByClassName(\"QuestionNote-maskingTape-img\");\n  var tapeImageList = Array.from(tapeImages);\n  tapeImageList.forEach(tapeImage => {\n    const chosenPosition = tapePositionList[Math.floor(Math.random() * cntPosition)];\n    tapeImage.setAttribute(\"style\", chosenPosition);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-notes-container\",\n      children: QandAmap.map((QA, idx) => /*#__PURE__*/_jsxDEV(QuestionNoteAnony, {\n        idx: idx,\n        question: QA[0],\n        answer: QA[1],\n        tapeUrl: makeTapeUrl(QA[0].tapeType)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c;\n$RefreshReg$(_c, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNoteAnony","React","makeTapeUrl","tapeType","tapeTypeStr","String","result","QuestionNoteList","props","QandAmap","map","tapePositionList","cntPosition","length","tapeImages","document","getElementsByClassName","tapeImageList","Array","from","forEach","tapeImage","chosenPosition","Math","floor","random","setAttribute","QA","idx"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { url } from \"inspector\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { IAnswer, IQuestion } from \"./types\";\r\n\r\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\r\nimport React from \"react\";\r\n\r\nexport interface Props {\r\n  map: [IQuestion, IAnswer][];\r\n}\r\n\r\nfunction makeTapeUrl(tapeType: Number) {\r\n\tconst tapeTypeStr = String(tapeType);\r\n\tconst result = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\r\n\treturn result;\r\n}\r\n\r\nfunction QuestionNoteList(props: Props) {\r\n\tconst QandAmap = props.map;\r\n\r\n\tconst tapePositionList = [\r\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: 13px auto -15px -10px;\",\r\n\t\t\"width: 110px; height: 28px; transform: rotate(-18deg); margin: 5px auto -30px -5px;\",\r\n\t\t\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -5px;\",\r\n\t\t\"width: 130px; height: 28px; margin: 0 auto; margin-top: -5px; transform: rotate(6deg);\",\r\n\t\t\"width: 130px; height: 28px; transform: rotate(18deg); margin: 7px 0px -10px auto;\",\r\n\t\t\"width: 95px; height: 28px; transform: rotate(36deg); margin: 11px -10px -10px auto;\",\r\n\t];\r\n\tconst cntPosition = tapePositionList.length;\r\n\r\n\tconst tapeImages = document.getElementsByClassName(\r\n\t\t\"QuestionNote-maskingTape-img\"\r\n\t);\r\n\r\n\tvar tapeImageList = Array.from(tapeImages);\r\n\r\n\ttapeImageList.forEach((tapeImage) => {\r\n\t\tconst chosenPosition =\r\n\t\t\ttapePositionList[Math.floor(Math.random() * cntPosition)];\r\n\t\ttapeImage.setAttribute(\"style\", chosenPosition);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"question-notes-container\">\r\n\t\t\t\t{QandAmap.map((QA, idx) => (\r\n\t\t\t\t\t<QuestionNoteAnony\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tidx={idx}\r\n\t\t\t\t\t\tquestion={QA[0]}\r\n\t\t\t\t\t\tanswer={QA[1]}\r\n\r\n\t\t\t\t\t\ttapeUrl={makeTapeUrl(QA[0].tapeType)}\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default QuestionNoteList;\r\n\r\n"],"mappings":";AAMA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAM1B,SAASC,WAAW,CAACC,QAAgB,EAAE;EACtC,MAAMC,WAAW,GAAGC,MAAM,CAACF,QAAQ,CAAC;EACpC,MAAMG,MAAM,GAAGD,MAAM,CAAC,qBAAqB,GAAGD,WAAW,GAAG,MAAM,CAAC;EACnE,OAAOE,MAAM;AACd;AAEA,SAASC,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;EAE1B,MAAMC,gBAAgB,GAAG,CACxB,uFAAuF,EACvF,qFAAqF,EACrF,iEAAiE,EACjE,wFAAwF,EACxF,mFAAmF,EACnF,qFAAqF,CACrF;EACD,MAAMC,WAAW,GAAGD,gBAAgB,CAACE,MAAM;EAE3C,MAAMC,UAAU,GAAGC,QAAQ,CAACC,sBAAsB,CACjD,8BAA8B,CAC9B;EAED,IAAIC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC;EAE1CG,aAAa,CAACG,OAAO,CAAEC,SAAS,IAAK;IACpC,MAAMC,cAAc,GACnBX,gBAAgB,CAACY,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGb,WAAW,CAAC,CAAC;IAC1DS,SAAS,CAACK,YAAY,CAAC,OAAO,EAAEJ,cAAc,CAAC;EAChD,CAAC,CAAC;EAEF,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,0BAA0B;MAAA,UACvCb,QAAQ,CAACC,GAAG,CAAC,CAACiB,EAAE,EAAEC,GAAG,kBACrB,QAAC,iBAAiB;QAEjB,GAAG,EAAEA,GAAI;QACT,QAAQ,EAAED,EAAE,CAAC,CAAC,CAAE;QAChB,MAAM,EAAEA,EAAE,CAAC,CAAC,CAAE;QAEd,OAAO,EAAEzB,WAAW,CAACyB,EAAE,CAAC,CAAC,CAAC,CAACxB,QAAQ;MAAE,GALhCyB,GAAG;QAAA;QAAA;QAAA;MAAA,QAQT;IAAC;MAAA;MAAA;MAAA;IAAA;EACG,iBACJ;AAEL;AAAC,KA1CQrB,gBAAgB;AA4CzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}