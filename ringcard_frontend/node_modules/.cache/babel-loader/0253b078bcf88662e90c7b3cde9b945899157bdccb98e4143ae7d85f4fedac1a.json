{"ast":null,"code":"import _objectSpread from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import\"../../styles/layout/layout.css\";import\"../../styles/layout/header.css\";import\"../../styles/user/userBox.css\";import\"../../styles/user/userIcon.css\";import\"../../styles/user/userHeader.css\";import\"../../styles/layout/reactToast.css\";import\"../../styles/login.css\";import HeaderRingca from\"../../components/HeaderRingca\";import{useForm}from\"react-hook-form\";// import Toastify from \"../../components/Toast\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){// const client = new Client(\"AAAAAAAAAAAAAAAAAAAAAOWsiwEAAAAADbR%2FLCPhXEE5vHgf%2BCli0CgKOjk%3DMjxq0SR9yVxDzuVCiN5sjmeiG26QYTSrIu6BM2sQozQY3ViVtd\");\n// function BtnToPageUp(){\n// \tfunction handleClick(e: any){\n// \t\tasync function main() {\n// \t\t\tconst tweet = await client.tweets.findTweetById(\"20\");\n// \t\t\tif(tweet.data){\n// \t\t\tconsole.log(tweet.data.text);\n// \t\t\t}\n// \t\t}\n// \t\tmain();\n// \t}\n// \treturn (\n// \t\t<button className=\"page-btn\" onClick={handleClick}>\n// \t\t\t<img alt=\"\" src=\"/buttons/move-next-page-btn.svg\" />\n// \t\t</button>\n// \t);\n// }\n// var Twitter = require('twitter');\n// var client = new Twitter({\n//   consumer_key: 'S0FVySANFNnlISMw5D1vSE8P0',\n//   consumer_secret: 'KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X',\n//   access_token_key: '1516353113430851586-BikPyEoaehv4mDqSnCLc5mMQGuigeR',\n//   access_token_secret: 'zReOE8IWZ5wbGnPC4D8AClbBqc1hXhDQZcbBf2OOar2vw'\n// });\n// function tweetPost(content: string) {\n//   client.post('statuses/update', {status: content}, function(error: any, tweet: any, response: any) {\n//     if (!error) {\n//       console.log(\"tweet success: \" + content);\n//     } else {\n//       console.log(error);\n//     }\n//   });\n// }\n// dotenv.config();\n// const app = express();\n// const authClient = new auth.OAuth2User({\n//   client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\n//   client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\n//   callback: \"https://127.0.0.1:3000/callback\",\n//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\n// });\n// // const authClient = new auth.OAuth2User({\n// //   client_id: process.env.CLIENT_ID as string,\n// //   client_secret: process.env.CLIENT_SECRET as string,\n// //   callback: \"https://127.0.0.1:3000/callback\",\n// //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\n// // });\n// const client = new Client(authClient);\n// const STATE = \"my-state\";\n// app.get(\"/callback\", async function (req, res) {\n//   try {\n//     const { code, state } = req.query;\n//     if (state !== STATE) return res.status(500).send(\"State isn't matching\");\n//     await authClient.requestAccessToken(code as string);\n//     res.redirect(\"/tweets\");\n//   } catch (error) {\n//     console.log(error);\n//   }\n// });\n// app.get(\"/login\", async function (req, res) {\n//   const authUrl = authClient.generateAuthURL({\n//     state: STATE,\n//     code_challenge_method: \"plain\",\n//     code_challenge: \"test\",\n//   });\n//   res.redirect(authUrl);\n// });\n// app.get(\"/tweets\", async function (req, res) {\n//   try {\n//     const tweets = await client.tweets.findTweetById(\"20\");\n//     res.send(tweets);\n//   } catch (error) {\n//     console.log(\"tweets error\", error);\n//   }\n// });\n// app.get(\"/revoke\", async function (req, res) {\n//   try {\n//     const response = await authClient.revokeAccessToken();\n//     res.send(response);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// });\n// app.listen(3000, () => {\n//   console.log(`Go here to login: http://127.0.0.1:3000/login`);\n// });\n// \t// toastify 알람 실행 함수 만들기\n//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", {\n// \t\tautoClose: 700,\n// \t\tposition:\"top-center\",\n// \t\tpauseOnFocusLoss: true,\n// \t\thideProgressBar: true,\n// \t\tdraggable: true,\n// \t\tpauseOnHover: true,\n// \t\ttheme: \"dark\",\n// \t\tcloseButton: false,\n// \t\ttransition: Zoom,\n// \t\t// onOpen: () => window.alert('Called when I open'),\n// \t\t// onClose: () => window.alert('Called when I close')\n// })\nuseEffect(function(){axios.all([axios.get(\"/loginForm\"),axios.get(\"/\"),axios.get(\"\")]).then(axios.spread(function(res1,res2,res3){console.log(\"front loginForm\");// window.location.href = \"/loginForm\";\n})).catch(function(err){console.log(err);});},[]);// twitterOAuth2({\n// client_id: 'YOUR-CLIENT-ID',\n// client_secret: 'YOUR-CLIENT-SECRET',\n// redirect_uri: 'YOUR-REDIRECT-URI',\n// scope: 'tweet.read users.read offline.access'\n// })\t\nvar _useState=useState({bindingResultHasErrors:false,overlappedUsername:false}),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];// submitted==true여야 새로고침 되도록.\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitted=_useState4[0],setSubmitted=_useState4[1];var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return new Promise(function(r){return setTimeout(r,100);});case 2:// alert(JSON.stringify(data));\nconsole.log(data);_context.next=5;return axios.post(\"/login\",data,{headers:{\"Content-Type\":\"multipart/form-data\"}}).then(function(res){console.log(\"postHere\");console.log(data);setResponse(res.data);console.log(res.data);setSubmitted(true);window.location.replace(\"/home/unanswered\");}).catch(function(error){console.log(error.config);});case 5:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();function RedirectAndInputErrors(){if(response.bindingResultHasErrors&&response.overlappedUsername){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"overlappedUsername\"})]});}else if(response.bindingResultHasErrors){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"});}else if(response.overlappedUsername){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"overlappedUsername\"});}else if(submitted){// 위 조건 만족할 때만 loginForm으로 새로고침\nwindow.location.href=\"/loginForm\";return null;}return null;}var authHandler=function authHandler(err,data){console.log(err,data);};var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,_useForm$formState=_useForm.formState,isSubmitting=_useForm$formState.isSubmitting,isDirty=_useForm$formState.isDirty,errors=_useForm$formState.errors;// PW toggle start.\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showPw=_useState6[0],setShowPw=_useState6[1];var toggleShowPw=function toggleShowPw(){setShowPw(!showPw);};function handlePwClick(e){toggleShowPw();}function ShowPw(props){return/*#__PURE__*/_jsx(\"button\",{value:\"\\uBCC0\\uACBD\",className:\"user-show-pw\",onClick:handlePwClick});}function HidePw(props){return/*#__PURE__*/_jsx(\"button\",{value:\"\\uBCC0\\uACBD\",className:\"user-hide-pw\",onClick:handlePwClick});}// PW toggle fin.\nfunction BtnToJoin(){function handleClick(e){window.location.href=\"/joinForm\";}return/*#__PURE__*/_jsx(\"div\",{className:\"login-join\",onClick:handleClick,children:/*#__PURE__*/_jsx(\"div\",{className:\"login-join-text\",children:\"\\uC544\\uC9C1 \\uB9C1\\uCE74\\uC758 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"})});}var responseErrorTwitter=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(response){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log(response);case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function responseErrorTwitter(_x2){return _ref2.apply(this,arguments);};}();var responseSuccessTwitter=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(response){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0://do something\nconsole.log(response.resources);case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function responseSuccessTwitter(_x3){return _ref3.apply(this,arguments);};}();var onResponse=function onResponse(resp){console.log(resp);};return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit(onSubmit),children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(HeaderRingca,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div-light user-icon-user-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-icon-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"user-inner-transparent\"},register(\"username\",{required:\"답변이 입력되지 않았습니다.\"})))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div user-icon-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-icon-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({type:showPw?\"text\":\"password\",className:\"user-inner-transparent\"// placeholder=\"비밀번호를 입력해주세요\"\n},register(\"password\",{required:\"답변이 입력되지 않았습니다.\"}))),showPw?/*#__PURE__*/_jsx(ShowPw,{onClick:toggleShowPw}):/*#__PURE__*/_jsx(HidePw,{onClick:toggleShowPw})]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-text user-text-right\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-box-in\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"user-btn\",children:/*#__PURE__*/_jsx(\"div\",{className:\"user-btn-text\",children:\"\\uB85C\\uADF8\\uC778\"})})}),/*#__PURE__*/_jsx(\"a\",{href:\"/oauth2/authorization/twitter\",children:\"\\uD2B8\\uC704\\uD130 \\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"div\",{className:\"login-join-box\",children:/*#__PURE__*/_jsx(BtnToJoin,{})})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","axios","HeaderRingca","useForm","Login","all","get","then","spread","res1","res2","res3","console","log","catch","err","bindingResultHasErrors","overlappedUsername","response","setResponse","submitted","setSubmitted","onSubmit","data","Promise","r","setTimeout","post","headers","res","window","location","replace","error","config","RedirectAndInputErrors","href","authHandler","register","handleSubmit","formState","isSubmitting","isDirty","errors","showPw","setShowPw","toggleShowPw","handlePwClick","e","ShowPw","props","HidePw","BtnToJoin","handleClick","responseErrorTwitter","responseSuccessTwitter","resources","onResponse","resp","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/layout/reactToast.css\";\r\nimport \"../../styles/login.css\";\r\nimport HeaderNoProfile from \"../../components/HeaderNoProfile\";\r\nimport HeaderRingca from \"../../components/HeaderRingca\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import Toastify from \"../../components/Toast\";\r\nimport TwitterLogin from \"react-twitter-login\";\r\nimport ReactTwitterLogin from \"react-twitter-login\";\r\n// import ReactGoogleLogin from \"react-google-login\";\r\nimport { twitterOAuth2 } from 'twitter-oauth2';\r\nimport { Client } from \"twitter-api-sdk\";\r\n\r\nconst Login = () => {\r\n\r\n\t// const client = new Client(\"AAAAAAAAAAAAAAAAAAAAAOWsiwEAAAAADbR%2FLCPhXEE5vHgf%2BCli0CgKOjk%3DMjxq0SR9yVxDzuVCiN5sjmeiG26QYTSrIu6BM2sQozQY3ViVtd\");\r\n\r\n\t// function BtnToPageUp(){\r\n\t// \tfunction handleClick(e: any){\r\n\t\t\t\r\n\t// \t\tasync function main() {\r\n\t// \t\t\tconst tweet = await client.tweets.findTweetById(\"20\");\r\n\t// \t\t\tif(tweet.data){\r\n\t// \t\t\tconsole.log(tweet.data.text);\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tmain();\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<button className=\"page-btn\" onClick={handleClick}>\r\n\t// \t\t\t<img alt=\"\" src=\"/buttons/move-next-page-btn.svg\" />\r\n\t// \t\t</button>\r\n\t// \t);\r\n\t// }\r\n\r\n\t\r\n\t\r\n\t// var Twitter = require('twitter');\r\n\r\n\t// var client = new Twitter({\r\n\t//   consumer_key: 'S0FVySANFNnlISMw5D1vSE8P0',\r\n\t//   consumer_secret: 'KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X',\r\n\t//   access_token_key: '1516353113430851586-BikPyEoaehv4mDqSnCLc5mMQGuigeR',\r\n\t//   access_token_secret: 'zReOE8IWZ5wbGnPC4D8AClbBqc1hXhDQZcbBf2OOar2vw'\r\n\t// });\r\n\r\n\t// function tweetPost(content: string) {\r\n\t//   client.post('statuses/update', {status: content}, function(error: any, tweet: any, response: any) {\r\n\t//     if (!error) {\r\n\t//       console.log(\"tweet success: \" + content);\r\n\t//     } else {\r\n\t//       console.log(error);\r\n\t//     }\r\n\t//   });\r\n\t// }\r\n\t// dotenv.config();\r\n\r\n\t// const app = express();\r\n\r\n\t// const authClient = new auth.OAuth2User({\r\n\t//   client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\r\n\t//   client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\r\n\t//   callback: \"https://127.0.0.1:3000/callback\",\r\n\t//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n\t// });\r\n\r\n\t// // const authClient = new auth.OAuth2User({\r\n\t// //   client_id: process.env.CLIENT_ID as string,\r\n\t// //   client_secret: process.env.CLIENT_SECRET as string,\r\n\t// //   callback: \"https://127.0.0.1:3000/callback\",\r\n\t// //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n\t// // });\r\n\r\n\t// const client = new Client(authClient);\r\n\r\n\t// const STATE = \"my-state\";\r\n\r\n\t// app.get(\"/callback\", async function (req, res) {\r\n\t//   try {\r\n\t//     const { code, state } = req.query;\r\n\t//     if (state !== STATE) return res.status(500).send(\"State isn't matching\");\r\n\t//     await authClient.requestAccessToken(code as string);\r\n\t//     res.redirect(\"/tweets\");\r\n\t//   } catch (error) {\r\n\t//     console.log(error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.get(\"/login\", async function (req, res) {\r\n\t//   const authUrl = authClient.generateAuthURL({\r\n\t//     state: STATE,\r\n\t//     code_challenge_method: \"plain\",\r\n\t//     code_challenge: \"test\",\r\n\t//   });\r\n\t//   res.redirect(authUrl);\r\n\t// });\r\n\r\n\t// app.get(\"/tweets\", async function (req, res) {\r\n\t//   try {\r\n\t//     const tweets = await client.tweets.findTweetById(\"20\");\r\n\t//     res.send(tweets);\r\n\t//   } catch (error) {\r\n\t//     console.log(\"tweets error\", error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.get(\"/revoke\", async function (req, res) {\r\n\t//   try {\r\n\t//     const response = await authClient.revokeAccessToken();\r\n\t//     res.send(response);\r\n\t//   } catch (error) {\r\n\t//     console.log(error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.listen(3000, () => {\r\n\t//   console.log(`Go here to login: http://127.0.0.1:3000/login`);\r\n\t// });\r\n\r\n\t// \t// toastify 알람 실행 함수 만들기\r\n\t//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", {\r\n\t// \t\tautoClose: 700,\r\n\t// \t\tposition:\"top-center\",\r\n\t// \t\tpauseOnFocusLoss: true,\r\n\t// \t\thideProgressBar: true,\r\n\t// \t\tdraggable: true,\r\n\t// \t\tpauseOnHover: true,\r\n\t// \t\ttheme: \"dark\",\r\n\t// \t\tcloseButton: false,\r\n\t// \t\ttransition: Zoom,\r\n\t// \t\t// onOpen: () => window.alert('Called when I open'),\r\n\t// \t\t// onClose: () => window.alert('Called when I close')\r\n\t// })\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.all([axios.get(\"/loginForm\"), axios.get(\"/\"), axios.get(\"\")])\r\n\t\t\t.then(\r\n\t\t\t\taxios.spread((res1, res2, res3) => {\r\n\t\t\t\t\tconsole.log(\"front loginForm\");\r\n\t\t\t\t\t// window.location.href = \"/loginForm\";\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\t// twitterOAuth2({\r\n  // client_id: 'YOUR-CLIENT-ID',\r\n  // client_secret: 'YOUR-CLIENT-SECRET',\r\n  // redirect_uri: 'YOUR-REDIRECT-URI',\r\n  // scope: 'tweet.read users.read offline.access'\r\n\t// })\t\r\n\r\n\ttype ResponseList = {\r\n\t\tbindingResultHasErrors: boolean;\r\n\t\toverlappedUsername: boolean;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tbindingResultHasErrors: false,\r\n\t\toverlappedUsername: false,\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/login\", data, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t\twindow.location.replace(\"/home/unanswered\");\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors() {\r\n\t\tif (response.bindingResultHasErrors && response.overlappedUsername) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t\t\t\t<div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else if (response.bindingResultHasErrors) {\r\n\t\t\treturn <div className=\"user-text-error\">bindingResultHasErrors</div>;\r\n\t\t} else if (response.overlappedUsername) {\r\n\t\t\treturn <div className=\"user-text-error\">overlappedUsername</div>;\r\n\t\t} else if (submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst authHandler = (err:any, data:any) => {\r\n    console.log(err, data);\r\n  };\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw = () => {\r\n\t\tsetShowPw(!showPw);\r\n\t};\r\n\r\n\tfunction handlePwClick(e: any) {\r\n\t\ttoggleShowPw();\r\n\t}\r\n\r\n\tfunction ShowPw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-show-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-hide-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\t// PW toggle fin.\r\n\r\n\tfunction BtnToJoin() {\r\n\t\tfunction handleClick(e: any) {\r\n\t\t\twindow.location.href = \"/joinForm\";\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"login-join\" onClick={handleClick}>\r\n\t\t\t\t<div className=\"login-join-text\">아직 링카의 회원이 아니신가요?</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tconst responseErrorTwitter = async (response:any) => {\r\n        console.log(response);\r\n    };\r\n    const responseSuccessTwitter = async (response:any) => {\r\n        //do something\r\n        console.log(response.resources);\r\n    };\r\n\r\n\tconst onResponse = (resp:any) => {\r\n    console.log(resp);\r\n  };\r\n\t\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderRingca />\r\n\t\t\t\t{/* <ToastContainer/> */}\r\n\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-user-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t{...register(\"username\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t// placeholder=\"비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"user-text user-text-right\">\r\n\t\t\t\t\t\t\t비밀번호를 잊으셨나요?\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">비밀번호 변경</button>\r\n\t\t\t\t</form> */}\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"user-btn\">\r\n\t\t\t\t\t\t\t<div className=\"user-btn-text\">로그인</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <TwitterLogin\r\n          authCallback={authHandler}\r\n          consumerKey={\"S0FVySANFNnlISMw5D1vSE8P0\"}\r\n          consumerSecret={\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\"}\r\n          callbackUrl={\"http://localhost:3000/login/oauth2/code/twitter\"}\r\n          buttonTheme={\"dark\"}\r\n        \t/> */}\r\n\r\n\t\t\t\t\t{/* <TwitterLogin onFailure={responseErrorTwitter}\r\n                      onSuccess={responseSuccessTwitter}\r\n                      credentials=\"include\"\r\n                      customHeaders={\r\n                          {\r\n                              \"X-Requested-With\": \"XMLHttpRequest\",\r\n                          }\r\n                      }\r\n                      authenticationUrl=\"https://example.com/auth/twitter\"\r\n                      requestUrl=\"https://example.com/auth/twitter/url\">\r\n            Login with Twitter\r\n        </TwitterLogin> */}\r\n\r\n\t\t\t\t{/* <ReactTwitterLogin\r\n\t\t\t\t\tauthCallback={authHandler}\r\n\t\t\t\t\tconsumerKey=\"S0FVySANFNnlISMw5D1vSE8P0\" // We created this, remember?\r\n\t\t\t\t\tconsumerSecret=\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" // We created this, remember?\r\n\t\t\t\t\tcallbackUrl=\"http://localhost:3000/login/oauth2/code/twitter\" // You set this up in the twitter app settings, remember?\r\n\t\t\t\t/> */}\r\n\r\n\t\t\t\t{/* <ReactGoogleLogin\r\n\t\t\t\t\tclientId=\"229666542925-10vg43mj7b66bp06vkakne3spsr309pp.apps.googleusercontent.com\" // We created this earlier, remember?\r\n\t\t\t\t\tbuttonText=\"Login with Google\"\r\n\t\t\t\t\tonSuccess={onResponse}\r\n\t\t\t\t\tonFailure={onResponse}\r\n\t\t\t\t/> */}\r\n\t\t\t\t{/* <BtnToPageUp/> */}\r\n\r\n\t\t\t\t\t<a href=\"/oauth2/authorization/twitter\">트위터 로그인</a>\r\n\r\n\t\t\t\t\t<div className=\"login-join-box\">\r\n\t\t\t\t\t\t<BtnToJoin />\r\n\t\t\t\t\t\t{/* <button onClick={notify}/> */}\r\n\t\t\t\t\t\t{/* <Toastify text=\"hello\"/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}