{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\login\\\\Join.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport \"../../styles/layout/layout.css\";\nimport \"../../styles/layout/header.css\";\nimport \"../../styles/user/userBox.css\";\nimport \"../../styles/user/userIcon.css\";\nimport \"../../styles/user/userHeader.css\";\nimport \"../../styles/join.css\";\nimport HeaderRingcaShort from \"../../components/HeaderRingcaShort\";\nimport { TwitterApi } from 'twitter-api-v2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Join = () => {\n  _s();\n  // // OAuth2 (app-only or user context)\n  // // Create a client with an already known bearer token\n  // const appOnlyClient = new TwitterApi('bearerToken');\n  // // OR - you can also create a app-only client from your consumer keys -\n  // const appOnlyClientFromConsumer = await userClient.appLogin();\n\n  const CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n  const CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n  const CALLBACK_URL = process.env.REACT_APP_CALLBACK_URL;\n\n  // if로 undefined 처리)\n  if (CLIENT_ID && CLIENT_SECRET && CALLBACK_URL) {\n    const client = new TwitterApi({\n      clientId: CLIENT_ID,\n      clientSecret: CLIENT_SECRET\n    });\n\n    // Don't forget to specify 'offline.access' in scope list if you want to refresh your token later\n    const {\n      url,\n      codeVerifier,\n      state\n    } = client.generateOAuth2AuthLink(CALLBACK_URL, {\n      scope: ['tweet.read', 'users.read', 'offline.access']\n    });\n\n    // Redirect your user to {url}, store {state} and {codeVerifier} into a DB/Redis/memory after user redirection\n\n    // client.generateAuthLink();\n    console.log(client.generateAuthLink());\n  }\n  const [response, setResponse] = useState({\n    bindingResultHasErrors: false,\n    overlappedUsername: false\n  });\n  // submitted==true여야 새로고침 되도록.\n  const [submitted, setSubmitted] = useState(false);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    await axios.post(\"/joinForm\", data).then(res => {\n      console.log(\"postHere\");\n      console.log(data);\n      setResponse(res.data);\n      console.log(res.data);\n      setSubmitted(true);\n    }).catch(function (error) {\n      console.log(error.config);\n    });\n  };\n  function RedirectAndInputErrors() {\n    if (response.bindingResultHasErrors && response.overlappedUsername) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-text-error\",\n          children: \"bindingResultHasErrors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-text-error\",\n          children: \"overlappedUsername\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true);\n    } else if (response.bindingResultHasErrors) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-text-error\",\n        children: \"bindingResultHasErrors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this);\n    } else if (response.overlappedUsername) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-text-error\",\n        children: \"overlappedUsername\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this);\n    } else if (submitted) {\n      // 위 조건 만족할 때만 loginForm으로 새로고침\n      window.location.href = \"/loginForm\";\n      return null;\n    }\n    return null;\n  }\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isDirty,\n      errors\n    }\n  } = useForm();\n\n  // PW toggle start.\n  const [showPw, setShowPw] = useState(false);\n  const toggleShowPw = () => {\n    setShowPw(!showPw);\n  };\n  function handlePwClick(e) {\n    toggleShowPw();\n  }\n  function ShowPw(props) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"\\uBCC0\\uACBD\",\n      className: \"user-show-pw\",\n      onClick: handlePwClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this);\n  }\n  function HidePw(props) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"\\uBCC0\\uACBD\",\n      className: \"user-hide-pw\",\n      onClick: handlePwClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this);\n  }\n  // PW toggle fin.\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderRingcaShort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-text\",\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-div-light user-icon-user-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-icon-bar\",\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"user-inner-transparent\",\n              ...register(\"userRingcardName\", {\n                required: \"답변이 입력되지 않았습니다.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-text\",\n            children: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-div-light user-icon-id-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-icon-bar\",\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"user-inner-transparent\",\n              ...register(\"username\", {\n                required: \"답변이 입력되지 않았습니다.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-text\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-div user-icon-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-icon-bar\",\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPw ? \"text\" : \"password\",\n              className: \"user-inner-transparent\"\n              // placeholder=\"비밀번호를 입력해주세요\"\n              ,\n              ...register(\"password\", {\n                required: \"답변이 입력되지 않았습니다.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 7\n            }, this), showPw ? /*#__PURE__*/_jsxDEV(ShowPw, {\n              onClick: toggleShowPw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 7\n            }, this) : /*#__PURE__*/_jsxDEV(HidePw, {\n              onClick: toggleShowPw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-box-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-text\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-box-div-light user-icon-email-light\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-icon-bar\",\n              children: \"|\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"user-inner-transparent\",\n              type: \"email\",\n              ...register(\"userEmail\", {\n                required: \"답변이 입력되지 않았습니다.\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-box-in\",\n        children: [/*#__PURE__*/_jsxDEV(RedirectAndInputErrors, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"user-btn join-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-btn-text\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 2\n  }, this);\n};\n_s(Join, \"wclAERCP/4G+I339bsQPnsNoQLg=\", false, function () {\n  return [useForm];\n});\n_c = Join;\nexport default Join;\nvar _c;\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"names":["React","useState","useForm","axios","HeaderRingcaShort","TwitterApi","Join","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","CALLBACK_URL","REACT_APP_CALLBACK_URL","client","clientId","clientSecret","url","codeVerifier","state","generateOAuth2AuthLink","scope","console","log","generateAuthLink","response","setResponse","bindingResultHasErrors","overlappedUsername","submitted","setSubmitted","onSubmit","data","Promise","r","setTimeout","post","then","res","catch","error","config","RedirectAndInputErrors","window","location","href","register","handleSubmit","formState","isSubmitting","isDirty","errors","showPw","setShowPw","toggleShowPw","handlePwClick","e","ShowPw","props","HidePw","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Join.tsx"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/join.css\";\r\nimport HeaderRingcaShort from \"../../components/HeaderRingcaShort\";\r\nimport userEvent from \"@testing-library/user-event\";\r\nimport { TwitterApi } from 'twitter-api-v2';\r\n\r\nconst Join = () => {\r\n\r\n\t// // OAuth2 (app-only or user context)\r\n\t// // Create a client with an already known bearer token\r\n\t// const appOnlyClient = new TwitterApi('bearerToken');\r\n\t// // OR - you can also create a app-only client from your consumer keys -\r\n\t// const appOnlyClientFromConsumer = await userClient.appLogin();\r\n\r\n\tconst CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\r\n\r\n\t// if로 undefined 처리)\r\n\tif (CLIENT_ID && CLIENT_SECRET && CALLBACK_URL){\r\n\t\tconst client = new TwitterApi({ clientId: CLIENT_ID, clientSecret: CLIENT_SECRET });\r\n\r\n\t\t// Don't forget to specify 'offline.access' in scope list if you want to refresh your token later\r\n\t\tconst { url, codeVerifier, state } = client.generateOAuth2AuthLink(CALLBACK_URL, { scope: ['tweet.read', 'users.read', 'offline.access'] });\r\n\r\n\t\t// Redirect your user to {url}, store {state} and {codeVerifier} into a DB/Redis/memory after user redirection\r\n\r\n\t\t// client.generateAuthLink();\r\n\t\tconsole.log(client.generateAuthLink());\r\n\t}\r\n\t\t\r\n\r\n\t\r\n\r\n\r\n\r\n\ttype ResponseList = {\r\n\t\tbindingResultHasErrors: boolean;\r\n\t\toverlappedUsername: boolean;\r\n\t}\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tbindingResultHasErrors: false,\r\n\t\toverlappedUsername: false\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\t\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/joinForm\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors(){\r\n\t\tif(response.bindingResultHasErrors && response.overlappedUsername){\r\n\t\t\treturn (<>\r\n\t\t\t<div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t\t<div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if(response.bindingResultHasErrors){\r\n\t\t\treturn <div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t}\r\n\t\telse if(response.overlappedUsername){\r\n\t\t\treturn <div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t}\r\n\t\telse if(submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\"\r\n\t\t\treturn (null);\r\n\t\t}\r\n\t\treturn (null);\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw =()=>{\r\n\tsetShowPw(!showPw);\r\n\t}\r\n\r\n\tfunction handlePwClick(e: any){\r\n    toggleShowPw()\r\n  }\r\n\r\n\tfunction ShowPw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-show-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-hide-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\t// PW toggle fin.\r\n\t\r\n\treturn (\r\n\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t<div className=\"container\">\r\n\t\t\t<HeaderRingcaShort/>\r\n\t\t\t<div className=\"user-box\">\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">이름</div>\r\n\t\t\t\t\t<div className=\"user-box-div-light user-icon-user-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\t\t\r\n\t\t\t\t\t\t<input className=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t{...register(\"userRingcardName\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t<div className=\"user-box-div-light user-icon-id-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t<input className=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t{...register(\"username\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t// placeholder=\"비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">이메일</div>\r\n\t\t\t\t\t<div className=\"user-box-div-light user-icon-email-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t<input className=\"user-inner-transparent\" type=\"email\"\r\n\t\t\t\t\t\t\t{...register(\"userEmail\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t<RedirectAndInputErrors/>\r\n\r\n\t\t\t\t{/* {\r\n\t\t\t\t\tbindingResultHasErrors\r\n\t\t\t\t\t? <div className=\"user-text\">bindingResultHasErrors</div>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\toverlappedUsername\r\n\t\t\t\t\t? <div className=\"user-text\">overlappedUsername</div>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t */}\r\n\t\t\t\t<button type=\"submit\" className=\"user-btn join-btn\">\r\n\t\t\t\t\t<div className=\"user-btn-text\">회원가입</div>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <div className=\"join-delete-box\">\r\n\t\t\t\t<div className=\"join-delete\">\r\n\t\t\t\t\t<a className=\"join-delete-text\" href=\"/\">링카 계정을 완전히 지우고 싶어요</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t</form>\r\n\t);\r\n};\r\n\r\nexport default Join;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}