{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33copy\\\\ringcard\\\\ringcard_frontend\\\\src\\\\components\\\\AnswerNote\\\\AnswerFormQuestionNote.tsx\",\n  _s = $RefreshSig$();\nimport AnswerForm from \"./AnswerForm\";\nimport \"../../styles/question.css\";\nimport \"../../styles/answerQuestionNote.css\";\nimport NowDate from \"../utils/NowDate\";\nimport HyperlinkBox from \"../atoms/HyperlinkBox\";\nimport { useRef } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnswerFormQuestionNote(props) {\n  _s();\n  const question = props.question;\n  const tapePositionList = [\"width: 130px; height: 28px; margin: 0 auto; margin-top: -8px;\", \"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -2.5px; transform: rotate(6deg);\", \"width: 120px; height: 28px; transform: rotate(-30deg); margin: 7px auto -15px -13px;\", \"width: 130px; height: 28px; transform: rotate(-18deg); margin: 3px auto -30px -8px;\", \"width: 130px; height: 28px; transform: rotate(20deg); margin: 6px -9px -10px auto;\", \"width: 100px; height: 28px; transform: rotate(36deg); margin: 8px -11px -10px auto;\"];\n  const chosenPosition = tapePositionList[question.tapePosition - 1];\n  const qIdStr = String(question.id);\n  const tapeTypeStr = String(question.tapeType);\n  const tapeUrl = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n  const eachNote = document.getElementById(qIdStr);\n  eachNote === null || eachNote === void 0 ? void 0 : eachNote.setAttribute(\"style\", chosenPosition);\n  const qNoteType = String(question.noteType);\n\n  // capture img start2\n  const printRef = useRef(null);\n  const handleDownloadImage = async () => {\n    const element = printRef.current;\n    const canvas = await html2canvas(element, {\n      backgroundColor: \"none\",\n      logging: true,\n      useCORS: true //to enable cross origin perms\n    });\n\n    const data = canvas.toDataURL(\"image/jpg\");\n    const link = document.createElement(\"a\");\n    if (typeof link.download === \"string\") {\n      link.href = data;\n      console.log(\"\");\n      link.download = \"image.jpg\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n  // capture img fin 2\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"each-question-note-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"QuestionNote-maskingTape-box\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"QuestionNote-maskingTape-img\",\n          id: qIdStr,\n          src: tapeUrl,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: printRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"each-question-note-header-edge-img-box\",\n          style: {\n            backgroundImage: `url(\"/notes/note${qNoteType}-top-edge.png\")`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"each-question-note-body\",\n          style: {\n            backgroundImage: `url(\"/notes/note${qNoteType}-body.png\")`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-note-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"note-profile-pic\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/profile-imgs/oring_2.png\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(NowDate, {\n              questionUploadTime: question.uploadTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-note-content-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"each-note-content\",\n              children: question.questionContents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 6\n          }, this), question.questionHyperlink == null || question.questionHyperlink === \"\" ? undefined : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"QuestionNote-note-hyperlink-box\",\n            children: /*#__PURE__*/_jsxDEV(HyperlinkBox, {\n              hyperlinkContent: question.questionHyperlink\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"note-hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"each-note-answer-form-box\",\n            children: /*#__PURE__*/_jsxDEV(AnswerForm, {\n              questionId: question.id,\n              questionContents: question.questionContents\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"each-question-note-footer-edge-img-box\",\n        style: {\n          backgroundImage: `url(\"/notes/note${qNoteType}-bottom-edge.png\")`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_s(AnswerFormQuestionNote, \"GFo43F1pcInHi7YRxOjX7f0n4kQ=\");\n_c = AnswerFormQuestionNote;\nexport default AnswerFormQuestionNote;\nvar _c;\n$RefreshReg$(_c, \"AnswerFormQuestionNote\");","map":{"version":3,"names":["AnswerForm","NowDate","HyperlinkBox","useRef","html2canvas","AnswerFormQuestionNote","props","question","tapePositionList","chosenPosition","tapePosition","qIdStr","String","id","tapeTypeStr","tapeType","tapeUrl","eachNote","document","getElementById","setAttribute","qNoteType","noteType","printRef","handleDownloadImage","element","current","canvas","backgroundColor","logging","useCORS","data","toDataURL","link","createElement","download","href","console","log","body","appendChild","click","removeChild","window","open","backgroundImage","uploadTime","questionContents","questionHyperlink","undefined"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33copy/ringcard/ringcard_frontend/src/components/AnswerNote/AnswerFormQuestionNote.tsx"],"sourcesContent":["import AnswerForm from \"./AnswerForm\";\nimport { IQuestion } from \"../types\";\nimport \"../../styles/question.css\";\nimport \"../../styles/answerQuestionNote.css\";\nimport NowDate from \"../utils/NowDate\";\nimport HyperlinkBox from \"../atoms/HyperlinkBox\";\nimport { useRef } from \"react\";\nimport html2canvas from \"html2canvas\";\n\nexport interface Props {\n\tquestion: IQuestion;\n}\n\nfunction AnswerFormQuestionNote(props: Props) {\n\tconst question = props.question;\n\n\tconst tapePositionList = [\n\t\t\"width: 130px; height: 28px; margin: 0 auto; margin-top: -8px;\",\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -2.5px; transform: rotate(6deg);\",\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: 7px auto -15px -13px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: 3px auto -30px -8px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: 6px -9px -10px auto;\",\n\t\t\"width: 100px; height: 28px; transform: rotate(36deg); margin: 8px -11px -10px auto;\",\n\t];\n\tconst chosenPosition = tapePositionList[question.tapePosition - 1];\n\n\tconst qIdStr = String(question.id);\n\tconst tapeTypeStr = String(question.tapeType);\n\tconst tapeUrl = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n\n\tconst eachNote = document.getElementById(qIdStr);\n\teachNote?.setAttribute(\"style\", chosenPosition);\n\n\tconst qNoteType = String(question.noteType);\n\n\n\t// capture img start2\n  const printRef = useRef<HTMLInputElement>(null);\n\n  const handleDownloadImage = async () => {\n    const element:any = printRef.current;\n    const canvas = await html2canvas(element, {\n      backgroundColor: \"none\",\n      logging: true,\n      useCORS: true //to enable cross origin perms\n    });\n\n    const data = canvas.toDataURL(\"image/jpg\");\n    const link = document.createElement(\"a\");\n\n    if (typeof link.download === \"string\") {\n      link.href = data;\n      console.log(\"\");\n      link.download = \"image.jpg\";\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n  // capture img fin 2\n\t\n\treturn (\n\t\t<>\n\t\t\t<div className=\"each-question-note-box\">\n\t\t\t\t<div className=\"QuestionNote-maskingTape-box\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"QuestionNote-maskingTape-img\"\n\t\t\t\t\t\tid={qIdStr}\n\t\t\t\t\t\tsrc={tapeUrl}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div ref={printRef}>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"each-question-note-header-edge-img-box\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-top-edge.png\")`,\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"each-question-note-body\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-body.png\")`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"each-note-header\">\n\t\t\t\t\t\t<div className=\"note-profile-pic\">\n\t\t\t\t\t\t\t<img src=\"/profile-imgs/oring_2.png\" alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<NowDate questionUploadTime={question.uploadTime} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"each-note-content-box\">\n\t\t\t\t\t\t<div className=\"each-note-content\">{question.questionContents}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{question.questionHyperlink == null ||\n\t\t\t\t\tquestion.questionHyperlink === \"\" ? undefined : (\n\t\t\t\t\t\t<div className=\"QuestionNote-note-hyperlink-box\">\n\t\t\t\t\t\t\t<HyperlinkBox hyperlinkContent={question.questionHyperlink} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<hr className=\"note-hr\" />\n\t\t\t\t\t<div className=\"each-note-answer-form-box\">\n\t\t\t\t\t\t<AnswerForm questionId={question.id} questionContents={question.questionContents} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"each-question-note-footer-edge-img-box\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-bottom-edge.png\")`,\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default AnswerFormQuestionNote;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}