{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FormDataHelper = void 0;\nconst helpers_1 = require(\"../helpers\");\n// This class is partially inspired by https://github.com/form-data/form-data/blob/master/lib/form_data.js\n// All credits to their authors.\nclass FormDataHelper {\n  constructor() {\n    this._boundary = '';\n    this._chunks = [];\n  }\n  bodyAppend() {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    const allAsBuffer = values.map(val => val instanceof Buffer ? val : Buffer.from(val));\n    this._chunks.push(...allAsBuffer);\n  }\n  append(field, value, contentType) {\n    const convertedValue = value instanceof Buffer ? value : value.toString();\n    const header = this.getMultipartHeader(field, convertedValue, contentType);\n    this.bodyAppend(header, convertedValue, FormDataHelper.LINE_BREAK);\n  }\n  getHeaders() {\n    return {\n      'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n    };\n  }\n  /** Length of form-data (including footer length). */\n  getLength() {\n    return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);\n  }\n  getBuffer() {\n    const allChunks = [...this._chunks, this.getMultipartFooter()];\n    const totalBuffer = Buffer.alloc(this.getLength());\n    let i = 0;\n    for (const chunk of allChunks) {\n      for (let j = 0; j < chunk.length; i++, j++) {\n        totalBuffer[i] = chunk[j];\n      }\n    }\n    return totalBuffer;\n  }\n  getBoundary() {\n    if (!this._boundary) {\n      this.generateBoundary();\n    }\n    return this._boundary;\n  }\n  generateBoundary() {\n    // This generates a 50 character boundary similar to those used by Firefox.\n    let boundary = '--------------------------';\n    for (let i = 0; i < 24; i++) {\n      boundary += Math.floor(Math.random() * 10).toString(16);\n    }\n    this._boundary = boundary;\n  }\n  getMultipartHeader(field, value, contentType) {\n    // In this lib no need to guess more the content type, octet stream is ok of buffers\n    if (!contentType) {\n      contentType = value instanceof Buffer ? FormDataHelper.DEFAULT_CONTENT_TYPE : '';\n    }\n    const headers = {\n      'Content-Disposition': ['form-data', `name=\"${field}\"`],\n      'Content-Type': contentType\n    };\n    let contents = '';\n    for (const [prop, header] of Object.entries(headers)) {\n      // skip nullish headers.\n      if (!header.length) {\n        continue;\n      }\n      contents += prop + ': ' + (0, helpers_1.arrayWrap)(header).join('; ') + FormDataHelper.LINE_BREAK;\n    }\n    return '--' + this.getBoundary() + FormDataHelper.LINE_BREAK + contents + FormDataHelper.LINE_BREAK;\n  }\n  getMultipartFooter() {\n    if (this._footerChunk) {\n      return this._footerChunk;\n    }\n    return this._footerChunk = Buffer.from('--' + this.getBoundary() + '--' + FormDataHelper.LINE_BREAK);\n  }\n}\nexports.FormDataHelper = FormDataHelper;\nFormDataHelper.LINE_BREAK = '\\r\\n';\nFormDataHelper.DEFAULT_CONTENT_TYPE = 'application/octet-stream';","map":{"version":3,"names":["Object","defineProperty","exports","value","FormDataHelper","helpers_1","require","constructor","_boundary","_chunks","bodyAppend","values","allAsBuffer","map","val","Buffer","from","push","append","field","contentType","convertedValue","toString","header","getMultipartHeader","LINE_BREAK","getHeaders","getBoundary","getLength","reduce","acc","cur","length","getMultipartFooter","getBuffer","allChunks","totalBuffer","alloc","i","chunk","j","generateBoundary","boundary","Math","floor","random","DEFAULT_CONTENT_TYPE","headers","contents","prop","entries","arrayWrap","join","_footerChunk"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/twitter-api-v2/dist/client-mixins/form-data.helper.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FormDataHelper = void 0;\nconst helpers_1 = require(\"../helpers\");\n// This class is partially inspired by https://github.com/form-data/form-data/blob/master/lib/form_data.js\n// All credits to their authors.\nclass FormDataHelper {\n    constructor() {\n        this._boundary = '';\n        this._chunks = [];\n    }\n    bodyAppend(...values) {\n        const allAsBuffer = values.map(val => val instanceof Buffer ? val : Buffer.from(val));\n        this._chunks.push(...allAsBuffer);\n    }\n    append(field, value, contentType) {\n        const convertedValue = value instanceof Buffer ? value : value.toString();\n        const header = this.getMultipartHeader(field, convertedValue, contentType);\n        this.bodyAppend(header, convertedValue, FormDataHelper.LINE_BREAK);\n    }\n    getHeaders() {\n        return {\n            'content-type': 'multipart/form-data; boundary=' + this.getBoundary(),\n        };\n    }\n    /** Length of form-data (including footer length). */\n    getLength() {\n        return this._chunks.reduce((acc, cur) => acc + cur.length, this.getMultipartFooter().length);\n    }\n    getBuffer() {\n        const allChunks = [...this._chunks, this.getMultipartFooter()];\n        const totalBuffer = Buffer.alloc(this.getLength());\n        let i = 0;\n        for (const chunk of allChunks) {\n            for (let j = 0; j < chunk.length; i++, j++) {\n                totalBuffer[i] = chunk[j];\n            }\n        }\n        return totalBuffer;\n    }\n    getBoundary() {\n        if (!this._boundary) {\n            this.generateBoundary();\n        }\n        return this._boundary;\n    }\n    generateBoundary() {\n        // This generates a 50 character boundary similar to those used by Firefox.\n        let boundary = '--------------------------';\n        for (let i = 0; i < 24; i++) {\n            boundary += Math.floor(Math.random() * 10).toString(16);\n        }\n        this._boundary = boundary;\n    }\n    getMultipartHeader(field, value, contentType) {\n        // In this lib no need to guess more the content type, octet stream is ok of buffers\n        if (!contentType) {\n            contentType = value instanceof Buffer ? FormDataHelper.DEFAULT_CONTENT_TYPE : '';\n        }\n        const headers = {\n            'Content-Disposition': ['form-data', `name=\"${field}\"`],\n            'Content-Type': contentType,\n        };\n        let contents = '';\n        for (const [prop, header] of Object.entries(headers)) {\n            // skip nullish headers.\n            if (!header.length) {\n                continue;\n            }\n            contents += prop + ': ' + (0, helpers_1.arrayWrap)(header).join('; ') + FormDataHelper.LINE_BREAK;\n        }\n        return '--' + this.getBoundary() + FormDataHelper.LINE_BREAK + contents + FormDataHelper.LINE_BREAK;\n    }\n    getMultipartFooter() {\n        if (this._footerChunk) {\n            return this._footerChunk;\n        }\n        return this._footerChunk = Buffer.from('--' + this.getBoundary() + '--' + FormDataHelper.LINE_BREAK);\n    }\n}\nexports.FormDataHelper = FormDataHelper;\nFormDataHelper.LINE_BREAK = '\\r\\n';\nFormDataHelper.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}