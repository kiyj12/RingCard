{"ast":null,"code":"import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function QuestionNoteList(props){var QandAmap=props.map;console.log(QandAmap);// answerList.forEach(AnswerForTheQuestion);\n// const answer = answerList.find(AnswerForTheQuestion(question));\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"question-notes-container\"})});}export default QuestionNoteList;","map":{"version":3,"names":["React","QuestionNoteList","props","QandAmap","map","console","log"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { url } from \"inspector\";\nimport { useEffect, useState } from \"react\";\nimport Pagination from \"react-js-pagination\";\nimport { IAnswer, IQuestion } from \"./types\";\n\nimport QuestionNote from \"./QuestionNoteAnony\";\nimport React from \"react\";\n\nexport interface Props {\n\tmap: any;\n}\n\nfunction QuestionNoteList(props: Props) {\n\tconst QandAmap = props.map;\n\tconsole.log(QandAmap);\n\t// answerList.forEach(AnswerForTheQuestion);\n\t// const answer = answerList.find(AnswerForTheQuestion(question));\n\treturn (\n\t\t<>\n\t\t\t<div className=\"question-notes-container\">\n\t\t\t\t{/* {QandAmap.map((QA, idx) => (\n\t\t\t\t\t// answerList.find(a => a.questionId === question.id);\n\n\t\t\t\t\t<QuestionNote\n\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\tquestion={QA.question}\n\t\t\t\t\t\tanswer={QA.answer}\n\t\t\t\t\t/>\n\t\t\t\t))} */}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default QuestionNoteList;\n"],"mappings":"AAOA,MAAOA,MAAK,KAAM,OAAO,CAAC,gGAM1B,QAASC,iBAAgB,CAACC,KAAY,CAAE,CACvC,GAAMC,SAAQ,CAAGD,KAAK,CAACE,GAAG,CAC1BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CACrB;AACA;AACA,mBACC,sCACC,YAAK,SAAS,CAAC,0BAA0B,EAWnC,EACJ,CAEL,CAEA,cAAeF,iBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}