{"ast":null,"code":"import _objectSpread from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useState}from\"react\";import axios from\"axios\";import\"../../styles/layout/layout.css\";import\"../../styles/layout/header.css\";import\"../../styles/user/userBox.css\";import\"../../styles/user/userIcon.css\";import\"../../styles/user/userHeader.css\";import\"../../styles/layout/reactToast.css\";import\"../../styles/login.css\";import HeaderRingca from\"../../components/HeaderRingca\";import{useForm}from\"react-hook-form\";// import Toastify from \"../../components/Toast\";\nimport{Client,auth}from\"twitter-api-sdk\";import express from\"express\";import dotenv from\"dotenv\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){dotenv.config();var app=express();var authClient=new auth.OAuth2User({client_id:\"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",client_secret:\"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",callback:\"https://127.0.0.1:3000/callback\",scopes:[\"tweet.read\",\"users.read\",\"offline.access\"]});// const authClient = new auth.OAuth2User({\n//   client_id: process.env.CLIENT_ID as string,\n//   client_secret: process.env.CLIENT_SECRET as string,\n//   callback: \"https://127.0.0.1:3000/callback\",\n//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\n// });\nvar client=new Client(authClient);var STATE=\"my-state\";app.get(\"/callback\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(req,res){var _req$query,code,state;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_req$query=req.query,code=_req$query.code,state=_req$query.state;if(!(state!==STATE)){_context.next=4;break;}return _context.abrupt(\"return\",res.status(500).send(\"State isn't matching\"));case 4:_context.next=6;return authClient.requestAccessToken(code);case 6:res.redirect(\"/tweets\");_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());app.get(\"/login\",/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req,res){var authUrl;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:authUrl=authClient.generateAuthURL({state:STATE,code_challenge_method:\"plain\",code_challenge:\"test\"});res.redirect(authUrl);case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());app.get(\"/tweets\",/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req,res){var tweets;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return client.tweets.findTweetById(\"20\");case 3:tweets=_context3.sent;res.send(tweets);_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.log(\"tweets error\",_context3.t0);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}());app.get(\"/revoke\",/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req,res){var _response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return authClient.revokeAccessToken();case 3:_response=_context4.sent;res.send(_response);_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x7,_x8){return _ref4.apply(this,arguments);};}());app.listen(3000,function(){console.log(\"Go here to login: http://127.0.0.1:3000/login\");});// \t// toastify 알람 실행 함수 만들기\n//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", { \n// \t\tautoClose: 700,\n// \t\tposition:\"top-center\", \n// \t\tpauseOnFocusLoss: true,\n// \t\thideProgressBar: true,\n// \t\tdraggable: true, \n// \t\tpauseOnHover: true,\n// \t\ttheme: \"dark\",\n// \t\tcloseButton: false,\n// \t\ttransition: Zoom,\n// \t\t// onOpen: () => window.alert('Called when I open'),\n// \t\t// onClose: () => window.alert('Called when I close')\n// })\nvar _useState=useState({bindingResultHasErrors:false,overlappedUsername:false}),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];// submitted==true여야 새로고침 되도록.\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),submitted=_useState4[0],setSubmitted=_useState4[1];var onSubmit=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(data){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return new Promise(function(r){return setTimeout(r,100);});case 2:// alert(JSON.stringify(data));\nconsole.log(data);_context5.next=5;return axios.post(\"/loginForm\",data).then(function(res){console.log(\"postHere\");console.log(data);setResponse(res.data);console.log(res.data);setSubmitted(true);}).catch(function(error){console.log(error.config);});case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function onSubmit(_x9){return _ref5.apply(this,arguments);};}();function RedirectAndInputErrors(){if(response.bindingResultHasErrors&&response.overlappedUsername){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"}),/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"overlappedUsername\"})]});}else if(response.bindingResultHasErrors){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"bindingResultHasErrors\"});}else if(response.overlappedUsername){return/*#__PURE__*/_jsx(\"div\",{className:\"user-text-error\",children:\"overlappedUsername\"});}else if(submitted){// 위 조건 만족할 때만 loginForm으로 새로고침\nwindow.location.href=\"/loginForm\";return null;}return null;}var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,_useForm$formState=_useForm.formState,isSubmitting=_useForm$formState.isSubmitting,isDirty=_useForm$formState.isDirty,errors=_useForm$formState.errors;// PW toggle start.\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showPw=_useState6[0],setShowPw=_useState6[1];var toggleShowPw=function toggleShowPw(){setShowPw(!showPw);};function handlePwClick(e){toggleShowPw();}function ShowPw(props){return/*#__PURE__*/_jsx(\"button\",{value:\"\\uBCC0\\uACBD\",className:\"user-show-pw\",onClick:handlePwClick});}function HidePw(props){return/*#__PURE__*/_jsx(\"button\",{value:\"\\uBCC0\\uACBD\",className:\"user-hide-pw\",onClick:handlePwClick});}// PW toggle fin.\nfunction BtnToJoin(){function handleClick(e){window.location.href=\"/joinForm\";}return/*#__PURE__*/_jsx(\"div\",{className:\"login-join\",onClick:handleClick,children:/*#__PURE__*/_jsx(\"div\",{className:\"login-join-text\",children:\"\\uC544\\uC9C1 \\uB9C1\\uCE74\\uC758 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"})});}return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit(onSubmit),children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(HeaderRingca,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div-light user-icon-user-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-icon-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({className:\"user-inner-transparent\"},register(\"username\",{required:\"답변이 입력되지 않았습니다.\"})))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-in\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-text\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-box-div user-icon-light\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"user-icon-bar\",children:\"|\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({type:showPw?\"text\":\"password\",className:\"user-inner-transparent\"// placeholder=\"비밀번호를 입력해주세요\"\n},register(\"password\",{required:\"답변이 입력되지 않았습니다.\"}))),showPw?/*#__PURE__*/_jsx(ShowPw,{onClick:toggleShowPw}):/*#__PURE__*/_jsx(HidePw,{onClick:toggleShowPw})]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-text user-text-right\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC73C\\uC168\\uB098\\uC694?\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"user-box-in\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"user-btn\",children:/*#__PURE__*/_jsx(\"div\",{className:\"user-btn-text\",children:\"\\uB85C\\uADF8\\uC778\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"login-join-box\",children:/*#__PURE__*/_jsx(BtnToJoin,{})})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","axios","HeaderRingca","useForm","Client","auth","express","dotenv","Login","config","app","authClient","OAuth2User","client_id","client_secret","callback","scopes","client","STATE","get","req","res","query","code","state","status","send","requestAccessToken","redirect","console","log","authUrl","generateAuthURL","code_challenge_method","code_challenge","tweets","findTweetById","revokeAccessToken","response","listen","bindingResultHasErrors","overlappedUsername","setResponse","submitted","setSubmitted","onSubmit","data","Promise","r","setTimeout","post","then","catch","error","RedirectAndInputErrors","window","location","href","register","handleSubmit","formState","isSubmitting","isDirty","errors","showPw","setShowPw","toggleShowPw","handlePwClick","e","ShowPw","props","HidePw","BtnToJoin","handleClick","required"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/layout/reactToast.css\"\r\nimport \"../../styles/login.css\";\r\nimport HeaderNoProfile from \"../../components/HeaderNoProfile\";\r\nimport HeaderRingca from \"../../components/HeaderRingca\";\r\nimport { useForm } from \"react-hook-form\";\r\n// import Toastify from \"../../components/Toast\";\r\n\r\nimport { Client, auth } from \"twitter-api-sdk\";\r\nimport express from \"express\";\r\nimport dotenv from \"dotenv\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\n\r\nconst authClient = new auth.OAuth2User({\r\n  client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\r\n  client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\r\n  callback: \"https://127.0.0.1:3000/callback\",\r\n  scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n});\r\n\r\n// const authClient = new auth.OAuth2User({\r\n//   client_id: process.env.CLIENT_ID as string,\r\n//   client_secret: process.env.CLIENT_SECRET as string,\r\n//   callback: \"https://127.0.0.1:3000/callback\",\r\n//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n// });\r\n\r\nconst client = new Client(authClient);\r\n\r\nconst STATE = \"my-state\";\r\n\r\napp.get(\"/callback\", async function (req, res) {\r\n  try {\r\n    const { code, state } = req.query;\r\n    if (state !== STATE) return res.status(500).send(\"State isn't matching\");\r\n    await authClient.requestAccessToken(code as string);\r\n    res.redirect(\"/tweets\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\napp.get(\"/login\", async function (req, res) {\r\n  const authUrl = authClient.generateAuthURL({\r\n    state: STATE,\r\n    code_challenge_method: \"plain\",\r\n    code_challenge: \"test\",\r\n  });\r\n  res.redirect(authUrl);\r\n});\r\n\r\napp.get(\"/tweets\", async function (req, res) {\r\n  try {\r\n    const tweets = await client.tweets.findTweetById(\"20\");\r\n    res.send(tweets);\r\n  } catch (error) {\r\n    console.log(\"tweets error\", error);\r\n  }\r\n});\r\n\r\napp.get(\"/revoke\", async function (req, res) {\r\n  try {\r\n    const response = await authClient.revokeAccessToken();\r\n    res.send(response);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log(`Go here to login: http://127.0.0.1:3000/login`);\r\n});\r\n\r\n\r\n\r\n\t\r\n// \t// toastify 알람 실행 함수 만들기\r\n//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", { \r\n// \t\tautoClose: 700,\r\n// \t\tposition:\"top-center\", \r\n// \t\tpauseOnFocusLoss: true,\r\n// \t\thideProgressBar: true,\r\n// \t\tdraggable: true, \r\n// \t\tpauseOnHover: true,\r\n// \t\ttheme: \"dark\",\r\n// \t\tcloseButton: false,\r\n// \t\ttransition: Zoom,\r\n// \t\t// onOpen: () => window.alert('Called when I open'),\r\n// \t\t// onClose: () => window.alert('Called when I close')\r\n// })\r\n\r\n\ttype ResponseList = {\r\n\t\tbindingResultHasErrors: boolean;\r\n\t\toverlappedUsername: boolean;\r\n\t}\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tbindingResultHasErrors: false,\r\n\t\toverlappedUsername: false\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\t\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/loginForm\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors(){\r\n\t\tif(response.bindingResultHasErrors && response.overlappedUsername){\r\n\t\t\treturn (<>\r\n\t\t\t<div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t\t<div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if(response.bindingResultHasErrors){\r\n\t\t\treturn <div className=\"user-text-error\">bindingResultHasErrors</div>\r\n\t\t}\r\n\t\telse if(response.overlappedUsername){\r\n\t\t\treturn <div className=\"user-text-error\">overlappedUsername</div>\r\n\t\t}\r\n\t\telse if(submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\"\r\n\t\t\treturn (null);\r\n\t\t}\r\n\t\treturn (null);\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw =()=>{\r\n\tsetShowPw(!showPw);\r\n\t}\r\n\r\n\tfunction handlePwClick(e: any){\r\n    toggleShowPw()\r\n  }\r\n\r\n\tfunction ShowPw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-show-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-hide-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\t// PW toggle fin.\r\n\t\r\n\tfunction BtnToJoin(){\r\n\t\tfunction handleClick(e: any){\r\n\t\t\t\twindow.location.href=\"/joinForm\"\r\n\t\t}\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"login-join\" onClick={handleClick}>\r\n\t\t\t\t\t\t\t<div className=\"login-join-text\">아직 링카의 회원이 아니신가요?</div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t<div className=\"container\">\r\n\t\t\t<HeaderRingca/>\r\n\t\t\t{/* <ToastContainer/> */}\r\n\t\t\t<div className=\"user-box\">\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t<div className=\"user-box-div-light user-icon-user-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\t\t\r\n\t\t\t\t\t\t<input className=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t{...register(\"username\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t// placeholder=\"비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-text user-text-right\">비밀번호를 잊으셨나요?\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">비밀번호 변경</button>\r\n\t\t\t\t</form> */}\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<button type=\"submit\" className=\"user-btn\">\r\n\t\t\t\t\t\t<div className=\"user-btn-text\">로그인</div>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"login-join-box\">\r\n\t\t\t\t\t<BtnToJoin/>\r\n\t\t\t\t\t{/* <button onClick={notify}/> */}\r\n\t\t\t\t\t{/* <Toastify text=\"hello\"/> */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</form>\r\n\t);\r\n};\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}