{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\components\\\\QuestionNoteListAnony.tsx\";\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction QuestionNoteList(props) {\n  const QandAmap = props.map;\n  console.log(QandAmap);\n  console.log(QandAmap[0]);\n  // answerList.forEach(AnswerForTheQuestion);\n  // const answer = answerList.find(AnswerForTheQuestion(question));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-notes-container\",\n      children: QandAmap.map((QA, idx) =>\n      /*#__PURE__*/\n      // answerList.find(a => a.questionId === question.id);\n      _jsxDEV(QuestionNoteAnony, {\n        idx: idx,\n        question: QA[0],\n        answer: QA[1]\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = QuestionNoteList;\nexport default QuestionNoteList;\nvar _c;\n$RefreshReg$(_c, \"QuestionNoteList\");","map":{"version":3,"names":["QuestionNoteAnony","React","QuestionNoteList","props","QandAmap","map","console","log","QA","idx"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/components/QuestionNoteListAnony.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { url } from \"inspector\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { IAnswer, IQuestion } from \"./types\";\r\n\r\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\r\nimport React from \"react\";\r\n\r\nexport interface Props {\r\n\tmap: [[IQuestion, IAnswer]];\r\n}\r\n\r\nfunction QuestionNoteList(props: Props) {\r\n\tconst QandAmap = props.map;\r\n\tconsole.log(QandAmap);\r\n\tconsole.log(QandAmap[0]);\r\n\t// answerList.forEach(AnswerForTheQuestion);\r\n\t// const answer = answerList.find(AnswerForTheQuestion(question));\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"question-notes-container\">\r\n\t\t\t\t{QandAmap.map((QA, idx) => (\r\n\t\t\t\t\t// answerList.find(a => a.questionId === question.id);\r\n\r\n\t\t\t\t\t<QuestionNoteAnony\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tidx={idx}\r\n\t\t\t\t\t\tquestion={QA[0]}\r\n\t\t\t\t\t\tanswer={QA[1]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default QuestionNoteList;"],"mappings":";AAMA,OAAOA,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAM1B,SAASC,gBAAgB,CAACC,KAAY,EAAE;EACvC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;EAC1BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACrBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxB;EACA;EACA,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,0BAA0B;MAAA,UACvCA,QAAQ,CAACC,GAAG,CAAC,CAACG,EAAE,EAAEC,GAAG;MAAA;MACrB;MAEA,QAAC,iBAAiB;QAEjB,GAAG,EAAEA,GAAI;QACT,QAAQ,EAAED,EAAE,CAAC,CAAC,CAAE;QAChB,MAAM,EAAEA,EAAE,CAAC,CAAC;MAAE,GAHTC,GAAG;QAAA;QAAA;QAAA;MAAA,QAKT;IAAC;MAAA;MAAA;MAAA;IAAA;EACG,iBACJ;AAEL;AAAC,KAtBQP,gBAAgB;AAwBzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}