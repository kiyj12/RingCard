{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuleg\\\\Dev\\\\Ringca\\\\ORIN33\\\\ringcard\\\\ringcard_frontend\\\\src\\\\pages\\\\login\\\\Oauth2.tsx\";\nimport React from \"react\";\nimport * as dotenv from \"dotenv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Oauth2 = () => {\n  dotenv.config();\n  const BEARER_TOKEN = process.env.REACT_APP_BEARER_TOKEN;\n\n  // Consuming a Stream\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function OauthTwitter() {\n  //     const stream = client.tweets.sampleStream({\n  //       \"tweet.fields\": [\"author_id\"],\n  //     });\n  //     for await (const tweet of stream) {\n  //       console.log(tweet.data?.author_id);\n  //     }\n\n  //     return(null);\n  //   }\n  //   return(<div><OauthTwitter/></div>)\n  // }\n\n  // Getting a Tweet\n  // if(BEARER_TOKEN){\n  //   const client = new Client(BEARER_TOKEN);\n\n  //   async function GettingATweet() {\n  //     const tweet = await client.tweets.findTweetById(\"20\");\n  //     // console.log(tweet.data.text);\n  //     console.log(tweet);\n  //   }\n\n  //     return(null);\n  // }\n\n  // return (<p>1<GettingATweet/></p>)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"1ewrwerewrwerwer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }, this);\n};\n_c = Oauth2;\nexport default Oauth2;\nvar _c;\n$RefreshReg$(_c, \"Oauth2\");","map":{"version":3,"names":["React","dotenv","Oauth2","config","BEARER_TOKEN","process","env","REACT_APP_BEARER_TOKEN"],"sources":["C:/Users/yuleg/Dev/Ringca/ORIN33/ringcard/ringcard_frontend/src/pages/login/Oauth2.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Client } from \"twitter-api-sdk\";\r\nimport * as dotenv from \"dotenv\";\r\n\r\n\r\nconst Oauth2= ()=>{\r\n\r\n  dotenv.config();\r\n\r\n  const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n\r\n  // return (<p>1<GettingATweet/></p>)\r\n  return (<div>1ewrwerewrwerwer</div>)\r\n  \r\n  \r\n}\r\n\r\nexport default Oauth2;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAAC;AAGjC,MAAMC,MAAM,GAAE,MAAI;EAEhBD,MAAM,CAACE,MAAM,EAAE;EAEf,MAAMC,YAAY,GAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB;;EAErD;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAIA;EACA,oBAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA2B;AAGrC,CAAC;AAAA,KA3CKL,MAAM;AA6CZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}