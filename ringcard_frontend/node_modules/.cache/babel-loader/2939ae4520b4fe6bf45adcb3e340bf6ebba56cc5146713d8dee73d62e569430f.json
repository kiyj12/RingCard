{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar globals_1 = require(\"../globals\");\nvar client_v2_labs_read_1 = __importDefault(require(\"./client.v2.labs.read\"));\n/**\n * Base Twitter v2 labs client with read/write rights.\n */\nvar TwitterApiv2LabsReadWrite = /*#__PURE__*/function (_client_v2_labs_read_) {\n  _inherits(TwitterApiv2LabsReadWrite, _client_v2_labs_read_);\n  var _super = _createSuper(TwitterApiv2LabsReadWrite);\n  function TwitterApiv2LabsReadWrite() {\n    var _this;\n    _classCallCheck(this, TwitterApiv2LabsReadWrite);\n    _this = _super.apply(this, arguments);\n    _this._prefix = globals_1.API_V2_LABS_PREFIX;\n    return _this;\n  }\n  /**\n   * Get a client with only read rights.\n   */\n  _createClass(TwitterApiv2LabsReadWrite, [{\n    key: \"readOnly\",\n    get: function get() {\n      return this;\n    }\n  }]);\n  return TwitterApiv2LabsReadWrite;\n}(client_v2_labs_read_1.default);\nexports.default = TwitterApiv2LabsReadWrite;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","globals_1","require","client_v2_labs_read_1","TwitterApiv2LabsReadWrite","arguments","_prefix","API_V2_LABS_PREFIX","default"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/node_modules/twitter-api-v2/dist/v2-labs/client.v2.labs.write.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst globals_1 = require(\"../globals\");\nconst client_v2_labs_read_1 = __importDefault(require(\"./client.v2.labs.read\"));\n/**\n * Base Twitter v2 labs client with read/write rights.\n */\nclass TwitterApiv2LabsReadWrite extends client_v2_labs_read_1.default {\n    constructor() {\n        super(...arguments);\n        this._prefix = globals_1.API_V2_LABS_PREFIX;\n    }\n    /**\n     * Get a client with only read rights.\n     */\n    get readOnly() {\n        return this;\n    }\n}\nexports.default = TwitterApiv2LabsReadWrite;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAAA;AACb,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAMC,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AACvC,IAAMC,qBAAqB,GAAGT,eAAe,CAACQ,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC/E;AACA;AACA;AAFA,IAGME,yBAAyB;EAAA;EAAA;EAC3B,qCAAc;IAAA;IAAA;IACV,2BAASC,SAAS;IAClB,MAAKC,OAAO,GAAGL,SAAS,CAACM,kBAAkB;IAAC;EAChD;EACA;AACJ;AACA;EAFI;IAAA;IAAA,KAGA,eAAe;MACX,OAAO,IAAI;IACf;EAAC;EAAA;AAAA,EAVmCJ,qBAAqB,CAACK,OAAO;AAYrET,OAAO,CAACS,OAAO,GAAGJ,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}