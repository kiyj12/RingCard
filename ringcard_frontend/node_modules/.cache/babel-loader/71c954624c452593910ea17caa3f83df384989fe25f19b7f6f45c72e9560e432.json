{"ast":null,"code":"var _jsxFileName = \"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/EditAnswerForm.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../styles/answerQuestionNote.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnswerForm(props) {\n  _s();\n  const questionId = String(props.questionId);\n\n  // place holder로 넣음.\n  const PropsOldAnswer = String(props.oldAnswer);\n  const [oldAnswer, setOldAnswer] = useState();\n  useEffect(() => {\n    setOldAnswer(PropsOldAnswer);\n  }, [PropsOldAnswer]);\n  const onSubmit = async data => {\n    await new Promise(r => setTimeout(r, 100));\n\n    // alert(JSON.stringify(data));\n    console.log(data);\n    await axios.post(\"/question/\" + questionId + \"/edit/user\", data).then(res => {\n      console.log(\"posthere\");\n      console.log(data);\n      // window.location.href = \"/question/\" + questionId + \"/completed/user\";\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log(\"Error\", error.message);\n      }\n      console.log(error.config);\n    });\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isDirty,\n      errors\n    }\n  } = useForm();\n\n  // 디폴트 밸류로 예전 값 넣는 방법.\n  // TODO: 근데 디폴트값이랑 현재값 연동이 안 돼서 보류\n  // const {\n  // \tregister,\n  // \thandleSubmit,\n  // \treset,\n  // \tformState: { isSubmitting, isDirty, errors },\n  // } = useForm({ defaultValues: oldAnswer });\n  // useEffect(() => {\n  // \tsetOldAnswer(props.oldAnswer);\n  // \treset(props.oldAnswer);\n  // }, [props.oldAnswer]);\n\n  // 유저 입력 값을 넣을 변수\n  const [answerContents, setAnswerContents] = useState(\"\");\n  // 줄 수를 계산해서 저장할 변수\n  const [textareaHeight, setTextareaHeight] = useState(0);\n\n  // 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n  // 엔터('\\n') 개수를 세서 textareaHeight에 저장\n  const checkItemChangeHandler = event => {\n    setTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n    setAnswerContents(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"answerForm-answer-form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-text-box checkItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cursur-bar\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"answerAdd\",\n        className: \"answerForm-textarea\",\n        value: answerContents,\n        onInput: checkItemChangeHandler,\n        style: {\n          height: (textareaHeight + 1) * 27 + \"px\"\n        },\n        placeholder: oldAnswer,\n        ...register(\"answerContents\", {\n          required: \"답변이 입력되지 않았습니다.\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answerForm-btn-box\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"note-send-answer-btn\",\n          src: \"/buttons/send-answer-btn.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n}\n_s(AnswerForm, \"e+jF4PspmiMTFooJvcn3rfNOY/U=\", false, function () {\n  return [useForm];\n});\n_c = AnswerForm;\nexport default AnswerForm;\nvar _c;\n$RefreshReg$(_c, \"AnswerForm\");","map":{"version":3,"names":["axios","useEffect","useState","useForm","AnswerForm","props","questionId","String","PropsOldAnswer","oldAnswer","setOldAnswer","onSubmit","data","Promise","r","setTimeout","console","log","post","then","res","catch","error","response","status","headers","request","message","config","register","handleSubmit","formState","isSubmitting","isDirty","errors","answerContents","setAnswerContents","textareaHeight","setTextareaHeight","checkItemChangeHandler","event","target","value","split","length","height","required"],"sources":["/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/EditAnswerForm.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"../styles/answerQuestionNote.css\";\n\nexport interface Props {\n\tquestionId: number;\n\toldAnswer: String;\n}\n\nfunction AnswerForm(props: Props) {\n\tconst questionId = String(props.questionId);\n\n\t// place holder로 넣음.\n\tconst PropsOldAnswer = String(props.oldAnswer);\n\tconst [oldAnswer, setOldAnswer] = useState<any>();\n\tuseEffect(() => {\n\t\tsetOldAnswer(PropsOldAnswer);\n\t}, [PropsOldAnswer]);\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\n\t\t// alert(JSON.stringify(data));\n\t\tconsole.log(data);\n\n\t\tawait axios\n\t\t\t.post(\"/question/\" + questionId + \"/edit/user\", data)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(\"posthere\");\n\t\t\t\tconsole.log(data);\n\t\t\t\t// window.location.href = \"/question/\" + questionId + \"/completed/user\";\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tif (error.response) {\n\t\t\t\t\t// The request was made and the server responded with a status code\n\t\t\t\t\t// that falls out of the range of 2xx\n\t\t\t\t\tconsole.log(error.response.data);\n\t\t\t\t\tconsole.log(error.response.status);\n\t\t\t\t\tconsole.log(error.response.headers);\n\t\t\t\t} else if (error.request) {\n\t\t\t\t\t// The request was made but no response was received\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n\t\t\t\t\t// http.ClientRequest in node.js\n\t\t\t\t\tconsole.log(error.request);\n\t\t\t\t} else {\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\n\t\t\t\t\tconsole.log(\"Error\", error.message);\n\t\t\t\t}\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t};\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { isSubmitting, isDirty, errors },\n\t} = useForm();\n\n\t// 디폴트 밸류로 예전 값 넣는 방법.\n\t// TODO: 근데 디폴트값이랑 현재값 연동이 안 돼서 보류\n\t// const {\n\t// \tregister,\n\t// \thandleSubmit,\n\t// \treset,\n\t// \tformState: { isSubmitting, isDirty, errors },\n\t// } = useForm({ defaultValues: oldAnswer });\n\t// useEffect(() => {\n\t// \tsetOldAnswer(props.oldAnswer);\n\t// \treset(props.oldAnswer);\n\t// }, [props.oldAnswer]);\n\n\t// 유저 입력 값을 넣을 변수\n\tconst [answerContents, setAnswerContents] = useState(\"\");\n\t// 줄 수를 계산해서 저장할 변수\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\n\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\n\tconst checkItemChangeHandler = (event: any) => {\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n\t\tsetAnswerContents(event.target.value);\n\t};\n\n\treturn (\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div className=\"answerForm-text-box checkItem\">\n\t\t\t\t<span className=\"cursur-bar\">|</span>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"answerAdd\"\n\t\t\t\t\tclassName=\"answerForm-textarea\"\n\t\t\t\t\tvalue={answerContents}\n\t\t\t\t\tonInput={checkItemChangeHandler}\n\t\t\t\t\tstyle={{ height: (textareaHeight + 1) * 27 + \"px\" }}\n\t\t\t\t\tplaceholder={oldAnswer}\n\t\t\t\t\t{...register(\"answerContents\", {\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\n\t\t\t\t\t})}\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t\t<div className=\"answerForm-btn-box\">\n\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default AnswerForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}