[{"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/index.tsx":"1","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/reportWebVitals.ts":"2","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/App.tsx":"3","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/AppRouter.tsx":"4","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/utils/isLogin.ts":"5","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeUnanswered.tsx":"6","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeCollection.tsx":"7","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeAnswered.tsx":"8","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/UserInfo.tsx":"9","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/DeleteAccount.tsx":"10","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditEmailAlert.tsx":"11","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeTrashcan.tsx":"12","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditPassword.tsx":"13","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditUserRingcardName.tsx":"14","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditUserEmail.tsx":"15","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/FindPassword.tsx":"16","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Oauth2Step3.tsx":"17","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Join.tsx":"18","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Login.tsx":"19","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Oauth2.tsx":"20","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Logout.tsx":"21","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/question/QuestionUnanswered.tsx":"22","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/question/QuestionAnswered.tsx":"23","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/question/AnswerCompletedPage.tsx":"24","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/suggestion/SuggestionPage.tsx":"25","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/anony/QuestionAnony.tsx":"26","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/anony/UserHome.tsx":"27","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/auth/PrivateRoute.tsx":"28","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/atoms/UserProfile.tsx":"29","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/atoms/Navigation.tsx":"30","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/HeaderNoProfile.tsx":"31","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/Header.tsx":"32","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/utils/Toast.tsx":"33","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteList.tsx":"34","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/HeaderRingcaShort.tsx":"35","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/ClearTrashcanModal.tsx":"36","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/HeaderRingca.tsx":"37","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/AnsweredQuestionNote.tsx":"38","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteListAnony.tsx":"39","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/EditAnswerFormQuestionNote.tsx":"40","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/AnswerFormQuestionNote.tsx":"41","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/SendQuestionForm/SendQuestionFormUserHome.tsx":"42","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/SendQuestionForm/SendQuestionFormQuestionAnony.tsx":"43","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/MenuModal.tsx":"44","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNote.tsx":"45","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/atoms/HyperlinkBox.tsx":"46","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/utils/NowDate.tsx":"47","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteAnony.tsx":"48","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/EditAnswerForm.tsx":"49","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/AnswerForm.tsx":"50","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/SelectTapeModal.tsx":"51","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/SelectNoteModal.tsx":"52","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteFooter.tsx":"53"},{"size":554,"mtime":1668102596967,"results":"54","hashOfConfig":"55"},{"size":425,"mtime":1668102596967,"results":"56","hashOfConfig":"55"},{"size":129,"mtime":1670099687204,"results":"57","hashOfConfig":"55"},{"size":5650,"mtime":1671339755202,"results":"58","hashOfConfig":"55"},{"size":156,"mtime":1670191013899,"results":"59","hashOfConfig":"55"},{"size":1444,"mtime":1671093250459,"results":"60","hashOfConfig":"55"},{"size":1439,"mtime":1671093018832,"results":"61","hashOfConfig":"55"},{"size":1433,"mtime":1671096452915,"results":"62","hashOfConfig":"55"},{"size":4906,"mtime":1671094473883,"results":"63","hashOfConfig":"55"},{"size":4228,"mtime":1671093304687,"results":"64","hashOfConfig":"55"},{"size":2326,"mtime":1671093454638,"results":"65","hashOfConfig":"55"},{"size":2007,"mtime":1671093227186,"results":"66","hashOfConfig":"55"},{"size":7098,"mtime":1671093549002,"results":"67","hashOfConfig":"55"},{"size":3822,"mtime":1671093738758,"results":"68","hashOfConfig":"55"},{"size":3998,"mtime":1671093651699,"results":"69","hashOfConfig":"55"},{"size":2924,"mtime":1671092387927,"results":"70","hashOfConfig":"55"},{"size":8301,"mtime":1671343170413,"results":"71","hashOfConfig":"55"},{"size":6883,"mtime":1671092511987,"results":"72","hashOfConfig":"55"},{"size":4322,"mtime":1671339755204,"results":"73","hashOfConfig":"55"},{"size":8814,"mtime":1671339755204,"results":"74","hashOfConfig":"55"},{"size":316,"mtime":1671092910089,"results":"75","hashOfConfig":"55"},{"size":1140,"mtime":1671094234246,"results":"76","hashOfConfig":"55"},{"size":1272,"mtime":1671093976991,"results":"77","hashOfConfig":"55"},{"size":3314,"mtime":1671093925341,"results":"78","hashOfConfig":"55"},{"size":5181,"mtime":1671094354726,"results":"79","hashOfConfig":"55"},{"size":3877,"mtime":1671339755203,"results":"80","hashOfConfig":"55"},{"size":3395,"mtime":1671092325237,"results":"81","hashOfConfig":"55"},{"size":449,"mtime":1671091047790,"results":"82","hashOfConfig":"55"},{"size":318,"mtime":1671091020488,"results":"83","hashOfConfig":"55"},{"size":4638,"mtime":1671090955356,"results":"84","hashOfConfig":"55"},{"size":954,"mtime":1670573460578,"results":"85","hashOfConfig":"55"},{"size":1357,"mtime":1671091074848,"results":"86","hashOfConfig":"55"},{"size":630,"mtime":1669660204874,"results":"87","hashOfConfig":"55"},{"size":445,"mtime":1671091966565,"results":"88","hashOfConfig":"55"},{"size":303,"mtime":1670573148752,"results":"89","hashOfConfig":"55"},{"size":1372,"mtime":1671094429424,"results":"90","hashOfConfig":"55"},{"size":270,"mtime":1670573140813,"results":"91","hashOfConfig":"55"},{"size":2778,"mtime":1671091341108,"results":"92","hashOfConfig":"55"},{"size":734,"mtime":1671339755203,"results":"93","hashOfConfig":"55"},{"size":2947,"mtime":1670887042247,"results":"94","hashOfConfig":"55"},{"size":3810,"mtime":1671339755203,"results":"95","hashOfConfig":"55"},{"size":8281,"mtime":1671092068941,"results":"96","hashOfConfig":"55"},{"size":8364,"mtime":1671092029162,"results":"97","hashOfConfig":"55"},{"size":1176,"mtime":1671091153002,"results":"98","hashOfConfig":"55"},{"size":2859,"mtime":1671091353089,"results":"99","hashOfConfig":"55"},{"size":704,"mtime":1671090891060,"results":"100","hashOfConfig":"55"},{"size":1333,"mtime":1669660204873,"results":"101","hashOfConfig":"55"},{"size":3919,"mtime":1671091368500,"results":"102","hashOfConfig":"55"},{"size":2015,"mtime":1671090982146,"results":"103","hashOfConfig":"55"},{"size":8402,"mtime":1671339755203,"results":"104","hashOfConfig":"55"},{"size":3142,"mtime":1671091311551,"results":"105","hashOfConfig":"55"},{"size":2957,"mtime":1671091282528,"results":"106","hashOfConfig":"55"},{"size":3358,"mtime":1671091954143,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"okpiiz",{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/index.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/reportWebVitals.ts",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/App.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/AppRouter.tsx",["282","283","284"],[],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\n\nimport HomeUnanswered from \"./pages/home/HomeUnanswered\";\nimport UserInfo from \"./pages/mypage/UserInfo\";\nimport HomeAnswered from \"./pages/home/HomeAnswered\";\nimport HomeCollection from \"./pages/home/HomeCollection\";\nimport HomeTrashcan from \"./pages/home/HomeTrashcan\";\n\nimport QuestionUnanswered from \"./pages/question/QuestionUnanswered\";\nimport Login from \"./pages/auth/Login\";\nimport Join from \"./pages/auth/Join\";\nimport EditPassword from \"./pages/mypage/EditPassword\";\nimport AnswerCompletedPage from \"./pages/question/AnswerCompletedPage\";\nimport QuestionAnswered from \"./pages/question/QuestionAnswered\";\nimport UserHome from \"./pages/anony/UserHome\";\nimport DeleteAccount from \"./pages/mypage/DeleteAccount\";\nimport QuestionAnony from \"./pages/anony/QuestionAnony\";\nimport Logout from \"./pages/auth/Logout\";\nimport Oauth from \"./pages/auth/Oauth\";\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\nimport isLogin from \"./utils/isLogin\";\nimport EditUserRingcardName from \"./pages/mypage/EditUserRingcardName\";\nimport EditUserEmail from \"./pages/mypage/EditUserEmail\";\nimport FindPassword from \"./pages/auth/FindPassword\";\nimport Oauth2 from \"./pages/auth/Oauth2\";\nimport Oauth2Step3 from \"./pages/auth/Oauth2Step3\";\nimport EditEmailAlert from \"./pages/mypage/EditEmailAlert\";\nimport SuggestionPage from \"./pages/suggestion/SuggestionPage\";\n\nconst AppRouter = () => {\n\treturn (\n\t\t<>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"\" element={<Login />} />\n\t\t\t\t\t<Route path=\"/\" element={<Login />} />\n\t\t\t\t\t<Route path=\"/loginForm\" element={<Login />} />\n\t\t\t\t\t<Route path=\"/logout\" element={<Logout />} />\n\t\t\t\t\t<Route path=\"/joinForm\" element={<Join />} />\n\t\t\t\t\t<Route path=\"/findPassword\" element={<FindPassword />} />\n\t\t\t\t\t<Route path=\"/userHome/:userName\" element={<UserHome />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/question/:questionId/anony\"\n\t\t\t\t\t\telement={<QuestionAnony />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/oauth2\"element={<Oauth2 />}/>\n\t\t\t\t\t<Route path=\"/login/oauth2/code/twitter\"element={<Oauth2Step3 />}/>\n\t\t\t\t\t<Route path=\"/userHome/:userName\" element={<UserHome />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/home/unanswered\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<HomeUnanswered />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/home/answered\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<HomeAnswered />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/home/trashcan\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<HomeTrashcan />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/home/collection\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<HomeCollection />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/question/:questionId/unanswered/user\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<QuestionUnanswered />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/question/:questionId/edit/user\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<QuestionAnswered />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/question/:questionId/completed/user\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<AnswerCompletedPage />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/mypage/info\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<UserInfo />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/mypage/info/edit/userRingcardName\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<EditUserRingcardName />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/mypage/edit/password\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<EditPassword />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/mypage/info/edit/userEmail\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<EditUserEmail />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/mypage/info/edit/emailAlert\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<EditEmailAlert />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/mypage/delete/account\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<DeleteAccount />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/suggestion\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\n\t\t\t\t\t\t\t\tcomponent={<SuggestionPage />}\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\n\t\t\t\t</Routes>\n\t\t\t</BrowserRouter>\n\t\t</>\n\t);\n};\nexport default AppRouter;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/utils/isLogin.ts",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeUnanswered.tsx",["285"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/layout/layout.css\";\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/atoms/Navigation\";\nimport QuestionNoteList from \"../../components/QuestionNote/QuestionNoteList\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst HomeUnanswered = () => {\n\tconst [userName, setUserName] = useState<String>();\n\n\tconst [searchParams] = useSearchParams();\n\tconst page = searchParams.get(\"page\");\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\n\tconst [totalPages, setTotalPages] = useState<number>();\n\tconst [pageNumber, setPageNumber] = useState(0);\n\tconst pageAddress = \"unanswered\";\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\n\t\t\t.then((res) => {\n\t\t\t\tsetUserName(res.data.userName);\n\t\t\t\tsetQuestionList(res.data.questions.content);\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\n\t\t\t\tsetPageNumber(res.data.questions.number);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header userName={userName} />\n\t\t\t<Navigation\n\t\t\t\tpage={page}\n\t\t\t\tpageAddress={pageAddress}\n\t\t\t\ttotalPages={totalPages}\n\t\t\t\tpageNumber={pageNumber}\n\t\t\t/>\n\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<QuestionNoteList questionList={questionList} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HomeUnanswered;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeCollection.tsx",["286"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/layout/layout.css\";\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/atoms/Navigation\";\nimport QuestionNoteList from \"../../components/QuestionNote/QuestionNoteList\";\nimport { useSearchParams } from \"react-router-dom\";\n\nfunction HomeCollection() {\n\tconst [userName, setUserName] = useState<String>();\n\n\tconst [searchParams] = useSearchParams();\n\tconst page = searchParams.get(\"page\");\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\n\tconst [totalPages, setTotalPages] = useState<number>();\n\tconst [pageNumber, setPageNumber] = useState(0);\n\tconst pageAddress = \"collection\";\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\n\t\t\t.then((res) => {\n\t\t\t\tsetUserName(res.data.userName);\n\t\t\t\tsetQuestionList(res.data.questions.content);\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\n\t\t\t\tsetPageNumber(res.data.questions.number);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header userName={userName} />\n\t\t\t<Navigation\n\t\t\t\tpage={page}\n\t\t\t\tpageAddress={pageAddress}\n\t\t\t\ttotalPages={totalPages}\n\t\t\t\tpageNumber={pageNumber}\n\t\t\t/>\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<QuestionNoteList questionList={questionList} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default HomeCollection;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeAnswered.tsx",["287"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/layout/layout.css\";\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/atoms/Navigation\";\nimport QuestionNoteList from \"../../components/QuestionNote/QuestionNoteList\";\nimport { useSearchParams } from \"react-router-dom\";\n\nfunction HomeAnswered() {\n\tconst [userName, setUserName] = useState<String>();\n\n\tconst [searchParams] = useSearchParams();\n\tconst page = searchParams.get(\"page\");\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\n\tconst [totalPages, setTotalPages] = useState<number>();\n\tconst [pageNumber, setPageNumber] = useState(0);\n\tconst pageAddress = \"answered\";\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\n\t\t\t.then((res) => {\n\t\t\t\tsetUserName(res.data.userName);\n\t\t\t\tsetQuestionList(res.data.questions.content);\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\n\t\t\t\tsetPageNumber(res.data.questions.number);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header userName={userName} />\n\t\t\t<Navigation\n\t\t\t\tpage={page}\n\t\t\t\tpageAddress={pageAddress}\n\t\t\t\ttotalPages={totalPages}\n\t\t\t\tpageNumber={pageNumber}\n\t\t\t/>\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<QuestionNoteList questionList={questionList} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default HomeAnswered;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/UserInfo.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/DeleteAccount.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditEmailAlert.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/home/HomeTrashcan.tsx",["288"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/layout/layout.css\";\nimport \"../../styles/home.css\";\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/atoms/Navigation\";\nimport QuestionNoteList from \"../../components/QuestionNote/QuestionNoteList\";\nimport { useSearchParams } from \"react-router-dom\";\nimport ClearTrashcanModal from \"../../components/Modal/ClearTrashcanModal\";\n\nfunction HomeUnanswered() {\n\tconst [searchParams] = useSearchParams();\n\tconst page = searchParams.get(\"page\");\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\n\tconst [totalPages, setTotalPages] = useState<number>();\n\tconst [pageNumber, setPageNumber] = useState(0);\n\tconst [userName, setUserName] = useState<String>();\n\n\tconst pageAddress = \"trashcan\";\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\n\t\t\t.then((res) => {\n\t\t\t\tsetUserName(res.data.userName);\n\t\t\t\tsetQuestionList(res.data.questions.content);\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\n\t\t\t\tsetPageNumber(res.data.questions.number);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t}, []);\n\n\t// 모달창 노출 여부 state\n\tconst [showReq, setShowReq] = useState<boolean>(false);\n\n\tfunction openReq() {\n\t\tsetShowReq(!showReq);\n\t}\n\n\tfunction closeReq() {\n\t\tsetShowReq(!showReq);\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header userName={userName} />\n\t\t\t<Navigation\n\t\t\t\tpage={page}\n\t\t\t\tpageAddress={pageAddress}\n\t\t\t\ttotalPages={totalPages}\n\t\t\t\tpageNumber={pageNumber}\n\t\t\t/>\n\t\t\t<ClearTrashcanModal open={showReq} close={closeReq} />\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<QuestionNoteList questionList={questionList} />\n\t\t\t</div>\n\n\t\t\t<div className=\"clear-trashcan\">\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"/buttons/home-trashcan-tab-active-button.svg\"\n\t\t\t\t\tonClick={openReq}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"clear-trashcan-text\">비우기</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default HomeUnanswered;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditPassword.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditUserRingcardName.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/mypage/EditUserEmail.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/FindPassword.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Oauth2Step3.tsx",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],[],"import axios from \"axios\";\r\nimport React, {  useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useCookies } from \"react-cookie\";\r\n// import { setCookie } from \"./Cookie\";\r\n\r\nconst Oauth2Step3=()=>{\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies(['accessToken']);\r\n  \r\n  type ResponseList = {\r\n\t\tloginFirstTwitter: boolean;\r\n    usernameTwitter: String;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tloginFirstTwitter: false,\r\n    usernameTwitter: \"\",\r\n\t});\r\n\r\n  const { Client, auth } = require(\"twitter-api-sdk\");\r\n\r\n  const [accessToken, setAccessToken] = useState();\r\n  const [userMe, setUserMe] = useState<any>([]);\r\n\r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  const CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst ACCESS_TOKEN=process.env.REACT_APP_ACCESS_TOKEN;\r\n\tconst ACCESS_TOKEN_SECRET=process.env.REACT_APP_ACCESS_TOKEN_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\tconst BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  \r\n  // const TWITTER_STATE = \"twitter-increaser-state\";\r\n  const TWITTER_STATE = \"state\";\r\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\r\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\r\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\",\"tweet.write\"].join(\" \");\r\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const state = searchParams.get(\"state\");\r\n  const code = searchParams.get(\"code\");\r\n  \r\n  const authClient = new auth.OAuth2User({\r\n    client_id: CLIENT_ID,\r\n    client_secret: CLIENT_SECRET,\r\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\r\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"],\r\n  });\r\n\r\n  const client = new Client(authClient);\r\n\r\n  const params = {\r\n  expansions: \"author_id\",\r\n  \"user.fields\": [\"username\", \"created_at\"],\r\n  \"tweet.fields\": [\"geo\", \"entities\", \"context_annotations\"],\r\n};\r\n\r\nfunction BtnToTwitterLogin(){\r\n\tfunction handleClick(e: any){\r\n\r\n    const createFormParams = (params:any) => {\r\n        return Object.keys(params)\r\n            .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\r\n            .join('&')\r\n    }\r\n\r\n  if(code&&CLIENT_ID){\r\n    const data = qs.stringify({\r\n          code: code,\r\n          grant_type: 'authorization_code',\r\n          client_id: CLIENT_ID,\r\n          redirect_uri: 'http://localhost:3000/login/oauth2/code/twitter',\r\n          code_verifier: 'challenge',\r\n        });\r\n    \r\n    axios({\r\n    method: 'post',\r\n    url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/oauth2/token',\r\n\r\n    data: data,\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    }\r\n\r\n    }).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      console.log(res.data.access_token);\r\n      setAccessToken(res.data.access_token);\r\n\r\n      // setCookie('accessToken', res.data.access_token, {\r\n      //   httpOnly: true,\r\n      // });\r\n      setCookie('accessToken', {accessToken: res.data.access_token}, {path: '/'});\r\n\r\n      // const options = {\r\n      //   httpOnly: true,\r\n      //   // sameSite: 'none',\r\n      //   // secure: true,\r\n      //   // domain: 'localhost',\r\n      //   // maxAge: config.jwt.expiresInSec * 1000,\r\n      // };\r\n      // res.cookie('accessToken', res.data.access_token, options);\r\n      // alert(\"생성이 완료되었습니다.\");\r\n  })}}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n        TwitterLogin\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  function BtnToCreateTweet(){\r\n\t\tfunction handleClick(e: any){\r\n      const endpointURL = `https://api.twitter.com/2/tweets`;\r\n      const data = {\r\n        text: \"Hello Worldsss!!!!!!!!\"\r\n      };\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n        data: data,\r\n        headers: {\r\n          'Authorization': 'Bearer ' + accessToken,\r\n        }\r\n\r\n      }).then((res) => {\r\n        console.log(res);\r\n        // alert(\"생성이 완료되었습니다.\");\r\n        });\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n        CreateTweet\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  const BtnToUserMe =()=>{\r\n\t\t// function handleClick(e: any){\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/me',\r\n\r\n      // data: data,\r\n      headers: {\r\n        'Authorization': 'Bearer ' +accessToken,\r\n      }\r\n    }).then(async(res) => {\r\n      console.log(res);\r\n      console.log(res.data.data);\r\n      setUserMe(res.data.data);\r\n      await new Promise((r) => setTimeout(r, 100));\r\n      await axios.post('/login/user/me', res.data.data)\r\n      .then(async(res) => {\r\n        console.log(res.data);\r\n        console.log(res.data.usernameTwitter);\r\n        // console.log(userMe);\r\n        // const data = qs.stringify({\r\n        //   code: code,\r\n        //   grant_type: 'authorization_code',\r\n        //   client_id: CLIENT_ID,\r\n        //   redirect_uri: 'http://localhost:3000/login/oauth2/code/twitter',\r\n        //   code_verifier: 'challenge',\r\n        // });\r\n\r\n        const data = {username : res.data.usernameTwitter, password : \"twitterTemp\"}\r\n        await axios\r\n          .post(\"/login\", data, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            console.log(\"hello there replace to unanswered\")\r\n            window.location.replace(\"/home/unanswered\");\r\n          })\r\n          .catch(function (error) {\r\n            \r\n            console.log(error.config);\r\n          });\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n      });\r\n\t\t// }\r\n\t\t// return (\r\n\t\t// \t<button onClick={handleClick}>\r\n    //     UserMe\r\n\t\t// \t</button>\r\n\t\t// );\r\n\t};\r\n\r\n  // const onSubmit = async (data: any) => {\r\n\t// \tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t// \t// alert(JSON.stringify(data));\r\n\t// \tconsole.log(data);\r\n\r\n\t// \tawait axios.post('/login/user/me', data).then((res) => {\r\n\t// \t\t\t// setResponse(res.data);\r\n\t// \t\t\t// console.log(res.data);\r\n\t// \t\t\t// setSubmitted(true);\r\n  //       console.log(res);\r\n  //       // setResponse(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch(function (error) {\r\n\t// \t\t\tconsole.log(error.config);\r\n\t// \t\t});\r\n\r\n    // axios({\r\n    //     method: 'post',\r\n    //     url: 'https://localhost:8080/login/user/me',\r\n    //     headers :{'Content-Type' : 'application/json',\r\n    //               'Access-Control-Allow-Origin' : '*',\r\n    //               'Access-Control-Allow-Headers' : '*',\r\n    //               'Access-Control-Allow-Methods': 'GET, POST'\r\n    //             },\r\n    //     data: data,\r\n    //   });\r\n\t\r\n\r\n  const {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n  \r\n  return (\r\n    <div>\r\n    <BtnToTwitterLogin/>\r\n    <BtnToCreateTweet/>\r\n    <form onSubmit={handleSubmit(BtnToUserMe)}>\r\n      <button type=\"submit\"> UserMe\t</button>\r\n    </form>\r\n\r\n    {/* <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n\t\t\t\t<input\r\n          value={userMe.id}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"id\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n\r\n        <input\r\n          value={userMe.name}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"name\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n\r\n        <input\r\n          value={userMe.username}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"username\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n        \r\n        <button type=\"submit\">\r\n          <div>저장하기</div>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n    </form> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Oauth2Step3;","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Join.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Login.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Oauth2.tsx",["313","314","315","316","317","318","319","320","321","322","323"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst Oauth2=()=>{\r\n  const { Client, auth } = require(\"twitter-api-sdk\");\r\n  \r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  const CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst ACCESS_TOKEN=process.env.REACT_APP_ACCESS_TOKEN;\r\n\tconst ACCESS_TOKEN_SECRET=process.env.REACT_APP_ACCESS_TOKEN_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\tconst BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  const authClient = new auth.OAuth2User({\r\n    client_id: CLIENT_ID,\r\n    client_secret: CLIENT_SECRET,\r\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\r\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"],\r\n  });\r\n\r\n  const client = new Client(authClient);\r\n  const STATE = \"my-state\";\r\n\r\n  //Get authorization\r\n  const authUrl = authClient.generateAuthURL({\r\n    state: STATE,\r\n    code_challenge: \"challenge\",\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const TWITTER_STATE = \"twitter-increaser-state\";\r\n  const TWITTER_STATE = \"state\";\r\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\r\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\r\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\"].join(\" \");\r\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\r\n\r\n  \r\n  useEffect(() => {\r\n  console.log(authUrl);\r\n  \r\n  //   const getURLWithQueryParams = (\r\n  //   baseUrl: string,\r\n  //   params: Record<string, any>\r\n  // ) => {\r\n  //   const query = Object.entries(params)\r\n  //     .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n  //     .join(\"&\")\r\n\r\n  //   return `${baseUrl}?${query}`\r\n  // }\r\n  // const getTwitterOAuthUrl = (redirectUri: string) =>\r\n  // getURLWithQueryParams(TWITTER_AUTH_URL, {\r\n  //   response_type: \"code\",\r\n  //   client_id: CLIENT_ID,\r\n  //   redirect_uri: redirectUri,\r\n  //   scope: TWITTER_SCOPE,\r\n  //   state: TWITTER_STATE,\r\n  //   code_challenge: TWITTER_CODE_CHALLENGE,\r\n  //   code_challenge_method: \"plain\",\r\n  // })\r\n  //   console.log(getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\"));\r\n  //   window.location.href=getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\");\r\n    \r\n\t}, []);\r\n  \r\n  \r\n  \r\n  \r\n  // const authHandler = (err:any, data:any) => {\r\n  //   console.log(err, data);\r\n  // };\r\n\r\n  // const [user, setUser] = useState<any>([]);\r\n  \r\n  // useEffect(() => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/oauth2\")\r\n\t// \t\t.then((res) => {\r\n\t// \t\t\tsetUser(res.data);\r\n\t// \t\t\tconsole.log(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err.config);\r\n\t// \t\t\tconsole.log(err.response.data);\r\n\t// \t\t});\r\n\t// }, []);\r\n\r\n\r\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\r\n\r\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n  // oauth2-bearer.ts \r\n  // if(BEARER_TOKEN){\r\n  //   async function Oauth2Bearer() {\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  //   }\r\n  // }\r\n\r\n  // if(BEARER_TOKEN){\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  // }\r\n\r\n  // const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  // const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  // function TestOauth(){\r\n  //   if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\r\n  //     authCallback={authHandler}\r\n  //     consumerKey={CONSUMER_KEY}\r\n  //     consumerSecret={CONSUMER_SECRET}\r\n  //   />)}\r\n  //   else{\r\n  //     return(<div></div>)\r\n  //   }\r\n  // }\r\n  // return (<p>1<GettingATweet/></p>)\r\n\r\n  // const authHandler = (err:any, data:any) => {\r\n  //   console.log(err, data);\r\n  // };\r\n\r\n\r\n  function BtnToTwitterLogin(){\r\n\t\tfunction handleClick(e: any){\r\n\tconst getURLWithQueryParams = (\r\n    baseUrl: string,\r\n    params: Record<string, any>\r\n  ) => {\r\n    const query = Object.entries(params)\r\n      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n      .join(\"&\")\r\n\r\n    return `${baseUrl}?${query}`\r\n  }\r\n  const getTwitterOAuthUrl = (redirectUri: string) =>\r\n  getURLWithQueryParams(TWITTER_AUTH_URL, {\r\n    response_type: \"code\",\r\n    client_id: CLIENT_ID,\r\n    redirect_uri: redirectUri,\r\n    scope: TWITTER_SCOPE,\r\n    state: TWITTER_STATE,\r\n    code_challenge: TWITTER_CODE_CHALLENGE,\r\n    code_challenge_method: \"plain\",\r\n  })\r\n\r\n  // window.location.href=getTwitterOAuthUrl(\"http://localhost:3000/login/oauth2/code/twitter\");\r\n  window.location.href=authUrl;\r\n    \r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  // // capture img start\r\n  // const printRef = useRef<HTMLInputElement>(null);\r\n\r\n  // const handleDownloadImage = async () => {\r\n  //   const element:any = printRef.current;\r\n  //   // const canvas = await html2canvas(element);\r\n  //   const canvas = await html2canvas( element, { logging: true,  allowTaint: false, useCORS: true } )\r\n\r\n  //   const data = canvas.toDataURL('image/jpg');\r\n  //   const link = document.createElement('a');\r\n\r\n  //   if (typeof link.download === 'string') {\r\n  //     link.href = data;\r\n  //     link.download = 'image.jpg';\r\n  //     console.log(\"link.download1 : \"+ link.download);\r\n\r\n  //     document.body.appendChild(link);\r\n  //     link.click();\r\n  //     document.body.removeChild(link);\r\n  //   } else {\r\n  //     console.log(\"link.download2 : \"+ link.download);\r\n  //     window.open(data);\r\n  //   }\r\n  // };\r\n  // // capture img fin\r\n\r\n  // capture img start2\r\n  const printRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleDownloadImage = async () => {\r\n    const element:any = printRef.current;\r\n    const canvas = await html2canvas(element, {\r\n      backgroundColor: \"none\",\r\n      logging: true,\r\n      useCORS: true //to enable cross origin perms\r\n    });\r\n\r\n    const data = canvas.toDataURL(\"image/jpg\");\r\n    const link = document.createElement(\"a\");\r\n\r\n    if (typeof link.download === \"string\") {\r\n      link.href = data;\r\n      console.log(\"\");\r\n      link.download = \"image.jpg\";\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      window.open(data);\r\n    }\r\n  };\r\n  // capture img fin 2\r\n\r\n  return (\r\n    // <TestOauth/>\r\n    // <TwitterLogin\r\n    //       authCallback={authHandler}\r\n    //       consumerKey={\"S0FVySANFNnlISMw5D1vSE8P0\"}\r\n    //       consumerSecret={\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\"}\r\n    //       callbackUrl={\"https://alexandrtovmach.github.io/react-twitter-login/\"}\r\n    //       buttonTheme={\"dark\"}\r\n    //     \t/>\r\n    <div>\r\n    <BtnToTwitterLogin/>\r\n\r\n    \t<div>\r\n\t\t\t\t<button type=\"button\" onClick={handleDownloadImage}>\r\n\t\t\t\t\tDownload as Image\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div>I will not be in the image.</div>\r\n\t\t\t\t<div ref={printRef}>\r\n          <div>hello</div>\r\n          <div>hello1</div>\r\n          <img src=\"http://graphics8.nytimes.com/images/2012/02/19/us/19whitney-span/19whitney-span-articleLarge.jpg\"></img>\r\n          I will be in the image.</div>\r\n    \t</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Oauth2;","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/auth/Logout.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/question/QuestionUnanswered.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/question/QuestionAnswered.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/question/AnswerCompletedPage.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/suggestion/SuggestionPage.tsx",["324"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport HeaderNoProfile from \"../../components/Header/HeaderNoProfile\";\nimport Toastify from \"../../components/utils/Toast\";\nimport { useForm } from \"react-hook-form\";\n\nimport \"../../styles/suggestionPage.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntype FormValues = {\n\tsenderUserId: any;\n\tsenderUsername: any;\n\tcontents: string;\n};\n\nfunction SuggestionPage() {\n\tconst [senderUserRingcardName, setSenderUserRingcardName] =\n\t\tuseState<string>();\n\tconst [senderUserId, setSenderUserId] = useState<number>();\n\tconst [senderUsername, setSenderUsername] = useState<string>();\n\n\tfunction setUserInfos() {\n\t\tconst senderUserIdBox = document.getElementById(\"senderUserId\");\n\t\tif (!!senderUserIdBox) {\n\t\t\tsenderUserIdBox.innerText = String(senderUserId);\n\t\t}\n\t\tconst senderUsernameBox = document.getElementById(\"senderUsername\");\n\t\tif (!!senderUsernameBox) {\n\t\t\tsenderUsernameBox.innerText = String(senderUsername);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/suggestion\")\n\t\t\t.then((res) => {\n\t\t\t\tsetSenderUserRingcardName(res.data.senderUserRingcardName);\n\t\t\t\tsetSenderUserId(res.data.senderUserId);\n\t\t\t\tsetSenderUsername(res.data.senderUsername);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\n\t\tsetUserInfos();\n\t}, []);\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\t\tawait axios\n\t\t\t.post(\"/suggestion\", data)\n\t\t\t.then((res) => {\n\n\t\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\"toastText\",\n\t\t\t\t\t\"건의사항이 안전하게 전달되었습니다.\"\n\t\t\t\t);\n\t\t\t\twindow.location.reload();\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t};\n\n\t// 유저 입력 값을 넣을 변수\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\n\t// 줄 수를 계산해서 저장할 변수\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\n\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\n\tconst checkItemChangeHandler = (event: any) => {\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n\t\tsetCheckItemContent(event.target.value);\n\t};\n\n\tfunction checkLengthHandler(event: any) {\n\t\tvar text = event.target.value;\n\t\tvar test_length = text.length;\n\n\t\t//최대 글자수\n\t\tvar max_length = 50000;\n\n\t\tif (test_length > max_length) {\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\n\t\t\ttext = text.substr(0, max_length);\n\t\t\tevent.target.value = text;\n\t\t\tevent.target.focus();\n\t\t}\n\t}\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tsetValue,\n\t} = useForm<FormValues>();\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<HeaderNoProfile />\n\n\t\t\t<div className=\"contents-container block\">\n\t\t\t\t<div className=\"SuggestionPage-profile-box\">\n\t\t\t\t\t<img src=\"/logo/Ringca_logo_background.png\" alt=\"\" />\n\t\t\t\t\t<div className=\"SuggestionPage-profile-username\">링카 운영진</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"SuggestionPage-SendQuestionForm-container\">\n\t\t\t\t\t<div className=\"SuggestionPage-information\">\n\t\t\t\t\t\t링카 운영진에게 건의할 사항이 있으시면 여기에 써서 보내주세요!\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t링카 운영진에게 전달됩니다!\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"SendQuestionFormUserHome-container\">\n\t\t\t\t\t\t<Toastify />\n\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName=\"SendQuestionFormUserHome-question-form\"\n\t\t\t\t\t\t\tonSubmit={handleSubmit(onSubmit)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t{...register(\"senderUserId\")}\n\t\t\t\t\t\t\t\tid=\"senderUserId\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t{...register(\"senderUsername\")}\n\t\t\t\t\t\t\t\tid=\"senderUsername\"\n\t\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\n\t\t\t\t\t\t\t\tvalue={senderUserRingcardName}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"SendQuestionFormSuggestionpage-sender\">\n\t\t\t\t\t\t\t\t발신인 : {senderUserRingcardName}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"SendQuestionFormUserHome-questionForm-box\">\n\t\t\t\t\t\t\t\t<div className=\"SendQuestionFormUserHome-questionForm-contents-box\">\n\t\t\t\t\t\t\t\t\t<span className=\"SendQuestionFormSuggestionpage-cursur-bar\">\n\t\t\t\t\t\t\t\t\t\t|\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tid=\"questionAdd\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionFormSuggestionpage-questionForm-textarea\"\n\t\t\t\t\t\t\t\t\t\tvalue={checkItemContent}\n\t\t\t\t\t\t\t\t\t\tonInput={checkItemChangeHandler}\n\t\t\t\t\t\t\t\t\t\tonKeyUp={checkLengthHandler}\n\t\t\t\t\t\t\t\t\t\t{...register(\"contents\")}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tminHeight: \"300px\",\n\t\t\t\t\t\t\t\t\t\t\theight: (textareaHeight + 1) * 20 + \"px\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"건의사항을 써주세요\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<hr className=\"SendQuestionFormSuggestionPage-hr\" />\n\t\t\t\t\t\t\t<div className=\"SendQuestionFormSuggestionPage-footer\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionFormSuggestionPage-send-question-btn\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetValue(\"senderUserId\", senderUserId);\n\t\t\t\t\t\t\t\t\t\tsetValue(\"senderUsername\", senderUsername);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<img src=\"/buttons/send-question-btn.svg\" alt=\"\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SuggestionPage;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/anony/QuestionAnony.tsx",["325"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AnsweredQuestionNote from \"../../components/QuestionNote/AnsweredQuestionNote\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport QuestionNoteListAnony from \"../../components/QuestionNote/QuestionNoteListAnony\";\r\nimport SendQuestionForm from \"../../components/SendQuestionForm/SendQuestionFormQuestionAnony\";\r\nimport { IAnswer, IQuestion } from \"../../components/types\";\r\n\r\nimport \"../../styles/questionAnony.css\";\r\n\r\nfunction QuestionAnony() {\r\n\tconst params = useParams();\r\n\tconst questionId = params.questionId;\r\n\tconst [userName, setUserName] = useState<String>();\r\n\r\n\tconst [question, setQuestion] = useState<any>([]);\r\n\tconst [answer, setAnswer] = useState<any>([]);\r\n\r\n\tconst [map, setMap] = useState<[IQuestion, IAnswer][]>();\r\n\r\n\tconst [totalPages, setTotalPages] = useState<Number>(0);\r\n\tconst [pageNumber, setPageNumber] = useState<Number>(0);\r\n\t// const { page } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/question/\" + questionId + \"/anony/0\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetQuestion(res.data.question);\r\n\t\t\t\tsetAnswer(res.data.answer);\r\n\t\t\t\tsetMap(res.data.map);\r\n\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tfunction BtnToViewMore() {\r\n\t\tfunction handleClick(e: any) {\r\n\t\t\tconst newPage = pageNumber;\r\n\t\t\tif (totalPages === undefined) {\r\n\t\t\t} else if (newPage >= totalPages) {\r\n\t\t\t} else {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.get(\"/question/\" + questionId + \"/anony/\" + newPage)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconst b: [[IQuestion, IAnswer]] = res.data.map;\r\n\t\t\t\t\t\tlet mapTemp = [];\r\n\t\t\t\t\t\tif (map) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < map.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(map[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (b) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < b.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(b[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (mapTemp) {\r\n\t\t\t\t\t\t\tsetMap(mapTemp);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\r\n\t\t\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t\tconsole.log(error.config);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{map ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{map.length > 0 ? (\r\n\t\t\t\t\t\t\t<div className=\"QuestionAnony-viewMore-btn-box\">\r\n\t\t\t\t\t\t\t\t{totalPages === pageNumber ? undefined : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"QuestionAnony-viewMore-btn-container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"QuestionAnony-viewMore-btn-section\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"QuestionAnony-viewMore-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t+ 더보기\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t<div className=\"QuestionAnony-for-not-overflowing\">\r\n\t\t\t\t<img src=\"/background-img/background.png\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"contents-container QuestionAnony-container\">\r\n\t\t\t\t<div className=\"QuestionAnony-the-question-container\">\r\n\t\t\t\t\t<AnsweredQuestionNote question={question} answer={answer} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"QuestionAnony-SendQuestionForm-container\">\r\n\t\t\t\t\t<SendQuestionForm />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"QuestionAnony-hr-box\">\r\n\t\t\t\t\t<hr className=\"QuestionAnony-hr\" />\r\n\r\n\t\t\t\t\t<div className=\"QuestionAnony-hr-text\">다른 응답된 질문들</div>\r\n\t\t\t\t\t<hr className=\"QuestionAnony-hr\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{map && questionId ? (\r\n\t\t\t\t\t\t<QuestionNoteListAnony questionId={questionId} map={map} />\r\n\t\t\t\t\t) : undefined}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<BtnToViewMore />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionAnony;\r\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/pages/anony/UserHome.tsx",["326"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport QuestionNoteListAnony from \"../../components/QuestionNote/QuestionNoteListAnony\";\nimport SendQuestionForm from \"../../components/SendQuestionForm/SendQuestionFormUserHome\";\nimport \"../../styles/layout/layout.css\";\nimport \"../../styles/userHome.css\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { IAnswer, IQuestion } from \"../../components/types\";\nimport HeaderNoProfile from \"../../components/Header/HeaderNoProfile\";\n\nfunction UserHome() {\n\tconst params = useParams();\n\tconst userName = String(params.userName);\n\tconst [userRingcardName, setUseRingcardrName] = useState<String>();\n\n\tconst [map, setMap] = useState<[IQuestion, IAnswer][]>();\n\n\tconst [totalPages, setTotalPages] = useState<Number>(0);\n\tconst [pageNumber, setPageNumber] = useState<Number>(0);\n\tconst questionId = \"dummy\";\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"/userHome/\" + userName + \"/0\")\n\t\t\t.then((res) => {\n\t\t\t\tsetUseRingcardrName(res.data.userRingcardName);\n\t\t\t\tsetMap(res.data.map);\n\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\n\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t}, []);\n\n\tfunction BtnToViewMore() {\n\t\tfunction handleClick(e: any) {\n\t\t\tconst newPage = pageNumber;\n\t\t\tif (totalPages === undefined) {\n\t\t\t} else if (newPage >= totalPages) {\n\t\t\t} else {\n\t\t\t\taxios\n\t\t\t\t\t.get(\"/userHome/\" + userName + \"/\" + newPage)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconst b: [[IQuestion, IAnswer]] = res.data.map;\n\t\t\t\t\t\tlet mapTemp = [];\n\t\t\t\t\t\tif (map) {\n\t\t\t\t\t\t\tfor (let idx = 0; idx < map.length; idx++) {\n\t\t\t\t\t\t\t\tmapTemp.push(map[idx]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (b) {\n\t\t\t\t\t\t\tfor (let idx = 0; idx < b.length; idx++) {\n\t\t\t\t\t\t\t\tmapTemp.push(b[idx]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (mapTemp) {\n\t\t\t\t\t\t\tsetMap(mapTemp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\n\t\t\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (error) {\n\t\t\t\t\t\tconsole.log(error.config);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{map ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{map.length > 0 ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{totalPages === pageNumber ? undefined : (\n\t\t\t\t\t\t\t\t\t<div className=\"UserHome-viewMore-btn-container\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"UserHome-viewMore-btn-section\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"UserHome-viewMore-btn\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t+ 더보기\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<HeaderNoProfile />\n\n\t\t\t<div className=\"contents-container block\">\n\t\t\t\t<div className=\"UserHome-profile-box\">\n\t\t\t\t\t<img src=\"/profile-imgs/oring_1.png\" alt=\"\" />\n\t\t\t\t\t<div className=\"UserHome-profile-username\">{userRingcardName}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"UserHome-SendQuestionForm-container\">\n\t\t\t\t\t<SendQuestionForm userName={userName} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"UserHome-questionlist-box\">\n\t\t\t\t\t<div className=\"UserHome-down-background-img\">\n\t\t\t\t\t\t<div style={{ height: \"30px\" }}></div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{map ? (\n\t\t\t\t\t\t\t\t<QuestionNoteListAnony questionId={questionId} map={map} />\n\t\t\t\t\t\t\t) : undefined}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<BtnToViewMore />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default UserHome;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/auth/PrivateRoute.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/atoms/UserProfile.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/atoms/Navigation.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/HeaderNoProfile.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/Header.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/utils/Toast.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteList.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/HeaderRingcaShort.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/ClearTrashcanModal.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Header/HeaderRingca.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/AnsweredQuestionNote.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteListAnony.tsx",["327"],[],"import { IAnswer, IQuestion } from \"../types\";\r\n\r\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\r\nimport React from \"react\";\r\n\r\nexport interface Props {\r\n\tmap: [IQuestion, IAnswer][];\r\n\tquestionId: string;\r\n}\r\n\r\nfunction QuestionNoteList(props: Props) {\r\n\tconst QandAmap = props.map;\r\n\tconst questionId = Number(props.questionId);\r\n\r\n\treturn (\r\n\t\t// questionId와 겹치는 질문 리스트에서 제거\r\n\t\t<div>\r\n\t\t\t{QandAmap.map((QA, idx) => (\r\n\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t{questionId != QA[0].id ? (\r\n\t\t\t\t\t\t<div className=\"question-notes-container\">\r\n\t\t\t\t\t\t\t<QuestionNoteAnony idx={idx} question={QA[0]} answer={QA[1]} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionNoteList;\r\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/EditAnswerFormQuestionNote.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/AnswerFormQuestionNote.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/SendQuestionForm/SendQuestionFormUserHome.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/SendQuestionForm/SendQuestionFormQuestionAnony.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/MenuModal.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNote.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/atoms/HyperlinkBox.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/utils/NowDate.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteAnony.tsx",["328"],[],"import { IAnswer, IQuestion } from \"../types\";\nimport \"../../styles/question.css\";\nimport NowDate from \"../utils/NowDate\";\nimport React, { useEffect, useState } from \"react\";\nimport HyperlinkBox from \"../atoms/HyperlinkBox\";\n\nexport interface Props {\n\tidx: number;\n\tquestion: IQuestion;\n\tanswer: IAnswer;\n}\n\nfunction QuestionNoteAnony(props: Props) {\n\tconst idx = props.idx;\n\tconst question = props.question;\n\tconst answer = props.answer;\n\tconst [showAnswer, setShowAnswer] = useState<boolean>(false);\n\n\tconst handleShowAnswerClick = async () => {\n\t\tsetShowAnswer(!showAnswer);\n\t};\n\n\tconst tapePositionList = [\n\t\t\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -5px;\",\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -3.5px; transform: rotate(6deg);\",\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: 10px auto -15px -13px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: 7px auto -30px -10px;\",\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: 6px -8px -10px auto;\",\n\t\t\"width: 100px; height: 28px; transform: rotate(36deg); margin: 10px -13px -10px auto;\",\n\t];\n\n\tconst chosenPosition = tapePositionList[question.tapePosition - 1];\n\n\tconst qIdStr = String(question.id);\n\tconst tapeTypeStr = String(question.tapeType);\n\tconst tapeUrl = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\n\n\tuseEffect(() => {\n\t\tconst eachNote = document.getElementById(qIdStr);\n\t\teachNote?.setAttribute(\"style\", chosenPosition);\n\t});\n\n\tconst qNoteType = question.noteType;\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"each-question-note-box\">\n\t\t\t\t<div className=\"QuestionNote-maskingTape-box\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"QuestionNoteAnony-maskingTape-img\"\n\t\t\t\t\t\tid={qIdStr}\n\t\t\t\t\t\tsrc={tapeUrl}\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"each-question-note-header-edge-img-box\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-top-edge.png\")`,\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"each-question-note-body\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-body.png\")`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"each-note-header\">\n\t\t\t\t\t\t<div className=\"note-profile-pic\">\n\t\t\t\t\t\t\t<img src=\"/profile-imgs/oring_2.png\" alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<NowDate questionUploadTime={question.uploadTime} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <a href=\"/question/<%=question.id%>/anony\" className=\"note-link\"> */}\n\t\t\t\t\t<a href={\"/question/\" + qIdStr + \"/anony\"} className=\"note-link\">\n\t\t\t\t\t\t<div className=\"each-note-content-box\">\n\t\t\t\t\t\t\t<div className=\"each-note-content QuestionNoteAnony-line-limit\">\n\t\t\t\t\t\t\t\t{question.questionContents}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t{question.questionHyperlink == null ||\n\t\t\t\t\tquestion.questionHyperlink === \"\" ? undefined : (\n\t\t\t\t\t\t<div className=\"QuestionNote-note-hyperlink-box\">\n\t\t\t\t\t\t\t<HyperlinkBox hyperlinkContent={question.questionHyperlink} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<hr className=\"note-hr\" />\n\t\t\t\t\t<div className=\"QuestionNoteAnony-note-footer\">\n\t\t\t\t\t\t<div className=\"QuestionNoteAnony-note-footer-btns-container\">\n\t\t\t\t\t\t\t<button onClick={handleShowAnswerClick}>\n\t\t\t\t\t\t\t\t{showAnswer ? (\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\n\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-down-btn.svg\"\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ transform: \"scaleY(-1)\" }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\n\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-down-btn.svg\"\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{showAnswer ? (\n\t\t\t\t\t\t\t<div className=\"QuestionNoteAnony-note-content-answer\">\n\t\t\t\t\t\t\t\t{answer.answerContents}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : undefined}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"QuestionNoteAnony-each-question-note-footer-edge-img-box\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-bottom-edge.png\")`,\n\t\t\t\t\t}}\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default QuestionNoteAnony;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/EditAnswerForm.tsx",[],[],"/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/AnswerNote/AnswerForm.tsx",["329","330","331","332"],[],"import axios from \"axios\";\nimport { useRef, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useForm } from \"react-hook-form\";\nimport \"../../styles/answerQuestionNote.css\";\nimport html2canvas from 'html2canvas';\n\nexport interface Props {\n\tquestionId: number;\n\tquestionContents: string;\n}\n\nfunction AnswerForm(props: Props) {\n\tconst questionId = String(props.questionId);\n\t// 트위터 이미지로 전환할 질문 내용.\n\tconst questionContents = props.questionContents;\n\tconst [answerContents, setAnswerContents] = useState();\n\n\tconst [cookies, setCookie, removeCookie] = useCookies(['accessToken']);\n\n\n\n\tconst onSubmit = async (data: any) => {\n\t\tawait new Promise((r) => setTimeout(r, 100));\n\n\t\t// alert(JSON.stringify(data));\n\t\tconsole.log(data);\n\t\t// 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\n\t\t\n\t\tconsole.log(questionContents);\n\n\t\tawait axios\n\t\t\t.post(\"/question/\" + questionId + \"/unanswered/user\", data)\n\t\t\t.then(async(res) => {\n\t\t\t\tconsole.log(\"posthere\");\n\t\t\t\tconsole.log(data.answerContents);\n\t\t\t\tsetAnswerContents(data.answerContents);\n\t\t\t\t// window.location.href = \"/question/\" + questionId + \"/completed/user\";\n\n\t\t\t\tif(checked){\n\t\t\t\t\tconst tweetData = {\n\t\t\t\t\t\ttext: \"질문 : \" + questionContents + \"\\n답변 : \" + data.answerContents + \" https://m.place.naver.com/restaurant/1720673456/home?entry=ple\"\n\t\t\t\t\t};\n\n\t\t\t\t\t// const tweetDataTest = {\n\t\t\t\t\t// \t\t\t\t\t\"text\": \"Testing, testing...\\n\\nA new way to have a convo with exactly who you want. We’re starting with a small % globally, so keep your 👀 out to see it in action. https://t.co/pV53mvjAVT\",\n\t\t\t\t\t// \t\t\t\t\t\"id\": \"1263145271946551300\",\n\t\t\t\t\t// \t\t\t\t\t\"attachments\": {\n\t\t\t\t\t// \t\t\t\t\t\t\t\"media_keys\": [\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\"13_1263145212760805376\"\n\t\t\t\t\t// \t\t\t\t\t\t\t]\n\t\t\t\t\t// \t\t\t\t\t}\n\t\t\t\t\t// \t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t// const media = \n\t\t\t\t\t// \t\t\t\t{\n\t\t\t\t\t// \t\t\t\t\t\t\t\"duration_ms\": 46947,\n\t\t\t\t\t// \t\t\t\t\t\t\t\"type\": \"video\",\n\t\t\t\t\t// \t\t\t\t\t\t\t\"height\": 1080,\n\t\t\t\t\t// \t\t\t\t\t\t\t\"media_key\": \"13_1263145212760805376\",\n\t\t\t\t\t// \t\t\t\t\t\t\t\"public_metrics\": {\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\"view_count\": 6909260\n\t\t\t\t\t// \t\t\t\t\t\t\t},\n\t\t\t\t\t// \t\t\t\t\t\t\t\"preview_image_url\": \"https://pbs.twimg.com/media/EYeX7akWsAIP1_1.jpg\",\n\t\t\t\t\t// \t\t\t\t\t\t\t\"width\": 1920\n\t\t\t\t\t// \t\t\t\t\t};\n\n\t\t\t\tawait axios({\n\t\t\t\t\t\tmethod: 'post',\n\t\t\t\t\t\t// url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets?expansions=attachments.media_keys&media.fields=duration_ms,height,media_key,preview_image_url,public_metrics,type,url,width,alt_text',\n\n\t\t\t\t\t\turl: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\n\n\t\t\t\t\t\t// url: 'https://upload.twitter.com/1.1/media/upload.json?media_category=tweet_image',\n\n\n\n\t\t\t\t\t\tdata: tweetData,\n\t\t\t\t\t\t// media: media,\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'Authorization': `Bearer ${cookies.accessToken.accessToken}`,\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}).then((res) => {\n\t\t\t\t\t\tconsole.log(res);\n\t\t\t\t\t\t// alert(\"생성이 완료되었습니다.\");\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\twindow.location.href = \"/question/\" + questionId + \"/completed/user\";\n\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tif (error.response) {\n\t\t\t\t\t// The request was made and the server responded with a status code\n\t\t\t\t\t// that falls out of the range of 2xx\n\t\t\t\t\tconsole.log(error.response.data);\n\t\t\t\t\tconsole.log(error.response.status);\n\t\t\t\t\tconsole.log(error.response.headers);\n\t\t\t\t} else if (error.request) {\n\t\t\t\t\t// The request was made but no response was received\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n\t\t\t\t\t// http.ClientRequest in node.js\n\t\t\t\t\tconsole.log(error.request);\n\t\t\t\t} else {\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\n\t\t\t\t\tconsole.log(\"Error\", error.message);\n\t\t\t\t}\n\t\t\t\tconsole.log(error.config);\n\t\t\t});\n\t};\n\n\t// function BtnToCreateTweet(){\n\t// \tfunction handleClick(e: any){\n\t// \t\tconsole.log(cookies.accessToken);\n  //     const data = {\n  //       text: \"질문 : \" + questionContents + \"\\n 답변 :\" + answerContents\n  //     };\n\n  //     axios({\n  //       method: 'post',\n  //       url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\n\n  //       data: data,\n  //       headers: {\n  //         'Authorization': `Bearer ${cookies.accessToken.accessToken}`,\n  //       }\n\n  //     }).then((res) => {\n  //       console.log(res);\n  //       // alert(\"생성이 완료되었습니다.\");\n  //       });\n\t// \t}\n\t// \treturn (\n\t// \t\t<button onClick={handleClick}>\n  //       CreateTweet\n\t// \t\t</button>\n\t// \t);\n\t// }\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\t// formState: { isSubmitting, isDirty, errors },\n\t} = useForm();\n\n\t// 유저 입력 값을 넣을 변수\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\n\n\t// 줄 수를 계산해서 저장할 변수\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\n\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\n\tconst checkItemChangeHandler = (event: any) => {\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\n\t\tsetCheckItemContent(event.target.value);\n\t};\n\n\tfunction checkLengthHandler(event: any) {\n\t\tvar text = event.target.value;\n\t\tvar test_length = text.length;\n\n\t\t//최대 글자수\n\t\tvar max_length = 5000;\n\n\t\tif (test_length > max_length) {\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\n\t\t\ttext = text.substr(0, max_length);\n\t\t\tevent.target.value = text;\n\t\t\tevent.target.focus();\n\t\t}\n\t}\n\n\t// checkBox Start\n\tconst [checked, setChecked] = useState(false);\n\n\tconst checkHandler = (event:any) => {\n\t\tif(checked){\n\t\t\tsetChecked(false);\n\t\t}else if(checked === false){\n\t\t\tsetChecked(true);\n\t\t}\n\t};\n\n\tconst CheckToSendTwitter = () => {\n  return (\n    <div>\n      <input type=\"checkbox\" checked={checked} onChange={(e) => checkHandler(e)} />\n    </div>\n  \t);\n\t};\n\t// checkBox Fin.\n\n\n\t// // capture img start\n  // const printRef = useRef<HTMLInputElement>(null);\n\n  // const handleDownloadImage = async () => {\n  //   const element:any = printRef.current;\n  //   // const canvas = await html2canvas(element);\n  //   const canvas = await html2canvas( element, { logging: true,  allowTaint: false, useCORS: true } )\n\n  //   const data = canvas.toDataURL('image/jpg');\n  //   const link = document.createElement('a');\n\n  //   if (typeof link.download === 'string') {\n  //     link.href = data;\n  //     link.download = 'image.jpg';\n  //     console.log(\"link.download1 : \"+ link.download);\n\n  //     document.body.appendChild(link);\n  //     link.click();\n  //     document.body.removeChild(link);\n  //   } else {\n  //     console.log(\"link.download2 : \"+ link.download);\n  //     window.open(data);\n  //   }\n  // };\n  // // capture img fin\n\n\t// capture img start2\n  const printRef = useRef<HTMLInputElement>(null);\n\n  const handleDownloadImage = async () => {\n    const element:any = printRef.current;\n    const canvas = await html2canvas(element, {\n      backgroundColor: \"none\",\n      logging: true,\n      useCORS: true //to enable cross origin perms\n    });\n\n    const data = canvas.toDataURL(\"image/jpg\");\n    const link = document.createElement(\"a\");\n\n    if (typeof link.download === \"string\") {\n      link.href = data;\n      console.log(\"\");\n      link.download = \"image.jpg\";\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } else {\n      window.open(data);\n    }\n  };\n  // capture img fin 2\n\n\treturn (\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<div className=\"answerForm-text-box checkItem\">\n\t\t\t\t<span className=\"cursur-bar\">|</span>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"answerAdd\"\n\t\t\t\t\tclassName=\"answerForm-textarea\"\n\t\t\t\t\tvalue={checkItemContent}\n\t\t\t\t\tonInput={checkItemChangeHandler}\n\t\t\t\t\tonKeyUp={checkLengthHandler}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: (textareaHeight + 1) * 27 + \"px\",\n\t\t\t\t\t\twhiteSpace: \"pre-wrap\",\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"답변을 적어주세요\"\n\t\t\t\t\t{...register(\"answerContents\", {\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\n\t\t\t\t\t})}\n\t\t\t\t></textarea>\n\t\t\t</div>\n\n\t\t\t<div className=\"answerForm-btn-box\">\n\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{/* <BtnToCreateTweet/> */}\n\t\t\t\t<p>Post Tweet?</p>\n\t\t\t\t<CheckToSendTwitter/>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nexport default AnswerForm;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/SelectTapeModal.tsx",["333","334"],[],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport \"../../styles/selectTapeModal.css\";\nimport { colorDataType } from \"../types\";\n\ninterface props {\n\topen: boolean;\n\tclose: () => void; // 함수 타입 정의할 때\n\tgetTapeColorData: (tapeColorName: any) => void;\n}\n\nconst SelectTapeModal = (props: props): ReactElement => {\n\tconst { open, close, getTapeColorData } = props;\n\tconst [TapeColorName, setTapeColorName] = useState<\"하늘\">();\n\tconst [TapeColorCode, setTapeColorCode] = useState<\"#64B9DD\">();\n\n\tconst TapeColorDict: any = {};\n\tTapeColorDict[\"하늘\"] = \"#64B9DD\";\n\tTapeColorDict[\"청록\"] = \"#4BACAC\";\n\tTapeColorDict[\"분홍\"] = \"#E7B0C8\";\n\tTapeColorDict[\"보라\"] = \"#BDACD4\";\n\tTapeColorDict[\"노랑\"] = \"#F6DB61\";\n\n\tfunction handleTapeColorClick(event: any): void {\n\t\tsetTapeColorName(event.target.textContent);\n\t\tsetTapeColorCode(TapeColorDict[event.target.textContent]);\n\t}\n\n\tuseEffect(() => {\n\t\tconst tapeColorData: colorDataType = {\n\t\t\tcolorName: TapeColorName,\n\t\t\tcolorCode: TapeColorCode,\n\t\t};\n\n\t\tgetTapeColorData(tapeColorData);\n\t}, [TapeColorName, TapeColorCode]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className={open ? \"bg\" : \"\"} />\n\t\t\t<div className={open ? \"modal active\" : \"modal\"}>\n\t\t\t\t{open ? (\n\t\t\t\t\t<div className=\"SelectTapeModal-area\">\n\t\t\t\t\t\t<div className=\"SelectTapeModal-header\">\n\t\t\t\t\t\t\t<div className=\"SelectTapeModal-header-text\">테이프 색상</div>\n\t\t\t\t\t\t\t<div className=\"SelectTapeModal-selected-box\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-note-color\"\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: `${TapeColorCode}` }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className=\"SendQuestionForm-note-color-text\">\n\t\t\t\t\t\t\t\t\t{TapeColorName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-open-modal-btn\"\n\t\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-note-select-btn.svg\"\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"SelectTapeModal-hr-box\">\n\t\t\t\t\t\t\t<hr className=\"SelectTapeModal-hr\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"SelectTapemodal-colors-box\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectTapemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#64B9DD\" }}\n\t\t\t\t\t\t\t\tonClick={handleTapeColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>하늘</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectTapemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#4BACAC\" }}\n\t\t\t\t\t\t\t\tonClick={handleTapeColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>청록</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectTapemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#E7B0C8\" }}\n\t\t\t\t\t\t\t\tonClick={handleTapeColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>분홍</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectTapemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#BDACD4\" }}\n\t\t\t\t\t\t\t\tonClick={handleTapeColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>보라</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectTapemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#F6DB61\" }}\n\t\t\t\t\t\t\t\tonClick={handleTapeColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>노랑</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* 여기다가 계속 색 추가하면 됨 */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default SelectTapeModal;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/Modal/SelectNoteModal.tsx",["335","336"],[],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport \"../../styles/selectNoteModal.css\";\nimport { colorDataType } from \"../types\";\n\ninterface props {\n\topen: boolean;\n\tclose: () => void; // 함수 타입 정의할 때\n\tgetNoteColorData: (noteColorName: any) => void;\n}\n\nconst SelectNoteModal = (props: props): ReactElement => {\n\tconst { open, close, getNoteColorData } = props;\n\tconst [NoteColorName, setNoteColorName] = useState<\"연보라\">();\n\tconst [NoteColorCode, setNoteColorCode] = useState<\"#e9e1ec\">();\n\n\tconst NoteColorDict: any = {};\n\tNoteColorDict[\"연보라\"] = \"#e9e1ec\";\n\tNoteColorDict[\"복숭아\"] = \"#f2d4d6\";\n\tNoteColorDict[\"파랑\"] = \"#d5d8f3\";\n\tNoteColorDict[\"노랑\"] = \"#f3ead5\";\n\n\tfunction handleNoteColorClick(event: any): void {\n\t\tsetNoteColorName(event.target.textContent);\n\t\tsetNoteColorCode(NoteColorDict[event.target.textContent]);\n\t}\n\tuseEffect(() => {\n\n\t\tconst noteColorData: colorDataType = {\n\t\t\tcolorName: NoteColorName,\n\t\t\tcolorCode: NoteColorCode,\n\t\t};\n\t\tgetNoteColorData(noteColorData);\n\t}, [NoteColorName, NoteColorCode]);\n\n\treturn (\n\t\t<>\n\t\t\t<div className={open ? \"bg\" : \"\"} />\n\t\t\t<div className={open ? \"modal active\" : \"modal\"}>\n\t\t\t\t{open ? (\n\t\t\t\t\t<div className=\"SelectNoteModal-area\">\n\t\t\t\t\t\t<div className=\"SelectNoteModal-header\">\n\t\t\t\t\t\t\t<div className=\"SelectNoteModal-header-text\">질문노트 색상</div>\n\t\t\t\t\t\t\t<div className=\"SelectNoteModal-selected-box\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-note-color\"\n\t\t\t\t\t\t\t\t\tid=\"SelectedNoteColor\"\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: `${NoteColorCode}` }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className=\"SendQuestionForm-note-color-text\">\n\t\t\t\t\t\t\t\t\t{NoteColorName}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-open-modal-btn\"\n\t\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-note-select-btn.svg\"\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"SelectNoteModal-hr-box\">\n\t\t\t\t\t\t\t<hr className=\"SelectNoteModal-hr\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"SelectNotemodal-colors-box\">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectNotemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#e9e1ec\" }}\n\t\t\t\t\t\t\t\tonClick={handleNoteColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>연보라</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectNotemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#f2d4d6\" }}\n\t\t\t\t\t\t\t\tonClick={handleNoteColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>복숭아</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectNotemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#d5d8f3\" }}\n\t\t\t\t\t\t\t\tonClick={handleNoteColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>파랑</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"SelectNotemodal-color-option\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#f3ead5\" }}\n\t\t\t\t\t\t\t\tonClick={handleNoteColorClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>노랑</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t{/* 여기다가 계속 색 추가하면 됨 */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default SelectNoteModal;\n","/Users/kiyujin/Dev/ringcard/ringcard_frontend/src/components/QuestionNote/QuestionNoteFooter.tsx",[],[],{"ruleId":"337","severity":1,"message":"338","line":1,"column":17,"nodeType":"339","messageId":"340","endLine":1,"endColumn":25},{"ruleId":"337","severity":1,"message":"341","line":1,"column":27,"nodeType":"339","messageId":"340","endLine":1,"endColumn":36},{"ruleId":"337","severity":1,"message":"342","line":20,"column":8,"nodeType":"339","messageId":"340","endLine":20,"endColumn":13},{"ruleId":"343","severity":1,"message":"344","line":31,"column":5,"nodeType":"345","endLine":31,"endColumn":7,"suggestions":"346"},{"ruleId":"343","severity":1,"message":"344","line":31,"column":5,"nodeType":"345","endLine":31,"endColumn":7,"suggestions":"347"},{"ruleId":"343","severity":1,"message":"344","line":31,"column":5,"nodeType":"345","endLine":31,"endColumn":7,"suggestions":"348"},{"ruleId":"343","severity":1,"message":"344","line":33,"column":5,"nodeType":"345","endLine":33,"endColumn":7,"suggestions":"349"},{"ruleId":"337","severity":1,"message":"350","line":11,"column":10,"nodeType":"339","messageId":"340","endLine":11,"endColumn":17},{"ruleId":"337","severity":1,"message":"351","line":11,"column":30,"nodeType":"339","messageId":"340","endLine":11,"endColumn":42},{"ruleId":"337","severity":1,"message":"352","line":17,"column":9,"nodeType":"339","messageId":"340","endLine":17,"endColumn":17},{"ruleId":"337","severity":1,"message":"353","line":17,"column":19,"nodeType":"339","messageId":"340","endLine":17,"endColumn":30},{"ruleId":"337","severity":1,"message":"354","line":25,"column":10,"nodeType":"339","messageId":"340","endLine":25,"endColumn":16},{"ruleId":"337","severity":1,"message":"355","line":27,"column":9,"nodeType":"339","messageId":"340","endLine":27,"endColumn":21},{"ruleId":"337","severity":1,"message":"356","line":28,"column":9,"nodeType":"339","messageId":"340","endLine":28,"endColumn":24},{"ruleId":"337","severity":1,"message":"357","line":31,"column":8,"nodeType":"339","messageId":"340","endLine":31,"endColumn":20},{"ruleId":"337","severity":1,"message":"358","line":32,"column":8,"nodeType":"339","messageId":"340","endLine":32,"endColumn":27},{"ruleId":"337","severity":1,"message":"359","line":33,"column":8,"nodeType":"339","messageId":"340","endLine":33,"endColumn":20},{"ruleId":"337","severity":1,"message":"360","line":34,"column":8,"nodeType":"339","messageId":"340","endLine":34,"endColumn":20},{"ruleId":"337","severity":1,"message":"361","line":38,"column":9,"nodeType":"339","messageId":"340","endLine":38,"endColumn":22},{"ruleId":"337","severity":1,"message":"362","line":39,"column":9,"nodeType":"339","messageId":"340","endLine":39,"endColumn":31},{"ruleId":"337","severity":1,"message":"363","line":40,"column":9,"nodeType":"339","messageId":"340","endLine":40,"endColumn":25},{"ruleId":"337","severity":1,"message":"364","line":41,"column":9,"nodeType":"339","messageId":"340","endLine":41,"endColumn":22},{"ruleId":"337","severity":1,"message":"365","line":45,"column":9,"nodeType":"339","messageId":"340","endLine":45,"endColumn":14},{"ruleId":"337","severity":1,"message":"366","line":55,"column":9,"nodeType":"339","messageId":"340","endLine":55,"endColumn":15},{"ruleId":"337","severity":1,"message":"367","line":57,"column":9,"nodeType":"339","messageId":"340","endLine":57,"endColumn":15},{"ruleId":"337","severity":1,"message":"368","line":66,"column":11,"nodeType":"339","messageId":"340","endLine":66,"endColumn":27},{"ruleId":"337","severity":1,"message":"369","line":120,"column":13,"nodeType":"339","messageId":"340","endLine":120,"endColumn":24},{"ruleId":"337","severity":1,"message":"370","line":234,"column":3,"nodeType":"339","messageId":"340","endLine":234,"endColumn":11},{"ruleId":"337","severity":1,"message":"371","line":236,"column":16,"nodeType":"339","messageId":"340","endLine":236,"endColumn":28},{"ruleId":"337","severity":1,"message":"372","line":236,"column":30,"nodeType":"339","messageId":"340","endLine":236,"endColumn":37},{"ruleId":"337","severity":1,"message":"373","line":236,"column":39,"nodeType":"339","messageId":"340","endLine":236,"endColumn":45},{"ruleId":"337","severity":1,"message":"374","line":1,"column":8,"nodeType":"339","messageId":"340","endLine":1,"endColumn":13},{"ruleId":"337","severity":1,"message":"355","line":8,"column":9,"nodeType":"339","messageId":"340","endLine":8,"endColumn":21},{"ruleId":"337","severity":1,"message":"356","line":9,"column":9,"nodeType":"339","messageId":"340","endLine":9,"endColumn":24},{"ruleId":"337","severity":1,"message":"357","line":12,"column":8,"nodeType":"339","messageId":"340","endLine":12,"endColumn":20},{"ruleId":"337","severity":1,"message":"358","line":13,"column":8,"nodeType":"339","messageId":"340","endLine":13,"endColumn":27},{"ruleId":"337","severity":1,"message":"359","line":14,"column":8,"nodeType":"339","messageId":"340","endLine":14,"endColumn":20},{"ruleId":"337","severity":1,"message":"360","line":15,"column":8,"nodeType":"339","messageId":"340","endLine":15,"endColumn":20},{"ruleId":"337","severity":1,"message":"366","line":24,"column":9,"nodeType":"339","messageId":"340","endLine":24,"endColumn":15},{"ruleId":"343","severity":1,"message":"375","line":74,"column":5,"nodeType":"345","endLine":74,"endColumn":7,"suggestions":"376"},{"ruleId":"337","severity":1,"message":"377","line":197,"column":9,"nodeType":"339","messageId":"340","endLine":197,"endColumn":27},{"ruleId":"378","severity":1,"message":"379","line":293,"column":11,"nodeType":"380","endLine":293,"endColumn":119},{"ruleId":"343","severity":1,"message":"381","line":46,"column":5,"nodeType":"345","endLine":46,"endColumn":7,"suggestions":"382"},{"ruleId":"343","severity":1,"message":"383","line":40,"column":5,"nodeType":"345","endLine":40,"endColumn":7,"suggestions":"384"},{"ruleId":"343","severity":1,"message":"385","line":36,"column":5,"nodeType":"345","endLine":36,"endColumn":7,"suggestions":"386"},{"ruleId":"387","severity":1,"message":"388","line":20,"column":18,"nodeType":"389","messageId":"390","endLine":20,"endColumn":20},{"ruleId":"337","severity":1,"message":"391","line":14,"column":8,"nodeType":"339","messageId":"340","endLine":14,"endColumn":11},{"ruleId":"337","severity":1,"message":"392","line":17,"column":9,"nodeType":"339","messageId":"340","endLine":17,"endColumn":23},{"ruleId":"337","severity":1,"message":"393","line":19,"column":18,"nodeType":"339","messageId":"340","endLine":19,"endColumn":27},{"ruleId":"337","severity":1,"message":"351","line":19,"column":29,"nodeType":"339","messageId":"340","endLine":19,"endColumn":41},{"ruleId":"337","severity":1,"message":"394","line":224,"column":9,"nodeType":"339","messageId":"340","endLine":224,"endColumn":28},{"ruleId":"337","severity":1,"message":"395","line":12,"column":16,"nodeType":"339","messageId":"340","endLine":12,"endColumn":21},{"ruleId":"343","severity":1,"message":"396","line":35,"column":5,"nodeType":"345","endLine":35,"endColumn":35,"suggestions":"397"},{"ruleId":"337","severity":1,"message":"395","line":12,"column":16,"nodeType":"339","messageId":"340","endLine":12,"endColumn":21},{"ruleId":"343","severity":1,"message":"398","line":33,"column":5,"nodeType":"345","endLine":33,"endColumn":35,"suggestions":"399"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Oauth' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.","ArrayExpression",["400"],["401"],["402"],["403"],"'cookies' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'userMe' is assigned a value but never used.","'CONSUMER_KEY' is assigned a value but never used.","'CONSUMER_SECRET' is assigned a value but never used.","'ACCESS_TOKEN' is assigned a value but never used.","'ACCESS_TOKEN_SECRET' is assigned a value but never used.","'CALLBACK_URL' is assigned a value but never used.","'BEARER_TOKEN' is assigned a value but never used.","'TWITTER_STATE' is assigned a value but never used.","'TWITTER_CODE_CHALLENGE' is assigned a value but never used.","'TWITTER_AUTH_URL' is assigned a value but never used.","'TWITTER_SCOPE' is assigned a value but never used.","'state' is assigned a value but never used.","'client' is assigned a value but never used.","'params' is assigned a value but never used.","'createFormParams' is assigned a value but never used.","'endpointURL' is assigned a value but never used.","'register' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'isDirty' is assigned a value but never used.","'errors' is assigned a value but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'authUrl'. Either include it or remove the dependency array.",["404"],"'getTwitterOAuthUrl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setUserInfos'. Either include it or remove the dependency array.",["405"],"React Hook useEffect has a missing dependency: 'questionId'. Either include it or remove the dependency array.",["406"],"React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["407"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'idx' is assigned a value but never used.","'answerContents' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'handleDownloadImage' is assigned a value but never used.","'close' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTapeColorData'. Either include it or remove the dependency array.",["408"],"React Hook useEffect has a missing dependency: 'getNoteColorData'. Either include it or remove the dependency array.",["409"],{"desc":"410","fix":"411"},{"desc":"410","fix":"412"},{"desc":"410","fix":"413"},{"desc":"410","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},"Update the dependencies array to be: [page]",{"range":"427","text":"428"},{"range":"429","text":"428"},{"range":"430","text":"428"},{"range":"431","text":"428"},"Update the dependencies array to be: [authUrl]",{"range":"432","text":"433"},"Update the dependencies array to be: [setUserInfos]",{"range":"434","text":"435"},"Update the dependencies array to be: [questionId]",{"range":"436","text":"437"},"Update the dependencies array to be: [userName]",{"range":"438","text":"439"},"Update the dependencies array to be: [TapeColorName, TapeColorCode, getTapeColorData]",{"range":"440","text":"441"},"Update the dependencies array to be: [NoteColorName, NoteColorCode, getNoteColorData]",{"range":"442","text":"443"},[1093,1095],"[page]",[1090,1092],[1086,1088],[1196,1198],[2412,2414],"[authUrl]",[1319,1321],"[setUserInfos]",[1447,1449],"[questionId]",[1267,1269],"[userName]",[1037,1067],"[TapeColorName, TapeColorCode, getTapeColorData]",[1005,1035],"[NoteColorName, NoteColorCode, getNoteColorData]"]