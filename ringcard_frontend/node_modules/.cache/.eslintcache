[{"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\index.tsx":"1","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\App.tsx":"3","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\AppRouter.tsx":"4","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Navigation.tsx":"5","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditPassword.tsx":"6","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\UserInfo.tsx":"7","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeTrashcan.tsx":"8","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeAnswered.tsx":"9","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeCollection.tsx":"10","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeUnanswered.tsx":"11","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\question\\AnswerCompletedPage.tsx":"12","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionAnswered.tsx":"13","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionUnanswered.tsx":"14","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\anony\\UserHome.tsx":"15","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteList.tsx":"16","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\AnsweredQuestionNote.tsx":"17","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerFormQuestionNote.tsx":"18","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\AnswerFormQuestionNote.tsx":"19","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNote.tsx":"20","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerForm.tsx":"21","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\AnswerForm.tsx":"22","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteFooter.tsx":"23","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\UserProfile.tsx":"24","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\DeleteAccount.tsx":"25","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Toast.tsx":"26","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\NowDate.tsx":"27","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteListAnony.tsx":"28","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteAnony.tsx":"29","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\HyperlinkBox.tsx":"30","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\anony\\QuestionAnony.tsx":"31","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormUserHome.tsx":"32","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormQuestionAnony.tsx":"33","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\utils\\isLogin.ts":"34","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\auth\\PrivateRoute.tsx":"35","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserRingcardName.tsx":"36","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserEmail.tsx":"37","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Login.tsx":"38","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\FindPassword.tsx":"39","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Logout.tsx":"40","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Join.tsx":"41","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Modal\\ClearTrashcanModal.tsx":"42","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderNoProfile.tsx":"43","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\Header.tsx":"44","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingcaShort.tsx":"45","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Modal\\MenuModal.tsx":"46","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Modal\\SelectNoteModal.tsx":"47","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingca.tsx":"48","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2.tsx":"49","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2Step3.tsx":"50","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Cookie.tsx":"51","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\index.tsx":"52","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\reportWebVitals.ts":"53","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\App.tsx":"54","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\AppRouter.tsx":"55","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\utils\\isLogin.ts":"56","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeUnanswered.tsx":"57","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeAnswered.tsx":"58","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeCollection.tsx":"59","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Login.tsx":"60","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Join.tsx":"61","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\FindPassword.tsx":"62","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeTrashcan.tsx":"63","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Logout.tsx":"64","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2Step3.tsx":"65","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2.tsx":"66","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditPassword.tsx":"67","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\UserInfo.tsx":"68","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\DeleteAccount.tsx":"69","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserRingcardName.tsx":"70","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserEmail.tsx":"71","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionAnswered.tsx":"72","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionUnanswered.tsx":"73","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\question\\AnswerCompletedPage.tsx":"74","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\anony\\UserHome.tsx":"75","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\anony\\QuestionAnony.tsx":"76","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\auth\\PrivateRoute.tsx":"77","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Navigation.tsx":"78","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteList.tsx":"79","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\UserProfile.tsx":"80","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingcaShort.tsx":"81","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\Header.tsx":"82","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderNoProfile.tsx":"83","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Toast.tsx":"84","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingca.tsx":"85","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Modal\\ClearTrashcanModal.tsx":"86","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\AnswerFormQuestionNote.tsx":"87","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\AnsweredQuestionNote.tsx":"88","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerFormQuestionNote.tsx":"89","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormQuestionAnony.tsx":"90","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormUserHome.tsx":"91","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteListAnony.tsx":"92","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNote.tsx":"93","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Modal\\MenuModal.tsx":"94","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\AnswerForm.tsx":"95","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\NowDate.tsx":"96","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\HyperlinkBox.tsx":"97","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerForm.tsx":"98","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteAnony.tsx":"99","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Modal\\SelectNoteModal.tsx":"100","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteFooter.tsx":"101"},{"size":573,"mtime":1669381511966,"results":"102","hashOfConfig":"103"},{"size":440,"mtime":1669381511966,"results":"104","hashOfConfig":"103"},{"size":137,"mtime":1670038397864,"results":"105","hashOfConfig":"103"},{"size":5275,"mtime":1670781782582,"results":"106","hashOfConfig":"103"},{"size":4854,"mtime":1670197051943,"results":"107","hashOfConfig":"103"},{"size":7402,"mtime":1670595182709,"results":"108","hashOfConfig":"103"},{"size":4513,"mtime":1670668256003,"results":"109","hashOfConfig":"103"},{"size":2116,"mtime":1670595182707,"results":"110","hashOfConfig":"103"},{"size":1474,"mtime":1670595182705,"results":"111","hashOfConfig":"103"},{"size":1480,"mtime":1670595182706,"results":"112","hashOfConfig":"103"},{"size":1510,"mtime":1670595182708,"results":"113","hashOfConfig":"103"},{"size":5320,"mtime":1670595182712,"results":"114","hashOfConfig":"103"},{"size":1889,"mtime":1670595182712,"results":"115","hashOfConfig":"103"},{"size":2295,"mtime":1670595182712,"results":"116","hashOfConfig":"103"},{"size":3812,"mtime":1670595182700,"results":"117","hashOfConfig":"103"},{"size":514,"mtime":1670099690201,"results":"118","hashOfConfig":"103"},{"size":2976,"mtime":1670595182689,"results":"119","hashOfConfig":"103"},{"size":3017,"mtime":1670099690198,"results":"120","hashOfConfig":"103"},{"size":3012,"mtime":1671095375092,"results":"121","hashOfConfig":"103"},{"size":2982,"mtime":1670595182694,"results":"122","hashOfConfig":"103"},{"size":4686,"mtime":1670595182689,"results":"123","hashOfConfig":"103"},{"size":7701,"mtime":1671254030082,"results":"124","hashOfConfig":"103"},{"size":4769,"mtime":1669855558525,"results":"125","hashOfConfig":"103"},{"size":830,"mtime":1670595182697,"results":"126","hashOfConfig":"103"},{"size":5687,"mtime":1670668174468,"results":"127","hashOfConfig":"103"},{"size":658,"mtime":1669604266191,"results":"128","hashOfConfig":"103"},{"size":1371,"mtime":1669605454371,"results":"129","hashOfConfig":"103"},{"size":1127,"mtime":1671096451034,"results":"130","hashOfConfig":"103"},{"size":4069,"mtime":1670595182695,"results":"131","hashOfConfig":"103"},{"size":774,"mtime":1669855558523,"results":"132","hashOfConfig":"103"},{"size":4284,"mtime":1671095322985,"results":"133","hashOfConfig":"103"},{"size":5070,"mtime":1670595182696,"results":"134","hashOfConfig":"103"},{"size":3994,"mtime":1670595182695,"results":"135","hashOfConfig":"103"},{"size":162,"mtime":1670198595659,"results":"136","hashOfConfig":"103"},{"size":513,"mtime":1670195387857,"results":"137","hashOfConfig":"103"},{"size":4359,"mtime":1670668174468,"results":"138","hashOfConfig":"103"},{"size":5637,"mtime":1670595182709,"results":"139","hashOfConfig":"103"},{"size":10151,"mtime":1671091296071,"results":"140","hashOfConfig":"103"},{"size":3178,"mtime":1670595182701,"results":"141","hashOfConfig":"103"},{"size":379,"mtime":1670595182703,"results":"142","hashOfConfig":"103"},{"size":5656,"mtime":1670595182702,"results":"143","hashOfConfig":"103"},{"size":1841,"mtime":1670595182693,"results":"144","hashOfConfig":"103"},{"size":993,"mtime":1670595182690,"results":"145","hashOfConfig":"103"},{"size":1444,"mtime":1670595182690,"results":"146","hashOfConfig":"103"},{"size":316,"mtime":1670595182691,"results":"147","hashOfConfig":"103"},{"size":1713,"mtime":1670595182693,"results":"148","hashOfConfig":"103"},{"size":1133,"mtime":1670595182694,"results":"149","hashOfConfig":"103"},{"size":283,"mtime":1670595182691,"results":"150","hashOfConfig":"103"},{"size":7552,"mtime":1671280131601,"results":"151","hashOfConfig":"103"},{"size":8269,"mtime":1671280131601,"results":"152","hashOfConfig":"103"},{"size":351,"mtime":1671098284976,"results":"153","hashOfConfig":"103"},{"size":573,"mtime":1669381511966,"results":"154","hashOfConfig":"155"},{"size":440,"mtime":1669381511966,"results":"156","hashOfConfig":"155"},{"size":137,"mtime":1670038397864,"results":"157","hashOfConfig":"155"},{"size":5275,"mtime":1670781782582,"results":"158","hashOfConfig":"155"},{"size":162,"mtime":1670198595659,"results":"159","hashOfConfig":"155"},{"size":1510,"mtime":1670595182708,"results":"160","hashOfConfig":"155"},{"size":1474,"mtime":1670595182705,"results":"161","hashOfConfig":"155"},{"size":1480,"mtime":1670595182706,"results":"162","hashOfConfig":"155"},{"size":10151,"mtime":1671091296071,"results":"163","hashOfConfig":"155"},{"size":5656,"mtime":1670595182702,"results":"164","hashOfConfig":"155"},{"size":3178,"mtime":1670595182701,"results":"165","hashOfConfig":"155"},{"size":2116,"mtime":1670595182707,"results":"166","hashOfConfig":"155"},{"size":379,"mtime":1670595182703,"results":"167","hashOfConfig":"155"},{"size":8269,"mtime":1671280131601,"results":"168","hashOfConfig":"155"},{"size":7552,"mtime":1671280131601,"results":"169","hashOfConfig":"155"},{"size":7402,"mtime":1670595182709,"results":"170","hashOfConfig":"155"},{"size":4513,"mtime":1670668256003,"results":"171","hashOfConfig":"155"},{"size":5687,"mtime":1670668174468,"results":"172","hashOfConfig":"155"},{"size":4359,"mtime":1670668174468,"results":"173","hashOfConfig":"155"},{"size":5637,"mtime":1670595182709,"results":"174","hashOfConfig":"155"},{"size":1889,"mtime":1670595182712,"results":"175","hashOfConfig":"155"},{"size":2295,"mtime":1670595182712,"results":"176","hashOfConfig":"155"},{"size":5320,"mtime":1670595182712,"results":"177","hashOfConfig":"155"},{"size":3812,"mtime":1670595182700,"results":"178","hashOfConfig":"155"},{"size":4284,"mtime":1671095322985,"results":"179","hashOfConfig":"155"},{"size":513,"mtime":1670195387857,"results":"180","hashOfConfig":"155"},{"size":4854,"mtime":1670197051943,"results":"181","hashOfConfig":"155"},{"size":514,"mtime":1670099690201,"results":"182","hashOfConfig":"155"},{"size":830,"mtime":1670595182697,"results":"183","hashOfConfig":"155"},{"size":316,"mtime":1670595182691,"results":"184","hashOfConfig":"155"},{"size":1444,"mtime":1670595182690,"results":"185","hashOfConfig":"155"},{"size":993,"mtime":1670595182690,"results":"186","hashOfConfig":"155"},{"size":658,"mtime":1669604266191,"results":"187","hashOfConfig":"155"},{"size":283,"mtime":1670595182691,"results":"188","hashOfConfig":"155"},{"size":1841,"mtime":1670595182693,"results":"189","hashOfConfig":"155"},{"size":3012,"mtime":1671095375092,"results":"190","hashOfConfig":"155"},{"size":2976,"mtime":1670595182689,"results":"191","hashOfConfig":"155"},{"size":3017,"mtime":1670099690198,"results":"192","hashOfConfig":"155"},{"size":3994,"mtime":1670595182695,"results":"193","hashOfConfig":"155"},{"size":5070,"mtime":1670595182696,"results":"194","hashOfConfig":"155"},{"size":1127,"mtime":1671096451034,"results":"195","hashOfConfig":"155"},{"size":2982,"mtime":1670595182694,"results":"196","hashOfConfig":"155"},{"size":1713,"mtime":1670595182693,"results":"197","hashOfConfig":"155"},{"size":7701,"mtime":1671254030082,"results":"198","hashOfConfig":"155"},{"size":1371,"mtime":1669605454371,"results":"199","hashOfConfig":"155"},{"size":774,"mtime":1669855558523,"results":"200","hashOfConfig":"155"},{"size":4686,"mtime":1670595182689,"results":"201","hashOfConfig":"155"},{"size":4069,"mtime":1670595182695,"results":"202","hashOfConfig":"155"},{"size":1133,"mtime":1670595182694,"results":"203","hashOfConfig":"155"},{"size":4769,"mtime":1669855558525,"results":"204","hashOfConfig":"155"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"55tvy8",{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"208"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"208"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"208"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"208"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"208"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"208"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"208"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"208"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"208"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"208"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"208"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"208"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"208"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"208"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"208"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"208"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"208"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"208"},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"208"},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"208"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"208"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"208"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"208"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"208"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"208"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"208"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"208"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"208"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"208"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"208"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"208"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"208"},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"208"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"msh4wv",{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438"},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226"},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338"},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265"},{"filePath":"478","messages":"479","suppressedMessages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"481","messages":"482","suppressedMessages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368"},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361"},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375"},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311"},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\index.tsx",[],[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\App.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\AppRouter.tsx",["544","545","546","547"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Routes, Navigate } from \"react-router-dom\";\r\n\r\nimport Navigation from \"./components/Navigation\";\r\nimport HomeUnanswered from \"./pages/home/HomeUnanswered\";\r\nimport UserInfo from \"./pages/mypage/UserInfo\";\r\nimport HomeAnswered from \"./pages/home/HomeAnswered\";\r\nimport HomeCollection from \"./pages/home/HomeCollection\";\r\nimport HomeTrashcan from \"./pages/home/HomeTrashcan\";\r\n\r\nimport QuestionUnanswered from \"./pages/question/QuestionUnanswered\";\r\nimport Login from \"./pages/auth/Login\";\r\nimport Join from \"./pages/auth/Join\";\r\nimport EditPassword from \"./pages/mypage/EditPassword\";\r\nimport AnswerCompletedPage from \"./pages/question/AnswerCompletedPage\";\r\nimport QuestionAnswered from \"./pages/question/QuestionAnswered\";\r\nimport UserHome from \"./pages/anony/UserHome\";\r\nimport DeleteAccount from \"./pages/mypage/DeleteAccount\";\r\nimport QuestionAnony from \"./pages/anony/QuestionAnony\";\r\nimport Logout from \"./pages/auth/Logout\";\r\nimport Oauth from \"./pages/auth/Oauth\";\r\nimport PrivateRoute from \"./components/auth/PrivateRoute\";\r\nimport isLogin from \"./utils/isLogin\";\r\nimport EditUserRingcardName from \"./pages/mypage/EditUserRingcardName\";\r\nimport EditUserEmail from \"./pages/mypage/EditUserEmail\";\r\nimport FindPassword from \"./pages/auth/FindPassword\";\r\nimport Oauth2 from \"./pages/auth/Oauth2\";\r\nimport Oauth2Step3 from \"./pages/auth/Oauth2Step3\";\r\n\r\nconst AppRouter = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path=\"\" element={<Login />} />\r\n\t\t\t\t\t<Route path=\"/\" element={<Login />} />\r\n\t\t\t\t\t<Route path=\"/loginForm\" element={<Login />} />\r\n\t\t\t\t\t<Route path=\"/logout\" element={<Logout />} />\r\n\t\t\t\t\t<Route path=\"/joinForm\" element={<Join />} />\r\n\t\t\t\t\t<Route path=\"/findPassword\" element={<FindPassword />} />\r\n\t\t\t\t\t<Route path=\"/userHome/:userName\" element={<UserHome />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/question/:questionId/anony\"\r\n\t\t\t\t\t\telement={<QuestionAnony />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route path=\"/oauth2\"element={<Oauth2 />}/>\r\n\t\t\t\t\t<Route path=\"/login/oauth2/code/twitter\"element={<Oauth2Step3 />}/>\r\n\t\t\t\t\t<Route path=\"/userHome/:userName\" element={<UserHome />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/home/unanswered\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<HomeUnanswered />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/home/answered\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<HomeAnswered />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/home/trashcan\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<HomeTrashcan />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/home/collection\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<HomeCollection />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/question/:questionId/unanswered/user\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<QuestionUnanswered />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/question/:questionId/edit/user\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<QuestionAnswered />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/question/:questionId/completed/user\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<AnswerCompletedPage />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/mypage/info\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<UserInfo />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/mypage/info/edit/userRingcardName\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<EditUserRingcardName />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/mypage/edit/password\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<EditPassword />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/mypage/info/edit/userEmail\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<EditUserEmail />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath=\"/mypage/delete/account\"\r\n\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t<PrivateRoute\r\n\t\t\t\t\t\t\t\tauthenticated={isLogin()}\r\n\t\t\t\t\t\t\t\tcomponent={<DeleteAccount />}\r\n\t\t\t\t\t\t\t\tnoAuthComponent={<Navigate to=\"/loginForm\" />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Routes>\r\n\t\t\t</BrowserRouter>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default AppRouter;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Navigation.tsx",["548","549","550"],[],"import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport \"../styles/navigation.css\";\r\n\r\nconst Navigation = (props: any) => {\r\n\t// const [isLoggedIn, setIsLoggedIn] = useState<Boolean>(false);\r\n\r\n\tconst totalPages=props.totalPages;\r\n\tlet page = Number(props.page);\r\n\r\n\tconst pageAddress = props.pageAddress;\r\n\tconst showPageNumber = page+1;\r\n\t\r\n\tfunction BtnToPageUp(){\r\n\t\tfunction handleClick(e: any){\r\n\t\t\tconsole.log(\"Up\");\r\n\t\t\tif (totalPages === undefined){}\r\n\t\t\telse if (showPageNumber>=totalPages){\r\n\t\t\t}else{\r\n\t\t\t\tpage+=1;\r\n\t\t\t\twindow.location.href = \"/home/\" + pageAddress + \"?page=\" + page;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button className=\"page-btn\" onClick={handleClick}>\r\n\t\t\t\t<img alt=\"\" src=\"/buttons/move-next-page-btn.svg\" />\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction BtnToPageDown(){\r\n\t\tfunction handleClick(e: any){\r\n\t\t\tconsole.log(\"Down\");\r\n\t\t\tif (showPageNumber<=1){}\r\n\t\t\telse{\r\n\t\t\tpage-=1;\r\n\t\t\twindow.location.href = \"/home/\" + pageAddress + \"?page=\" + page;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button className=\"page-btn\" onClick={handleClick}>\r\n\t\t\t\t<img alt=\"\" src=\"/buttons/move-previous-page-btn.svg\" />\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<nav className=\"nav-container\">\r\n\t\t\t<div className=\"nav-bar\">\r\n\t\t\t\t<div className=\"nav-tab\">\r\n\t\t\t\t\t<div className=\"nav-unanswered\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tto=\"/home/unanswered?page=0\"\r\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? \"activeNav\" : \"inactiveNav\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/home-unanswered-tab-active-button.svg\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">미응답</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src=\"/buttons/home-unanswered-tab-button.svg\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">미응답</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"nav-answered\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tto=\"/home/answered?page=0\"\r\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? \"activeNav\" : \"inactiveNav\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/home-answered-tab-active-button.svg\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">응답됨</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src=\"/buttons/home-answered-tab-button.svg\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">응답됨</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"nav-collection\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tto=\"/home/collection?page=0\"\r\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? \"activeNav\" : \"inactiveNav\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/home-collection-tab-active-button.svg\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">보관함</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src=\"/buttons/home-collection-tab-button.svg\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">보관함</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"nav-trashcan\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tto=\"/home/trashcan?page=0\"\r\n\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\r\n\t\t\t\t\t\t\tclassName={({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? \"activeNav\" : \"inactiveNav\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{({ isActive }) =>\r\n\t\t\t\t\t\t\t\tisActive ? (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/home-trashcan-tab-active-button.svg\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">휴지통</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t\t<img alt=\"\" src=\"/buttons/home-trashcan-tab-button.svg\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"home-tab-text\">휴지통</div>\r\n\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"nav-hr\" />\r\n\t\t\t<div className=\"page-bar\">\r\n\t\t\t\t<div className=\"page-section\">\r\n\t\t\t\t\t<BtnToPageDown />\r\n\t\t\t\t\t<div className=\"page-num-section\">\r\n\t\t\t\t\t\t{totalPages !== 0 \r\n\t\t\t\t\t\t?<div className=\"page-num-current\">{showPageNumber}</div> \r\n\t\t\t\t\t\t: <div className=\"page-num-current\">0</div>}\r\n\t\t\t\t\t\t<div className=\"page-num\">/ {totalPages}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<BtnToPageUp />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navigation;","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditPassword.tsx",["551","552","553","554"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/editPassword.css\";\r\nimport HeaderNoProfile from \"../../components/Header/HeaderNoProfile\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UserProfile from \"../../components/UserProfile\";\r\nimport Toastify from \"../../components/Toast\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EditPassword = () => {\r\n\ttype ResponseList = {\r\n\t\t// pastPasswordBlank: boolean;\r\n\t\tpastPasswordFalse: boolean;\r\n\t\t// newPasswordBlank: boolean;\r\n\t\tpasswordSame: boolean;\r\n\t\tnewPasswordFalse: boolean;\r\n\t\tpasswordChanged: boolean;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\t// pastPasswordBlank: false,\r\n\t\tpastPasswordFalse: false,\r\n\t\t// newPasswordBlank: false,\r\n\t\tpasswordSame: false,\r\n\t\tnewPasswordFalse: false,\r\n\t\tpasswordChanged: false,\r\n\t});\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw = () => {\r\n\t\tsetShowPw(!showPw);\r\n\t};\r\n\r\n\tfunction handlePwClick(e: any) {\r\n\t\ttoggleShowPw();\r\n\t}\r\n\r\n\tfunction ShowPw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-show-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-hide-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\t// PW toggle fin.\r\n\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst [user, setUser] = useState<any>([]);\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/mypage/info\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetUser(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/mypage/edit/password\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors() {\r\n\t\t// if(response.pastPasswordBlank){\r\n\t\t// \treturn <div className=\"user-text-error\">pastPasswordBlank</div>\r\n\t\t// }\r\n\t\tif (response.pastPasswordFalse) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"user-text-error\">\r\n\t\t\t\t\tpastPasswordFalse 현재 비밀번호를 정확히 입력해 주세요\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\t// else if(response.newPasswordBlank){\r\n\t\t// \treturn <div className=\"user-text-error\">newPasswordBlank</div>\r\n\t\t// }\r\n\t\telse if (response.passwordSame) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"user-text-error\">\r\n\t\t\t\t\tpasswordSame 새 비밀번호를 현재 비밀번호와 다르게 변경해 주세요.\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (response.newPasswordFalse) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"user-text-error\">\r\n\t\t\t\t\tnewPasswordFalse 새 비밀번호와 비밀번호 확인이 일치하지 않습니다.\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (response.passwordChanged && submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\r\n\t\t\tlocalStorage.setItem(\"toastText\", \"비밀번호가 변경되었습니다.\");\r\n\t\t\twindow.location.href = \"/mypage/info\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// function ButtonToUserInfoEdit(){\r\n\t// \tfunction handleClick(e: any){\r\n\t// \t\t\twindow.location.href=\"/mypage/info/edit\"\r\n\t// \t}\r\n\t//   return(\r\n\t//         <button className=\"user-btn editPassword-btn-cancel\" onClick={handleClick}>\r\n\t// \t\t\t\t  <div className=\"user-btn-text editPassword-btn-text-cancel\">비밀번호 변경 취소하기</div>\r\n\t// \t\t\t\t</button>)\r\n\t// }\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderNoProfile />\r\n\t\t\t\t<div className=\"userInfo-profile-container\">\r\n\t\t\t\t\t<UserProfile />\r\n\t\t\t\t\t<div className=\"user-profile-name\">{user.userRingcardName}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">현재 비밀번호</div>\r\n\t\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t\t// placeholder=\"현재 비밀번호\"\r\n\t\t\t\t\t\t\t\t\t{...register(\"pastPassword\", {\r\n\t\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <i if=\"${param.overlappedUsername}\" text=\"'이미 존재하는 아이디입니다.'\"></i> */}\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">새 비밀번호</div>\r\n\t\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t\t// placeholder=\"새 비밀번호\"\r\n\t\t\t\t\t\t\t\t\t{...register(\"newPassword\", {\r\n\t\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">새 비밀번호 확인</div>\r\n\t\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t\t// placeholder=\"새 비밀번호 확인\"\r\n\t\t\t\t\t\t\t\t\t{...register(\"newPasswordConfirm\", {\r\n\t\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<RedirectAndInputErrors />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in flex-spacebetween\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"cancel-btn\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/mypage/info\" style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"user-btn-text\">취소하기</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"editUserInfo-btn\">\r\n\t\t\t\t\t\t\t\t<div className=\"user-btn-text\">저장하기</div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* <div className=\"user-box-in\">\r\n\t\t\t\t\t\t<button className=\"user-btn editPassword-btn-cancel\">\r\n\t\t\t\t\t  \t<div className=\"user-btn-text editPassword-btn-text-cancel\">비밀번호 변경 취소하기</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 여기에 비밀번호 찾기?? */}\r\n\t\t\t\t{/* <div className=\"editPassword-delete-box\">\r\n\t\t\t\t<div className=\"editPassword-delete\">\r\n\t\t\t\t\t<a className=\"editPassword-delete-tag\" href=\"/\">링카 계정을 완전히 지우고 싶어요</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default EditPassword;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\UserInfo.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeTrashcan.tsx",["555","556"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/home.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport Toast from \"../../components/Toast\";\r\nimport ClearTrashcanModal from \"../../components/Modal/ClearTrashcanModal\";\r\n\r\nfunction HomeUnanswered() {\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst page = searchParams.get(\"page\");\r\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\r\n\tconst [totalPages, setTotalPages] = useState<number>();\r\n\tconst [pageNumber, setPageNumber] = useState(0);\r\n\tconst [userName, setUserName] = useState<String>();\r\n\r\n\tconst pageAddress = \"trashcan\";\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t\tsetQuestionList(res.data.questions.content);\r\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.questions.number);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\t// 모달창 노출 여부 state\r\n\tconst [showReq, setShowReq] = useState<boolean>(false);\r\n\r\n\tfunction openReq() {\r\n\t\tsetShowReq(!showReq);\r\n\t}\r\n\r\n\tfunction closeReq() {\r\n\t\tsetShowReq(!showReq);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t<Navigation\r\n\t\t\t\tpage={page}\r\n\t\t\t\tpageAddress={pageAddress}\r\n\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t/>\r\n\t\t\t<ClearTrashcanModal open={showReq} close={closeReq} />\r\n\t\t\t<div className=\"container-body\">\r\n\t\t\t\t<QuestionNoteList questionList={questionList} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"clear-trashcan\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"/buttons/home-trashcan-tab-active-button.svg\"\r\n\t\t\t\t\tonClick={openReq}\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"clear-trashcan-text\">비우기</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomeUnanswered;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeAnswered.tsx",["557"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nfunction HomeAnswered() {\r\n\tconst [userName, setUserName] = useState<String>();\r\n\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst page = searchParams.get(\"page\");\r\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\r\n\tconst [totalPages, setTotalPages] = useState<number>();\r\n\tconst [pageNumber, setPageNumber] = useState(0);\r\n\tconst pageAddress = \"answered\";\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t\tsetQuestionList(res.data.questions.content);\r\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.questions.number);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t<Navigation\r\n\t\t\t\tpage={page}\r\n\t\t\t\tpageAddress={pageAddress}\r\n\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t/>\r\n\t\t\t<div className=\"container-body\">\r\n\t\t\t\t<QuestionNoteList questionList={questionList} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomeAnswered;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeCollection.tsx",["558"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nfunction HomeCollection() {\r\n\tconst [userName, setUserName] = useState<String>();\r\n\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst page = searchParams.get(\"page\");\r\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\r\n\tconst [totalPages, setTotalPages] = useState<number>();\r\n\tconst [pageNumber, setPageNumber] = useState(0);\r\n\tconst pageAddress = \"collection\";\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t\tsetQuestionList(res.data.questions.content);\r\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.questions.number);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t<Navigation\r\n\t\t\t\tpage={page}\r\n\t\t\t\tpageAddress={pageAddress}\r\n\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t/>\r\n\t\t\t<div className=\"container-body\">\r\n\t\t\t\t<QuestionNoteList questionList={questionList} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HomeCollection;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeUnanswered.tsx",["559"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst HomeUnanswered = () => {\r\n\tconst [userName, setUserName] = useState<String>();\r\n\r\n\tconst [searchParams] = useSearchParams();\r\n\tconst page = searchParams.get(\"page\");\r\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\r\n\tconst [totalPages, setTotalPages] = useState<number>();\r\n\tconst [pageNumber, setPageNumber] = useState(0);\r\n\tconst pageAddress = \"unanswered\";\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/home/\" + pageAddress + \"?page=\" + page)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t\tsetQuestionList(res.data.questions.content);\r\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.questions.number);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{/* <PageLoad/> */}\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t<Navigation\r\n\t\t\t\tpage={page}\r\n\t\t\t\tpageAddress={pageAddress}\r\n\t\t\t\ttotalPages={totalPages}\r\n\t\t\t\tpageNumber={pageNumber}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className=\"container-body\">\r\n\t\t\t\t<QuestionNoteList questionList={questionList} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomeUnanswered;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\question\\AnswerCompletedPage.tsx",["560","561"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport AnsweredQuestionNote from \"../../components/AnsweredQuestionNote\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport \"../../styles/answerCompletedPage.css\";\r\n\r\nfunction AnswerCompletedPage() {\r\n\tconst [userName, setUserName] = useState<String>();\r\n\r\n\tconst { questionId } = useParams();\r\n\t// const {params} = useParams();\r\n\t// const questionId = params.questionId;\r\n\tconst [question, setQuestion] = useState<any>([]);\r\n\tconst [answer, setAnswer] = useState<any>([]);\r\n\tconst [questionList, setQuestionList] = useState<any[]>([]);\r\n\r\n\tconst [totalPages, setTotalPages] = useState<Number>(0);\r\n\tconst [pageNumber, setPageNumber] = useState<Number>(0);\r\n\r\n\t// const { page } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/question/\" + questionId + \"/completed/user/0\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetQuestionList(res.data.questions.content);\r\n\t\t\t\tsetQuestion(res.data.question);\r\n\t\t\t\tsetAnswer(res.data.answer);\r\n\t\t\t\tsetTotalPages(res.data.questions.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.questions.number + 2);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, [questionId]);\r\n\r\n\tfunction BtnToViewMore() {\r\n\t\tfunction handleClick(e: any) {\r\n\t\t\tlet newPage = pageNumber;\r\n\t\t\tconsole.log(\"newPage=\" + newPage);\r\n\t\t\tconsole.log(\"pageNumber=\" + pageNumber);\r\n\t\t\tconsole.log(\"totalPages=\" + totalPages);\r\n\t\t\tif (totalPages === undefined) {\r\n\t\t\t} else if (newPage >= totalPages) {\r\n\t\t\t} else {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.get(\"/question/\" + questionId + \"/completed/user/\" + newPage)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t// setQuestionList1(res.data.questions.content);\r\n\r\n\t\t\t\t\t\tconst a: any[] = res.data.questions.content;\r\n\t\t\t\t\t\tconsole.log(\"a=\" + res.data.questions.content);\r\n\t\t\t\t\t\tlet mapTemp = [];\r\n\t\t\t\t\t\tif (questionList) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < questionList.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(questionList[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (a) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < a.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(a[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (mapTemp) {\r\n\t\t\t\t\t\t\tsetQuestionList(mapTemp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetTotalPages(res.data.questions.totalPages);\r\n\t\t\t\t\t\tsetPageNumber(res.data.questions.number + 1);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{questionList ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{questionList.length > 0 ? (\r\n\t\t\t\t\t\t\t<div className=\"UserHome-viewMore-btn-box\">\r\n\t\t\t\t\t\t\t\t{totalPages === pageNumber ? undefined : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"UserHome-viewMore-btn-container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"UserHome-viewMore-btn-section\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"UserHome-viewMore-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t+ 더보기\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\t// function BtnToViewMore() {\r\n\t// \tfunction handleClick(e: any) {\r\n\t// \t\tif (page){setNewPage(page + 1);}\r\n\t// \t\tconsole.log(\"totalPages=\" + totalPages);\r\n\t// \t\tconsole.log(\"newPage=\" + newPage);\r\n\t// \t\tif (totalPages === undefined) {\r\n\t// \t\t} else if (newPage >= totalPages) {\r\n\t// \t\t} else {\r\n\t// \t\t\taxios\r\n\t// \t\t\t\t.get(\"/question/\" + questionId + \"/completed/user?page=\"+ newPage)\r\n\t// \t\t\t\t.then((res) => {\r\n\t// \t\t\t\t\tconsole.log(res.data);\r\n\t// \t\t\t\t\t// setQuestionList1(res.data.questions.content);\r\n\t// \t\t\t\t\tconst a:any[]=res.data.questions.content;\r\n\t// \t\t\t\t\tlet mapTemp = [];\r\n\t// \t\t\t\t\tif (questionList) {\r\n\t// \t\t\t\t\t\tfor (let idx = 0; idx < questionList.length; idx++) {\r\n\t// \t\t\t\t\t\t\tmapTemp.push(questionList[idx]);\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t\tif (a) {\r\n\t// \t\t\t\t\t\tfor (let idx = 0; idx < a.length; idx++) {\r\n\t// \t\t\t\t\t\t\tmapTemp.push(a[idx]);\r\n\t// \t\t\t\t\t\t}\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t\tif (mapTemp) {\r\n\t// \t\t\t\t\t\tsetQuestionList(mapTemp);\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t\tsetTotalPages(res.data.totalPages);\r\n\t// \t\t\t\t})\r\n\t// \t\t\t.catch((err) => {\r\n\t// \t\t\t\t\tconsole.log(err);\r\n\t// \t\t\t\t});\r\n\t// \t\t}\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<div>\r\n\t// \t\t\t{totalPages === newPage ? undefined : (\r\n\t// \t\t\t\t<div className=\"AnswerCompleted-viewMore-btn-container\">\r\n\t// \t\t\t\t<div className=\"AnswerCompleted-viewMore-btn-section\">\r\n\t// \t\t\t\t\t<button className=\"AnswerCompleted-viewMore-btn\" onClick={handleClick}>\r\n\t// \t\t\t\t\t\t+ 더보기\r\n\t// \t\t\t\t\t</button>\r\n\t// \t\t\t\t</div>\r\n\t// \t\t\t</div>\r\n\t// \t\t\t)}\r\n\t// \t\t</div>\r\n\t// \t);\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t<div className=\"contents-container\">\r\n\t\t\t\t<div className=\"questionPage-the-question-container\">\r\n\t\t\t\t\t<AnsweredQuestionNote question={question} answer={answer} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"QuestionPage-hr-box\">\r\n\t\t\t\t\t<hr className=\"QuestionPage-hr\" />\r\n\r\n\t\t\t\t\t<div className=\"QuestionPage-hr-text\">미응답 질문들</div>\r\n\t\t\t\t\t<hr className=\"QuestionPage-hr\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"questionPage-container-body\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<QuestionNoteList questionList={questionList} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<BtnToViewMore />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default AnswerCompletedPage;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionAnswered.tsx",["562","563"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport EditAnswerFormQuestionNote from \"../../components/EditAnswerFormQuestionNote\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport QuestionNoteList from \"../../components/QuestionNoteList\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/question-page.css\";\r\n\r\nfunction QuestionAnswered() {\r\n\tconst params = useParams();\r\n\tconst paramsQuestionId = params.questionId;\r\n\r\n\t// const [questionList, setQuestionList] = useState<any[]>([]);\r\n\tconst [userName, setUserName] = useState<String>();\r\n\tconst [question, setQuestion] = useState<any>([]);\r\n\tconst [oldAnswer, setOldAnswer] = useState<any>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/question/\" + paramsQuestionId + \"/edit/user\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t// setQuestionList(res.data.questions);\r\n\t\t\t\tsetQuestion(res.data.question);\r\n\t\t\t\tsetOldAnswer(res.data.oldAnswer);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, [paramsQuestionId]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t<div className=\"contents-container\">\r\n\t\t\t\t<div className=\"questionPage-the-question-container\">\r\n\t\t\t\t\t<EditAnswerFormQuestionNote\r\n\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\toldAnswer={oldAnswer}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 퀘스쳔리스트 삭제^^ */}\r\n\t\t\t\t{/* <div className=\"QuestionPage-hr-box\">\r\n\t\t\t\t\t\t<hr className=\"QuestionPage-hr\" />\r\n\r\n\t\t\t\t\t\t<div className=\"QuestionPage-hr-text\">미응답 질문들</div>\r\n\t\t\t\t\t\t<hr className=\"QuestionPage-hr\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"questionPage-container-body\">\r\n\t\t\t\t\t\t<QuestionNoteList questionList={questionList} />\r\n\t\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionAnswered;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionUnanswered.tsx",["564","565"],[],"import axios from \"axios\";\r\nimport React, { useState, useEffect, Component } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AnswerFormQuestionNote from \"../../components/AnswerFormQuestionNote\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport QuestionList from \"../../components/QuestionNoteList\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/question-page.css\";\r\n\r\nfunction QuestionUnanswered() {\r\n\t// const history = useHistory();\r\n\t// useEffect(() => {\r\n\t//   const listenBackEvent = () => {\r\n\t//     // 뒤로가기 할 때 수행할 동작을 적는다\r\n\t//   };\r\n\r\n\t//   const unlistenHistoryEvent = history.listen(({ action }) => {\r\n\t//     if (action === \"POP\") {\r\n\t//       listenBackEvent();\r\n\t//     }\r\n\t//   });\r\n\r\n\t//   return unlistenHistoryEvent;\r\n\t// }, [\r\n\t// // effect에서 사용하는 state를 추가\r\n\t// ]);\r\n\r\n\tconst params = useParams();\r\n\tconst paramsQuestionId = params.questionId;\r\n\r\n\tconst [userName, setUserName] = useState<String>();\r\n\t// const [questionList, setQuestionList] = useState<any[]>([]);\r\n\tconst [question, setQuestion] = useState<any>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/question/\" + paramsQuestionId + \"/unanswered/user\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t// setQuestionList(res.data.questions);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t\tsetQuestion(res.data.question);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, [paramsQuestionId]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Header userName={userName} />\r\n\r\n\t\t\t<div className=\"contents-container\">\r\n\t\t\t\t<div className=\"questionPage-the-question-container\">\r\n\t\t\t\t\t<AnswerFormQuestionNote question={question} />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* 퀘스쳔리스트 삭제^^ */}\r\n\t\t\t\t{/* <div className=\"QuestionPage-hr-box\">\r\n\t\t\t\t\t<hr className=\"QuestionPage-hr\" />\r\n\r\n\t\t\t\t\t<div className=\"QuestionPage-hr-text\">미응답 질문들</div>\r\n\t\t\t\t\t<hr className=\"QuestionPage-hr\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"questionPage-container-body\">\r\n\t\t\t\t\t<div className=\"QuestionPage-down-background-img\">\r\n\t\t\t\t\t\t<QuestionList questionList={questionList} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionUnanswered;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\anony\\UserHome.tsx",["566","567","568","569"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport QuestionNoteListAnony from \"../../components/QuestionNoteListAnony\";\r\nimport SendQuestionForm from \"../../components/SendQuestionFormUserHome\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/userHome.css\";\r\n\r\nimport { toast, ToastContainer, Zoom } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { IAnswer, IQuestion } from \"../../components/types\";\r\nimport HeaderNoProfile from \"../../components/Header/HeaderNoProfile\";\r\n\r\nfunction UserHome() {\r\n\tconst params = useParams();\r\n\tconst userName = String(params.userName);\r\n\tconst [userRingcardName, setUseRingcardrName] = useState<String>();\r\n\r\n\tconst [map, setMap] = useState<[IQuestion, IAnswer][]>();\r\n\r\n\tconst [totalPages, setTotalPages] = useState<Number>(0);\r\n\tconst [pageNumber, setPageNumber] = useState<Number>(0);\r\n\tconst questionId = \"dummy\";\r\n\t// const { page } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/userHome/\" + userName + \"/0\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetUseRingcardrName(res.data.userRingcardName);\r\n\t\t\t\tsetMap(res.data.map);\r\n\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tfunction BtnToViewMore() {\r\n\t\tfunction handleClick(e: any) {\r\n\t\t\tconst newPage = pageNumber;\r\n\t\t\tconsole.log(\"newPage=\" + newPage);\r\n\t\t\tconsole.log(\"pageNumber=\" + pageNumber);\r\n\t\t\tif (totalPages === undefined) {\r\n\t\t\t} else if (newPage >= totalPages) {\r\n\t\t\t} else {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.get(\"/userHome/\" + userName + \"/\" + newPage)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\tconst b: [[IQuestion, IAnswer]] = res.data.map;\r\n\t\t\t\t\t\t// [IQuestion, IAnswer]\r\n\t\t\t\t\t\t// 새로운 맵에 넣고, 그 맵을 다시 setMap 하자.\r\n\t\t\t\t\t\tlet mapTemp = [];\r\n\t\t\t\t\t\tif (map) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < map.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(map[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (b) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < b.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(b[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (mapTemp) {\r\n\t\t\t\t\t\t\tsetMap(mapTemp);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\r\n\t\t\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{map ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{map.length > 0 ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{totalPages === pageNumber ? undefined : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"UserHome-viewMore-btn-container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"UserHome-viewMore-btn-section\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"UserHome-viewMore-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t+ 더보기\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<HeaderNoProfile />\r\n\r\n\t\t\t<div className=\"contents-container block\">\r\n\t\t\t\t<div className=\"UserHome-profile-box\">\r\n\t\t\t\t\t<img src=\"/profile-imgs/oring_1.png\" alt=\"\" />\r\n\t\t\t\t\t<div className=\"UserHome-profile-username\">\r\n\t\t\t\t\t\t{userRingcardName}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"UserHome-SendQuestionForm-container\">\r\n\t\t\t\t\t<SendQuestionForm userName={userName} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"UserHome-questionlist-box\">\r\n\t\t\t\t\t<div className=\"UserHome-down-background-img\">\r\n\t\t\t\t\t\t<div style={{ height: \"30px\" }}></div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{map ? (\r\n\t\t\t\t\t\t\t\t<QuestionNoteListAnony questionId={questionId} map={map} />\r\n\t\t\t\t\t\t\t) : undefined}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<BtnToViewMore />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UserHome;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteList.tsx",["570"],[],"import React from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { IQuestion } from \"./types\";\r\n\r\nimport QuestionNote from \"./QuestionNote\";\r\n\r\nexport interface Props {\r\n\tquestionList: IQuestion[];\r\n}\r\n\r\nfunction QuestionNoteList(props: Props) {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"question-notes-container\">\r\n\t\t\t\t{props.questionList.map((question, idx) => (\r\n\t\t\t\t\t<QuestionNote key={idx} idx={idx} question={question} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default QuestionNoteList;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\AnsweredQuestionNote.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerFormQuestionNote.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\AnswerFormQuestionNote.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNote.tsx",["571"],[],"import { IQuestion } from \"./types\";\r\nimport QuestionFooter from \"./QuestionNoteFooter\";\r\nimport \"../styles/question.css\";\r\nimport NowDate from \"./NowDate\";\r\nimport HyperlinkBox from \"./HyperlinkBox\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { forEachChild } from \"typescript\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n\tidx: number;\r\n\tquestion: IQuestion;\r\n}\r\n\r\nfunction QuestionNote(props: Props) {\r\n\tconst idx = props.idx;\r\n\tconst question = props.question;\r\n\r\n\tconst tapePositionList = [\r\n\t\t\"width: 130px; height: 28px; margin: 0 auto; margin-top: -25px;\",\r\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -22.5px; transform: rotate(6deg);\",\r\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: -10px auto -15px -40px;\",\r\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: -20px auto -30px -30px;\",\r\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: -12px -40px -10px auto;\",\r\n\t\t\"width: 100px; height: 28px; transform: rotate(36deg); margin: -10px -40px -10px auto;\",\r\n\t];\r\n\tconst chosenPosition = tapePositionList[question.tapePosition - 1];\r\n\r\n\tconst qIdStr = String(question.id);\r\n\tconst tapeTypeStr = String(question.tapeType);\r\n\tconst tapeUrl = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst eachNote = document.getElementById(qIdStr);\r\n\t\teachNote?.setAttribute(\"style\", chosenPosition);\r\n\t});\r\n\r\n\tconst qNoteType = String(question.noteType);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"question-note\"\r\n\t\t\tkey={idx}\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}.png\")`,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"QuestionNote-maskingTape-box\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tclassName=\"QuestionNote-maskingTape-img\"\r\n\t\t\t\t\tid={qIdStr}\r\n\t\t\t\t\tsrc={tapeUrl}\r\n\t\t\t\t\talt=\"\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"note-header\">\r\n\t\t\t\t<div className=\"note-profile-pic\">\r\n\t\t\t\t\t<img src=\"/profile-imgs/oring_2.png\" alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className=\"note-time\">{nowDate}</div> */}\r\n\t\t\t\t<NowDate questionUploadTime={question.uploadTime} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{question.answered === true ? (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={\"/question/\" + question.id + \"/edit/user\"}\r\n\t\t\t\t\tclassName=\"note-link\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"note-content-box\">\r\n\t\t\t\t\t\t<div className=\"note-content\">{question.questionContents}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t) : (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tto={\"/question/\" + question.id + \"/unanswered/user\"}\r\n\t\t\t\t\tclassName=\"note-link\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"note-content-box\">\r\n\t\t\t\t\t\t<div className=\"note-content\">{question.questionContents}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\r\n\t\t\t{question.questionHyperlink == null ||\r\n\t\t\tquestion.questionHyperlink === \"\" ? undefined : (\r\n\t\t\t\t<div className=\"QuestionNote-note-hyperlink-box\">\r\n\t\t\t\t\t<HyperlinkBox hyperlinkContent={question.questionHyperlink} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t<hr className=\"note-hr\" />\r\n\t\t\t<QuestionFooter question={question} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionNote;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerForm.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\AnswerForm.tsx",["572","573","574","575"],[],"import axios from \"axios\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getCookie } from \"../pages/auth/Cookie\";\r\nimport \"../styles/answerQuestionNote.css\";\r\nimport html2canvas from 'html2canvas';\r\n\r\nexport interface Props {\r\n\tquestionId: number;\r\n\tquestionContents: string;\r\n}\r\n\r\nfunction AnswerForm(props: Props) {\r\n\tconst questionId = String(props.questionId);\r\n\t// 트위터 이미지로 전환할 질문 내용.\r\n\tconst questionContents = props.questionContents;\r\n\tconst [answerContents, setAnswerContents] = useState();\r\n\r\n\tconst [cookies, setCookie, removeCookie] = useCookies(['accessToken']);\r\n\r\n\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\t\t// 섭밋할 때의 data.answerContents : 트위터에 텍스트로 들어갈 답변 내용.\r\n\t\t\r\n\t\tconsole.log(questionContents);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/question/\" + questionId + \"/unanswered/user\", data)\r\n\t\t\t.then(async(res) => {\r\n\t\t\t\tconsole.log(\"posthere\");\r\n\t\t\t\tconsole.log(data.answerContents);\r\n\t\t\t\tsetAnswerContents(data.answerContents);\r\n\t\t\t\t// window.location.href = \"/question/\" + questionId + \"/completed/user\";\r\n\r\n\t\t\t\tif(checked){\r\n\t\t\t\t\tconst tweetData = {\r\n\t\t\t\t\t\ttext: \"질문 : \" + questionContents + \"\\n답변 : \" + data.answerContents + \" https://m.place.naver.com/restaurant/1720673456/home?entry=ple\"\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// const tweetDataTest = {\r\n\t\t\t\t\t// \t\t\t\t\t\"text\": \"Testing, testing...\\n\\nA new way to have a convo with exactly who you want. We’re starting with a small % globally, so keep your 👀 out to see it in action. https://t.co/pV53mvjAVT\",\r\n\t\t\t\t\t// \t\t\t\t\t\"id\": \"1263145271946551300\",\r\n\t\t\t\t\t// \t\t\t\t\t\"attachments\": {\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"media_keys\": [\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\"13_1263145212760805376\"\r\n\t\t\t\t\t// \t\t\t\t\t\t\t]\r\n\t\t\t\t\t// \t\t\t\t\t}\r\n\t\t\t\t\t// \t\t};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// const media = \r\n\t\t\t\t\t// \t\t\t\t{\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"duration_ms\": 46947,\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"type\": \"video\",\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"height\": 1080,\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"media_key\": \"13_1263145212760805376\",\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"public_metrics\": {\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\"view_count\": 6909260\r\n\t\t\t\t\t// \t\t\t\t\t\t\t},\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"preview_image_url\": \"https://pbs.twimg.com/media/EYeX7akWsAIP1_1.jpg\",\r\n\t\t\t\t\t// \t\t\t\t\t\t\t\"width\": 1920\r\n\t\t\t\t\t// \t\t\t\t\t};\r\n\r\n\t\t\t\tawait axios({\r\n\t\t\t\t\t\tmethod: 'post',\r\n\t\t\t\t\t\t// url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets?expansions=attachments.media_keys&media.fields=duration_ms,height,media_key,preview_image_url,public_metrics,type,url,width,alt_text',\r\n\r\n\t\t\t\t\t\turl: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n\t\t\t\t\t\t// url: 'https://upload.twitter.com/1.1/media/upload.json?media_category=tweet_image',\r\n\r\n\r\n\r\n\t\t\t\t\t\tdata: tweetData,\r\n\t\t\t\t\t\t// media: media,\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Authorization': `Bearer ${cookies.accessToken.accessToken}`,\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}).then((res) => {\r\n\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t// alert(\"생성이 완료되었습니다.\");\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\twindow.location.href = \"/question/\" + questionId + \"/completed/user\";\r\n\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\t// The request was made and the server responded with a status code\r\n\t\t\t\t\t// that falls out of the range of 2xx\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tconsole.log(error.response.headers);\r\n\t\t\t\t} else if (error.request) {\r\n\t\t\t\t\t// The request was made but no response was received\r\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t\t\t\t// http.ClientRequest in node.js\r\n\t\t\t\t\tconsole.log(error.request);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\r\n\t\t\t\t\tconsole.log(\"Error\", error.message);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\t// function BtnToCreateTweet(){\r\n\t// \tfunction handleClick(e: any){\r\n\t// \t\tconsole.log(cookies.accessToken);\r\n  //     const data = {\r\n  //       text: \"질문 : \" + questionContents + \"\\n 답변 :\" + answerContents\r\n  //     };\r\n\r\n  //     axios({\r\n  //       method: 'post',\r\n  //       url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n  //       data: data,\r\n  //       headers: {\r\n  //         'Authorization': `Bearer ${cookies.accessToken.accessToken}`,\r\n  //       }\r\n\r\n  //     }).then((res) => {\r\n  //       console.log(res);\r\n  //       // alert(\"생성이 완료되었습니다.\");\r\n  //       });\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<button onClick={handleClick}>\r\n  //       CreateTweet\r\n\t// \t\t</button>\r\n\t// \t);\r\n\t// }\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\t// formState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// 유저 입력 값을 넣을 변수\r\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\r\n\r\n\t// 줄 수를 계산해서 저장할 변수\r\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\r\n\r\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\r\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\r\n\tconst checkItemChangeHandler = (event: any) => {\r\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t\tsetCheckItemContent(event.target.value);\r\n\t};\r\n\r\n\tfunction checkLengthHandler(event: any) {\r\n\t\tvar text = event.target.value;\r\n\t\tvar test_length = text.length;\r\n\r\n\t\t//최대 글자수\r\n\t\tvar max_length = 5000;\r\n\r\n\t\tif (test_length > max_length) {\r\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\r\n\t\t\ttext = text.substr(0, max_length);\r\n\t\t\tevent.target.value = text;\r\n\t\t\tevent.target.focus();\r\n\t\t}\r\n\t}\r\n\r\n\t// checkBox Start\r\n\tconst [checked, setChecked] = useState(false);\r\n\r\n\tconst checkHandler = (event:any) => {\r\n\t\tif(checked){\r\n\t\t\tsetChecked(false);\r\n\t\t}else if(checked === false){\r\n\t\t\tsetChecked(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst CheckToSendTwitter = () => {\r\n  return (\r\n    <div>\r\n      <input type=\"checkbox\" checked={checked} onChange={(e) => checkHandler(e)} />\r\n    </div>\r\n  \t);\r\n\t};\r\n\t// checkBox Fin.\r\n\r\n\tconst printRef = useRef<HTMLInputElement>(null);\r\n\t// const printRef = useRef();\r\n\r\n  const handleDownloadImage = async () => {\r\n    const element:any = printRef.current;\r\n    const canvas = await html2canvas(element);\r\n\r\n    const data = canvas.toDataURL('image/jpg');\r\n    const link = document.createElement('a');\r\n\r\n    if (typeof link.download === 'string') {\r\n      link.href = data;\r\n      link.download = 'image.jpg';\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      window.open(data);\r\n    }\r\n  };\r\n\r\n\treturn (\r\n\t\t<form className=\"answerForm-answer-form\" onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"answerForm-text-box checkItem\">\r\n\t\t\t\t<span className=\"cursur-bar\">|</span>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tid=\"answerAdd\"\r\n\t\t\t\t\tclassName=\"answerForm-textarea\"\r\n\t\t\t\t\tvalue={checkItemContent}\r\n\t\t\t\t\tonInput={checkItemChangeHandler}\r\n\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: (textareaHeight + 1) * 27 + \"px\",\r\n\t\t\t\t\t\twhiteSpace: \"pre-wrap\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tplaceholder=\"답변을 적어주세요\"\r\n\t\t\t\t\t{...register(\"answerContents\", {\r\n\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t})}\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"answerForm-btn-box\">\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{/* <BtnToCreateTweet/> */}\r\n\t\t\t\t<p>Post Tweet?</p>\r\n\t\t\t\t<CheckToSendTwitter/>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AnswerForm;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteFooter.tsx",["576","577","578","579","580"],[],"import React from \"react\";\r\nimport { IQuestion } from \"./types\";\r\nimport \"../styles/question.css\";\r\nimport axios from \"axios\";\r\nimport { Link, Route, Routes } from \"react-router-dom\";\r\nimport QuestionUnanswered from \"../pages/question/QuestionUnanswered\";\r\n\r\nexport interface FooterProps {\r\n\tquestion: IQuestion;\r\n}\r\n\r\nfunction FooterUnansweredQuestion(props: FooterProps) {\r\n\tconst question = props.question;\r\n\r\n\tconst handleTrashcanClick = async () => {\r\n\t\tconst questionId = String(question.id);\r\n\t\tawait axios\r\n\t\t\t.get(\"/question/\" + questionId + \"/delete/question\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleTrashcanClick in QuestionNoteFooter :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\twindow.history.go(0); // referrer로 이전 페이지를 받아오면 안 된다. 현재 페이지를 해야됨!!!\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleRestoreClick = async () => {\r\n\t\tconst questionId = String(question.id);\r\n\t\tawait axios\r\n\t\t\t.get(\"/question/\" + questionId + \"/restore/question\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleRestoreClick in QuestionNoteFooter :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\twindow.history.go(0);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleCollectionClick = async () => {\r\n\t\tconst questionId = String(question.id);\r\n\t\tawait axios\r\n\t\t\t.get(\"/question/\" + questionId + \"/inCollection\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleCollectionClick in QuestionNoteFooter :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\twindow.history.go(0);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleSendAnswerClick = async () => {\r\n\t\tconst questionId = String(question.id);\r\n\t\tawait axios\r\n\t\t\t.get(\"/question/\" + questionId + \"/unanswered/user\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleSendAnswerClick in QuestionNoteFooter :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleEditAnswerClick = async () => {\r\n\t\tconst questionId = String(question.id);\r\n\t\tawait axios\r\n\t\t\t.get(\"/question/\" + questionId + \"/edit/user\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleEditAnswerClick in QuestionNoteFooter :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleDeleteAnswerClick = async () => {\r\n\t\tconst questionId = String(question.id);\r\n\t\tawait axios\r\n\t\t\t.get(\"/question/\" + questionId + \"/deleteAnswer\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleDeleteAnswerClick in QuestionNoteFooter :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\twindow.history.go(0);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"note-footer\">\r\n\t\t\t\t<div className=\"note-footer-leftside-btns-container\">\r\n\t\t\t\t\t{question.inTrash === false ? (\r\n\t\t\t\t\t\t<button onClick={handleTrashcanClick}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"note-trashcan-btn\"\r\n\t\t\t\t\t\t\t\tsrc=\"/buttons/note-trashcan-btn.svg\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<button onClick={handleRestoreClick}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"note-trashcan-btn\"\r\n\t\t\t\t\t\t\t\tsrc=\"/buttons/restore-from-trashcan-button.svg\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<button onClick={handleCollectionClick}>\r\n\t\t\t\t\t\t{question.inCollection === false ? (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"note-collection-btn\"\r\n\t\t\t\t\t\t\t\tsrc=\"/buttons/note-collection-btn.svg\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"note-collection-btn\"\r\n\t\t\t\t\t\t\t\tsrc=\"/buttons/note-collection-active-btn.svg\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"note-footer-rightside-btns-container\">\r\n\t\t\t\t\t{question.answered === false ? (\r\n\t\t\t\t\t\t<Link to={`/question/${question.id}/unanswered/user`}>\r\n\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\t\t\t\tsrc=\"/buttons/send-answer-btn.svg\"\r\n\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Link to={`/question/${question.id}/edit/user`}>\r\n\t\t\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"note-edit-answer-btn\"\r\n\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/edit-answer-btn.svg\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<button onClick={handleDeleteAnswerClick}>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=\"note-delete-answer-btn\"\r\n\t\t\t\t\t\t\t\t\tsrc=\"/buttons/delete-answer-btn.svg\"\r\n\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default FooterUnansweredQuestion;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\UserProfile.tsx",["581","582","583"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../styles/user/userHeader.css\";\r\nimport \"../styles/user/userBox.css\";\r\nimport \"../styles/user/userIcon.css\";\r\n\r\nfunction UserProfile() {\r\n\treturn (\r\n\t\t<div className=\"user-profile-img\">\r\n\t\t\t<img alt=\"\" src=\"/profile-imgs/oring_1.png\" width=\"77px\" color=\"white\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// export interface Props {\r\n//   user: User[];\r\n// }\r\n\r\n// function UserProfile(props: Props) {\r\n// \treturn (\r\n// <>\r\n//   <div className=\"userInfo-profile-container\"></div>\r\n//       <div className=\"user-profile-img\">\r\n//         <img alt=\"\" src=\"/profile.png\" width=\"77px\" color=\"white\" />\r\n//       </div>\r\n//     {props.user.map((userRingcardName) =>(<div className=\"user-profile-name\" valu></div>))}>\r\n\r\n// </>\r\n// \t);\r\n// }\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\DeleteAccount.tsx",["584","585","586"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/deleteAccount.css\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport UserProfile from \"../../components/UserProfile\";\r\nimport HeaderNoProfile from \"../../components/Header/HeaderNoProfile\";\r\n\r\n\r\nconst DeleteAccount = () => {\r\n\r\n\ttype ResponseList = {\r\n\t\tpasswordError: boolean;\r\n\t}\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tpasswordError: false\r\n\t});\r\n\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\t\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/mypage/delete/account\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors(){\r\n\t\tif(response.passwordError){\r\n\t\t\treturn (\r\n\t\t\t<div className=\"user-text-error\">passwordError</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse if(submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\"\r\n\t\t\treturn (null);\r\n\t\t}\r\n\t\treturn (null);\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t// eslint-disable-next-line react-hooks/rules-of-hooks\r\n\t} = useForm();\r\n\r\n\tconst [user, setUser] = useState<any>([]);\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/mypage/info\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetUser(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\t\r\n\tfunction ButtonToUserInfo(){\r\n\t\tfunction handleClick(e: any){\r\n\t\t\t\twindow.location.href=\"/mypage/info\"\r\n\t\t}\r\n\t\t\treturn(\r\n\t\t\t\t<button className=\"user-btn deleteAccount-btn-cancel\" onClick={handleClick}>\r\n\t\t\t\t\t\t<div className=\"user-btn-text deleteAccount-btn-text-cancel\">계속 링카를 사용하기</div>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t)\r\n\t}\r\n\t\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw =()=>{\r\n\tsetShowPw(!showPw);\r\n\t}\r\n\r\n\tfunction handlePwClick(e: any){\r\n    toggleShowPw()\r\n  }\r\n\r\n\tfunction ShowPw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-show-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n  return(\r\n    <button value=\"변경\" className=\"user-hide-pw\" onClick={handlePwClick}></button>\r\n  \t)\r\n\t}\r\n\t// PW toggle fin.\r\n\r\n\treturn (\r\n\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t<div className=\"container\">\r\n\t\t\t<HeaderNoProfile />\r\n      <div className=\"userInfo-profile-container\">\r\n\t\t\t\t<UserProfile/>\r\n\t\t\t\t<div className=\"user-profile-name\">{user.userRingcardName}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t{/* width 줄여도 글자 밑에 박스랑 다른 글자 침범하지 않도록! */}\r\n\t\t\t\t\t<div className=\"user-box-in\" style={{height:'120px'}}>\r\n\t\t\t\t\t\t<div className=\"user-text deleteAccount-text\">탈퇴하실 경우, 회원님의 링카 계정과 그동안 쌓인 질문과 답변들이 전부 즉시 사라집니다.\r\n\t\t\t\t\t\t탈퇴하시겠습니까? 링카드는 울어요ㅠㅠ\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text deleteAccount-text\">탈퇴를 원하시면 비밀번호를 입력해주세요. </div>\r\n\t\t\t\t\t\t<input className=\"user\" placeholder=\"비밀번호를 입력해주세요\" {...register(\"password\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}>\r\n\t\t\t\t\t\t</input>\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text deleteAccount-text\">탈퇴를 원하면 비밀번호를 입력해 주세요.</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\tplaceholder=\"비밀번호를 입력해주세요\"\r\n              {...register(\"password\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t\t\t\t{showPw ? (\r\n\t  \t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n    \t\t\t\t\t) : (\r\n\t  \t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n    \t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text deleteAccount-text\">새 비밀번호</div>\r\n\t\t\t\t\t\t<input className=\"input deleteAccount-input\" placeholder=\"새 비밀번호\"></input>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text deleteAccount-text\">새 비밀번호 확인</div>\r\n\t\t\t\t\t\t<input className=\"input deleteAccount-input\" placeholder=\"새 비밀번호 확인\"></input>\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n            <RedirectAndInputErrors/>\r\n          </div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<button className=\"user-btn deleteAccount-btn\">\r\n\t\t\t\t\t\t<div className=\"user-btn-text\">탈퇴하기</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<ButtonToUserInfo/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/* 여기에 비밀번호 찾기?? */}\r\n\t\t\t{/* <div className=\"deleteAccount-delete-box\">\r\n\t\t\t\t<div className=\"deleteAccount-delete\">\r\n\t\t\t\t\t<a className=\"deleteAccount-delete-text\" href=\"/\">링카 계정을 완전히 지우고 싶어요</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t</form>\r\n\t);\r\n};\r\nexport default DeleteAccount;","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Toast.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\NowDate.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteListAnony.tsx",["587","588","589","590","591","592"],[],"import axios from \"axios\";\r\nimport { url } from \"inspector\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { IAnswer, IQuestion } from \"./types\";\r\n\r\nimport QuestionNoteAnony from \"./QuestionNoteAnony\";\r\nimport React from \"react\";\r\n\r\nexport interface Props {\r\n\tmap: [IQuestion, IAnswer][];\r\n\tquestionId: string;\r\n}\r\n\r\nfunction QuestionNoteList(props: Props) {\r\n\tconst QandAmap = props.map;\r\n\tconst questionId = Number(props.questionId);\r\n\r\n\r\n\treturn (\r\n\t\t// questionId와 겹치는 질문 리스트에서 제거\r\n\t\t<div>\r\n\t\t\t{QandAmap.map((QA, idx) => (\r\n\t\t\t\t<div key={idx}>\r\n\t\t\t\t\t{questionId != QA[0].id ? (\r\n\t\t\t\t\t\t<div className=\"question-notes-container\">\r\n\t\t\t\t\t\t\t<QuestionNoteAnony idx={idx} question={QA[0]} answer={QA[1]} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\r\n\t\t// <div className=\"question-notes-container\">\r\n\t\t// \t{QandAmap.map((QA, idx) => (\r\n\t\t// \t\t<QuestionNoteAnony\r\n\t\t// \t\t\tkey={idx}\r\n\t\t// \t\t\tidx={idx}\r\n\t\t// \t\t\tquestion={QA[0]}\r\n\t\t// \t\t\tanswer={QA[1]}\r\n\t\t// \t\t/>\r\n\t\t// \t))}\r\n\t\t// </div>\r\n\t);\r\n}\r\n\r\nexport default QuestionNoteList;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteAnony.tsx",["593","594"],[],"import { IAnswer, IQuestion } from \"./types\";\r\nimport \"../styles/question.css\";\r\nimport NowDate from \"./NowDate\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport HyperlinkBox from \"./HyperlinkBox\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n\tidx: number;\r\n\tquestion: IQuestion;\r\n\tanswer: IAnswer;\r\n}\r\n\r\nfunction QuestionNoteAnony(props: Props) {\r\n\tconst idx = props.idx;\r\n\tconst question = props.question;\r\n\tconst answer = props.answer;\r\n\tconst [showAnswer, setShowAnswer] = useState<boolean>(false);\r\n\r\n\tconst handleShowAnswerClick = async () => {\r\n\t\tsetShowAnswer(!showAnswer);\r\n\t};\r\n\r\n\tconst tapePositionList = [\r\n\t\t\"width: 130px; height: 28px;  margin: 0 auto;  margin-top: -5px;\",\r\n\t\t\"width: 130px; height: 28px; margin: 0 auto 0 auto; margin-top: -3.5px; transform: rotate(6deg);\",\r\n\t\t\"width: 120px; height: 28px; transform: rotate(-30deg); margin: 10px auto -15px -13px;\",\r\n\t\t\"width: 130px; height: 28px; transform: rotate(-18deg); margin: 7px auto -30px -10px;\",\r\n\t\t\"width: 130px; height: 28px; transform: rotate(20deg); margin: 6px -8px -10px auto;\",\r\n\t\t\"width: 100px; height: 28px; transform: rotate(36deg); margin: 10px -13px -10px auto;\",\r\n\t];\r\n\r\n\tconst chosenPosition = tapePositionList[question.tapePosition - 1];\r\n\r\n\tconst qIdStr = String(question.id);\r\n\tconst tapeTypeStr = String(question.tapeType);\r\n\tconst tapeUrl = String(\"/masking-tapes/tape\" + tapeTypeStr + \".svg\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst eachNote = document.getElementById(qIdStr);\r\n\t\teachNote?.setAttribute(\"style\", chosenPosition);\r\n\t});\r\n\r\n\tconst qNoteType = question.noteType;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"each-question-note-box\">\r\n\t\t\t\t<div className=\"QuestionNote-maskingTape-box\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"QuestionNoteAnony-maskingTape-img\"\r\n\t\t\t\t\t\tid={qIdStr}\r\n\t\t\t\t\t\tsrc={tapeUrl}\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"each-question-note-header-edge-img-box\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-top-edge.png\")`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t></div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"each-question-note-body\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-body.png\")`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"each-note-header\">\r\n\t\t\t\t\t\t<div className=\"note-profile-pic\">\r\n\t\t\t\t\t\t\t<img src=\"/profile-imgs/oring_2.png\" alt=\"\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<NowDate questionUploadTime={question.uploadTime} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <a href=\"/question/<%=question.id%>/anony\" className=\"note-link\"> */}\r\n\t\t\t\t\t<a href={\"/question/\" + qIdStr + \"/anony\"} className=\"note-link\">\r\n\t\t\t\t\t\t<div className=\"each-note-content-box\">\r\n\t\t\t\t\t\t\t<div className=\"each-note-content QuestionNoteAnony-line-limit\">\r\n\t\t\t\t\t\t\t\t{question.questionContents}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t{question.questionHyperlink == null ||\r\n\t\t\t\t\tquestion.questionHyperlink === \"\" ? undefined : (\r\n\t\t\t\t\t\t<div className=\"QuestionNote-note-hyperlink-box\">\r\n\t\t\t\t\t\t\t<HyperlinkBox hyperlinkContent={question.questionHyperlink} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<hr className=\"note-hr\" />\r\n\t\t\t\t\t<div className=\"QuestionNoteAnony-note-footer\">\r\n\t\t\t\t\t\t<div className=\"QuestionNoteAnony-note-footer-btns-container\">\r\n\t\t\t\t\t\t\t<button onClick={handleShowAnswerClick}>\r\n\t\t\t\t\t\t\t\t{showAnswer ? (\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-down-btn.svg\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ transform: \"scaleY(-1)\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"note-send-answer-btn\"\r\n\t\t\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-down-btn.svg\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{showAnswer ? (\r\n\t\t\t\t\t\t\t<div className=\"QuestionNoteAnony-note-content-answer\">\r\n\t\t\t\t\t\t\t\t{answer.answerContents}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : undefined}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"QuestionNoteAnony-each-question-note-footer-edge-img-box\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url(\"/notes/note${qNoteType}-bottom-edge.png\")`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionNoteAnony;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\HyperlinkBox.tsx",["595"],[],"import { Link } from \"react-router-dom\";\r\nimport \"../styles/hyperlinkBox.css\";\r\n\r\nexport interface Props {\r\n\thyperlinkContent: String;\r\n}\r\n\r\nfunction HyperlinkBox(props: Props) {\r\n\tconst handleHyperlinkClick = async () => {\r\n\t\tif (hyperlink.startsWith(\"http\")) {\r\n\t\t\twindow.open(hyperlink, \"_blank\");\r\n\t\t} else {\r\n\t\t\twindow.open(\"https://\" + hyperlink, \"_blank\");\r\n\t\t}\r\n\t};\r\n\tconst hyperlink = String(props.hyperlinkContent);\r\n\treturn (\r\n\t\t<div className=\"HyperlinkBox-container\">\r\n\t\t\t<div className=\"HyperlinkBox-link-icn-container\">\r\n\t\t\t\t<img src=\"/buttons/link-icn.svg\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"HyperlinkBox-hyperlink-container\"\r\n\t\t\t\tonClick={handleHyperlinkClick}\r\n\t\t\t>\r\n\t\t\t\t{hyperlink}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default HyperlinkBox;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\anony\\QuestionAnony.tsx",["596"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AnsweredQuestionNote from \"../../components/AnsweredQuestionNote\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport QuestionNoteListAnony from \"../../components/QuestionNoteListAnony\";\r\nimport SendQuestionForm from \"../../components/SendQuestionFormQuestionAnony\";\r\nimport { IAnswer, IQuestion } from \"../../components/types\";\r\n\r\nimport \"../../styles/questionAnony.css\";\r\n\r\nfunction QuestionAnony() {\r\n\tconst params = useParams();\r\n\tconst questionId = params.questionId;\r\n\tconst [userName, setUserName] = useState<String>();\r\n\r\n\tconst [question, setQuestion] = useState<any>([]);\r\n\tconst [answer, setAnswer] = useState<any>([]);\r\n\r\n\tconst [map, setMap] = useState<[IQuestion, IAnswer][]>();\r\n\r\n\tconst [totalPages, setTotalPages] = useState<Number>(0);\r\n\tconst [pageNumber, setPageNumber] = useState<Number>(0);\r\n\t// const { page } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/question/\" + questionId + \"/anony/0\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetQuestion(res.data.question);\r\n\t\t\t\tsetAnswer(res.data.answer);\r\n\t\t\t\tsetMap(res.data.map);\r\n\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\r\n\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\r\n\t\t\t\tsetUserName(res.data.userName);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tfunction BtnToViewMore() {\r\n\t\tfunction handleClick(e: any) {\r\n\t\t\tconst newPage = pageNumber;\r\n\t\t\tif (totalPages === undefined) {\r\n\t\t\t} else if (newPage >= totalPages) {\r\n\t\t\t} else {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.get(\"/question/\" + questionId + \"/anony/\" + newPage)\r\n\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t\t\t\t// setQuestionList1(res.data.questions.content);\r\n\t\t\t\t\t\tconsole.log(\"a\");\r\n\t\t\t\t\t\tconst b: [[IQuestion, IAnswer]] = res.data.map;\r\n\t\t\t\t\t\t// [IQuestion, IAnswer]\r\n\t\t\t\t\t\t// 새로운 맵에 넣고, 그 맵을 다시 setMap 하자.\r\n\t\t\t\t\t\tlet mapTemp = [];\r\n\t\t\t\t\t\tif (map) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < map.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(map[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (b) {\r\n\t\t\t\t\t\t\tfor (let idx = 0; idx < b.length; idx++) {\r\n\t\t\t\t\t\t\t\tmapTemp.push(b[idx]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log(mapTemp);\r\n\t\t\t\t\t\tif (mapTemp) {\r\n\t\t\t\t\t\t\tsetMap(mapTemp);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsetTotalPages(res.data.pageInfo.totalPages);\r\n\t\t\t\t\t\tsetPageNumber(res.data.pageInfo.number + 1);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{map ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{map.length > 0 ? (\r\n\t\t\t\t\t\t\t<div className=\"QuestionAnony-viewMore-btn-box\">\r\n\t\t\t\t\t\t\t\t{totalPages === pageNumber ? undefined : (\r\n\t\t\t\t\t\t\t\t\t<div className=\"QuestionAnony-viewMore-btn-container\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"QuestionAnony-viewMore-btn-section\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"QuestionAnony-viewMore-btn\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleClick}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t+ 더보기\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{/* <HeaderNoProfile /> */}\r\n\t\t\t<Header userName={userName} />\r\n\t\t\t{/* <div className=\"QuestionAnony-profile-box\">\r\n\t\t\t\t<img src=\"/profile.png\" alt=\"\" />\r\n\t\t\t\t<div className=\"UserHome-profile-username\">{user.userRingcardName}</div>\r\n\t\t\t</div> */}\r\n\t\t\t<div className=\"QuestionAnony-for-not-overflowing\">\r\n\t\t\t\t<img src=\"/background-img/background.png\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"contents-container QuestionAnony-container\">\r\n\t\t\t\t<div className=\"QuestionAnony-the-question-container\">\r\n\t\t\t\t\t<AnsweredQuestionNote question={question} answer={answer} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"QuestionAnony-SendQuestionForm-container\">\r\n\t\t\t\t\t<SendQuestionForm />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"QuestionAnony-hr-box\">\r\n\t\t\t\t\t<hr className=\"QuestionAnony-hr\" />\r\n\r\n\t\t\t\t\t<div className=\"QuestionAnony-hr-text\">다른 응답된 질문들</div>\r\n\t\t\t\t\t<hr className=\"QuestionAnony-hr\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{map && questionId ? (\r\n\t\t\t\t\t\t<QuestionNoteListAnony questionId={questionId} map={map}/>\r\n\t\t\t\t\t) : undefined}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<BtnToViewMore />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default QuestionAnony;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormUserHome.tsx",["597"],[],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"../styles/sendQuestionForm.css\";\r\nimport SelectNoteModal from \"./Modal/SelectNoteModal\";\r\nimport Toastify from \"./Toast\";\r\n\r\nexport interface Props {\r\n\tuserName: String;\r\n}\r\n\r\nfunction SendQuestionFormUserHome(props: Props) {\r\n\tconst userName = props.userName;\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/userHome/\" + userName + \"/\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"posthere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\r\n\t\t\t\tlocalStorage.setItem(\"toastText\", \"질문이 안전하게 전달되었습니다.\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\t// The request was made and the server responded with a status code\r\n\t\t\t\t\t// that falls out of the range of 2xx\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tconsole.log(error.response.headers);\r\n\t\t\t\t} else if (error.request) {\r\n\t\t\t\t\t// The request was made but no response was received\r\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t\t\t\t// http.ClientRequest in node.js\r\n\t\t\t\t\tconsole.log(error.request);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\r\n\t\t\t\t\tconsole.log(\"Error\", error.message);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\t// formState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// 유저 입력 값을 넣을 변수\r\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\r\n\t// 줄 수를 계산해서 저장할 변수\r\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\r\n\r\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\r\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\r\n\tconst checkItemChangeHandler = (event: any) => {\r\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t\tsetCheckItemContent(event.target.value);\r\n\t};\r\n\r\n\tfunction checkLengthHandler(event: any) {\r\n\t\tvar text = event.target.value;\r\n\t\tvar test_length = text.length;\r\n\r\n\t\t//최대 글자수\r\n\t\tvar max_length = 5000;\r\n\r\n\t\tif (test_length > max_length) {\r\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\r\n\t\t\ttext = text.substr(0, max_length);\r\n\t\t\tevent.target.value = text;\r\n\t\t\tevent.target.focus();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clickSelectNoteColorHandler(event: any) {}\r\n\t// 모달창 노출 여부 state\r\n\tconst [showReq, setShowReq] = useState<boolean>(false);\r\n\r\n\tfunction openReq() {\r\n\t\tsetShowReq(!showReq);\r\n\t}\r\n\tfunction closeReq() {\r\n\t\tsetShowReq(!showReq);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"SendQuestionForm-container\">\r\n\t\t\t<Toastify />\r\n\t\t\t<form\r\n\t\t\t\tclassName=\"SendQuestionForm-question-form\"\r\n\t\t\t\tonSubmit={handleSubmit(onSubmit)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"SendQuestionForm-questionForm-box\">\r\n\t\t\t\t\t<div className=\"SendQuestionForm-questionForm-contents-box\">\r\n\t\t\t\t\t\t<span className=\"SendQuestionForm-cursur-bar\">|</span>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid=\"questionAdd\"\r\n\t\t\t\t\t\t\tclassName=\"questionForm-textarea\"\r\n\t\t\t\t\t\t\tvalue={checkItemContent}\r\n\t\t\t\t\t\t\tonInput={checkItemChangeHandler}\r\n\t\t\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\t\t\tstyle={{ height: (textareaHeight + 1) * 20 + \"px\" }}\r\n\t\t\t\t\t\t\tplaceholder=\"질문해 주세요\"\r\n\t\t\t\t\t\t\t{...register(\"questionContents\", {\r\n\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"SendQuestionForm-customize-area-box\">\r\n\t\t\t\t\t\t<div className=\"SendQuestionForm-customize-area\" onClick={openReq}>\r\n\t\t\t\t\t\t\t<SelectNoteModal open={showReq} close={closeReq} />\r\n\t\t\t\t\t\t\t<div className=\"SendQuestionForm-customize-box\">\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-note-color\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#e9e1ec\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className=\"SendQuestionForm-note-color-text\">연보라</div>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-open-modal-btn\"\r\n\t\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-note-select-btn.svg\"\r\n\t\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <div className=\"SendQuestionForm-box\">hi</div> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"SendQuestionForm-hr\" />\r\n\t\t\t\t<div className=\"SendQuestionForm-footer\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"SendQuestionForm-hyperlink-btn\"\r\n\t\t\t\t\t\tsrc=\"/buttons/link-icn.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"hyperLinkAdd\"\r\n\t\t\t\t\t\tclassName=\"QuestionForm-hyperlink-input\"\r\n\t\t\t\t\t\tplaceholder=\"첨부할 사이트 주소를 넣어주세요 (최대 1개)\"\r\n\t\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\t\t{...register(\"questionHyperlink\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"SendQuestionForm-send-question-btn\" type=\"submit\">\r\n\t\t\t\t\t\t<img src=\"/buttons/send-question-btn.svg\" alt=\"\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SendQuestionFormUserHome;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormQuestionAnony.tsx",["598"],[],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../styles/sendQuestionForm.css\";\r\nimport Toastify from \"./Toast\";\r\nimport { IQuestion } from \"./types\";\r\n\r\nfunction SendQuestionFormQuestionAnony() {\r\n\tconst params = useParams();\r\n\tconst paramsQuestionId = params.questionId;\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/question/\" + paramsQuestionId + \"/anony/\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"posthere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\r\n\t\t\t\tlocalStorage.setItem(\"toastText\", \"질문이 안전하게 전달되었습니다.\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tif (error.response) {\r\n\t\t\t\t\t// The request was made and the server responded with a status code\r\n\t\t\t\t\t// that falls out of the range of 2xx\r\n\t\t\t\t\tconsole.log(error.response.data);\r\n\t\t\t\t\tconsole.log(error.response.status);\r\n\t\t\t\t\tconsole.log(error.response.headers);\r\n\t\t\t\t} else if (error.request) {\r\n\t\t\t\t\t// The request was made but no response was received\r\n\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n\t\t\t\t\t// http.ClientRequest in node.js\r\n\t\t\t\t\tconsole.log(error.request);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Something happened in setting up the request that triggered an Error\r\n\t\t\t\t\tconsole.log(\"Error\", error.message);\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\t// formState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// 유저 입력 값을 넣을 변수\r\n\tconst [checkItemContent, setCheckItemContent] = useState(\"\");\r\n\t// 줄 수를 계산해서 저장할 변수\r\n\tconst [textareaHeight, setTextareaHeight] = useState(0);\r\n\r\n\t// 사용자 입력 값이 변경될 때마다 checkItemContent에 저장하고\r\n\t// 엔터('\\n') 개수를 세서 textareaHeight에 저장\r\n\tconst checkItemChangeHandler = (event: any) => {\r\n\t\tsetTextareaHeight(event.target.value.split(\"\\n\").length - 1);\r\n\t\tsetCheckItemContent(event.target.value);\r\n\t};\r\n\r\n\tfunction checkLengthHandler(event: any) {\r\n\t\tvar text = event.target.value;\r\n\t\tvar test_length = text.length;\r\n\r\n\t\t//최대 글자수\r\n\t\tvar max_length = 5000;\r\n\r\n\t\tif (test_length > max_length) {\r\n\t\t\talert(max_length + \"자 이상 작성할 수 없습니다.\");\r\n\t\t\ttext = text.substr(0, max_length);\r\n\t\t\tevent.target.value = text;\r\n\t\t\tevent.target.focus();\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"SendQuestionForm-container\">\r\n\t\t\t<Toastify />\r\n\t\t\t<form\r\n\t\t\t\tclassName=\"SendQuestionForm-question-form\"\r\n\t\t\t\tonSubmit={handleSubmit(onSubmit)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"SendQuestionForm-questionForm-box\">\r\n\t\t\t\t\t<span className=\"SendQuestionForm-cursur-bar\">|</span>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tid=\"questionAdd\"\r\n\t\t\t\t\t\tclassName=\"questionForm-textarea\"\r\n\t\t\t\t\t\tvalue={checkItemContent}\r\n\t\t\t\t\t\tonInput={checkItemChangeHandler}\r\n\t\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\t\tstyle={{ height: (textareaHeight + 1) * 20 + \"px\" }}\r\n\t\t\t\t\t\tplaceholder=\"질문해 주세요\"\r\n\t\t\t\t\t\t{...register(\"questionContents\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"SendQuestionForm-hr\" />\r\n\t\t\t\t<div className=\"SendQuestionForm-footer\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"SendQuestionForm-hyperlink-btn\"\r\n\t\t\t\t\t\tsrc=\"/buttons/link-icn.svg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"hyperLinkAdd\"\r\n\t\t\t\t\t\tclassName=\"QuestionForm-hyperlink-input\"\r\n\t\t\t\t\t\tplaceholder=\"첨부할 사이트 주소를 넣어주세요 (최대 1개)\"\r\n\t\t\t\t\t\tonKeyUp={checkLengthHandler}\r\n\t\t\t\t\t\t{...register(\"questionHyperlink\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className=\"SendQuestionForm-send-question-btn\" type=\"submit\">\r\n\t\t\t\t\t\t<img src=\"/buttons/send-question-btn.svg\" alt=\"\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SendQuestionFormQuestionAnony;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\utils\\isLogin.ts",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\auth\\PrivateRoute.tsx",["599"],[],"// PrivateRoute.js\r\n\r\nimport React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n\tauthenticated: boolean;\r\n\tcomponent: React.ReactElement;\r\n\tnoAuthComponent: React.ReactElement;\r\n}\r\n\r\nfunction PrivateRoute(props: Props): React.ReactElement | null {\r\n\tconst authenticated = props.authenticated;\r\n\tconst component = props.component;\r\n\tconst noAuthComponent = props.noAuthComponent;\r\n\treturn authenticated ? component : noAuthComponent;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserRingcardName.tsx",["600","601","602","603"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/editUserInfo.css\";\r\nimport HeaderNoProfile from \"../../components/Header/HeaderNoProfile\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UserProfile from \"../../components/UserProfile\";\r\nimport Toastify from \"../../components/Toast\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EditUserRingcardName = () => {\r\n\ttype ResponseList = {\r\n\t\toverlappedUsername: boolean;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\toverlappedUsername: false,\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst [user, setUser] = useState<any>([]);\r\n\tconst [userRingcardName, setUserRingcardName] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/mypage/info/edit\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetUser(res.data);\r\n\t\t\t\tsetUserRingcardName(res.data.userRingcardName);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.config);\r\n\t\t\t\tconsole.log(err.response.data);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/mypage/info/edit/userRingcardName\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors() {\r\n\t\tif (response.overlappedUsername) {\r\n\t\t\treturn <div className=\"user-text-error\">overlappedUsername</div>;\r\n\t\t} else if (submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\r\n\t\t\tlocalStorage.setItem(\"toastText\", \"개인 정보가 수정되었습니다.\");\r\n\t\t\twindow.location.href = \"/mypage/info\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderNoProfile />\r\n\t\t\t\t<div className=\"userInfo-profile-container\">\r\n\t\t\t\t\t<UserProfile />\r\n\t\t\t\t\t<div className=\"user-profile-name\">{user.userRingcardName}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t\t{/* <div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">변경할 이름</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"userRingcardName\"\r\n\t\t\t\t\t\t\tclassName=\"user-icon user-icon-id-light\"\r\n\t\t\t\t\t\t\t// placeholder={user.userRingcardName}\r\n\t\t\t\t\t\t\t{...register(\"userRingcardName\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">기존 이름</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-icon user-icon-user-dark\"\r\n\t\t\t\t\t\t\t\tvalue={userRingcardName}\r\n\t\t\t\t\t\t\t\t// placeholder=\"이름을 입력해주세요\"\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">변경할 이름</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-icon user-icon-user-light\"\r\n\t\t\t\t\t\t\t\t// defaultValue={user.userRingcardName}\r\n\t\t\t\t\t\t\t\t// placeholder=\"이름을 입력해주세요\"\r\n\t\t\t\t\t\t\t\t{...register(\"userRingcardName\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<RedirectAndInputErrors />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in flex-spacebetween\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"cancel-btn\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/mypage/info\" style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"user-btn-text\">취소하기</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"editUserInfo-btn\">\r\n\t\t\t\t\t\t\t\t<div className=\"user-btn-text\">저장하기</div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default EditUserRingcardName;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserEmail.tsx",["604","605","606","607"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/editUserInfo.css\";\r\nimport HeaderNoProfile from \"../../components/Header/HeaderNoProfile\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UserProfile from \"../../components/UserProfile\";\r\nimport Toastify from \"../../components/Toast\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst EditUserEmail = () => {\r\n\ttype ResponseList = {\r\n\t\tsameUserEmail: boolean;\r\n\t\toverlappedUserEmail: boolean;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tsameUserEmail: false,\r\n\t\toverlappedUserEmail: false,\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst [user, setUser] = useState<any>([]);\r\n\tconst [userEmail, setUserEmail] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.get(\"/mypage/info/edit\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetUser(res.data);\r\n\t\t\t\tsetUserEmail(res.data.userEmail);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.config);\r\n\t\t\t\tconsole.log(err.response.data);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/mypage/info/edit/userEmail\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors() {\r\n\t\tif (response.sameUserEmail) {\r\n\t\t\t// console.log(response.sameUserEmail);\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"user-text-error\">\r\n\t\t\t\t\t변경할 이메일을 기존 이메일과 다르게 입력해 주세요.\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (response.overlappedUserEmail) {\r\n\t\t\t// console.log(response.overlappedUserEmail);\r\n\t\t\treturn <div className=\"user-text-error\">이미 존재하는 이메일입니다.</div>;\r\n\t\t} else if (submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\tlocalStorage.setItem(\"toastShow\", \"1\");\r\n\t\t\tlocalStorage.setItem(\"toastText\", \"개인 정보가 수정되었습니다.\");\r\n\t\t\twindow.location.href = \"/mypage/info\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderNoProfile />\r\n\t\t\t\t<div className=\"userInfo-profile-container\">\r\n\t\t\t\t\t<UserProfile />\r\n\t\t\t\t\t<div className=\"user-profile-name\">{user.userRingcardName}</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t\t{/* <div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">변경할 이름</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"userRingcardName\"\r\n\t\t\t\t\t\t\tclassName=\"user-icon user-icon-id-light\"\r\n\t\t\t\t\t\t\t// placeholder={user.userRingcardName}\r\n\t\t\t\t\t\t\t{...register(\"userRingcardName\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t{/* <div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">기존 이름</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"user-icon user-icon-user-dark\"\r\n\t\t\t\t\t\t\tvalue={userRingcardName}\r\n\t\t\t\t\t\t\t// placeholder=\"이름을 입력해주세요\"\r\n\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">변경할 이름</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName=\"user-icon user-icon-user-light\"\r\n\t\t\t\t\t\t\t// defaultValue={user.userRingcardName}\r\n\t\t\t\t\t\t\t// placeholder=\"이름을 입력해주세요\"\r\n\t\t\t\t\t\t\t{...register(\"userRingcardName\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t></input>\r\n\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">기존 이메일</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-icon user-icon-user-dark\"\r\n\t\t\t\t\t\t\t\tvalue={userEmail}\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">변경할 이메일</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-icon user-icon-user-light\"\r\n\t\t\t\t\t\t\t\t// defaultValue={user.userRingcardName}\r\n\t\t\t\t\t\t\t\t// placeholder=\"이름을 입력해주세요\"\r\n\t\t\t\t\t\t\t\t{...register(\"userEmail\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* <div className=\"user-box-in\">\r\n\t\t\t\t\t<div className=\"user-text\">이메일</div>\r\n\t\t\t\t\t<input className=\"user-icon user-icon-email-light\" defaultValue={user.userEmail} placeholder=\"이메일을 입력해주세요\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t{...register(\"userEmail\", {\r\n\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t})}></input>\r\n\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<RedirectAndInputErrors />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"user-box-in flex-spacebetween\">\r\n\t\t\t\t\t\t\t<button type=\"button\" className=\"cancel-btn\">\r\n\t\t\t\t\t\t\t\t<Link to=\"/mypage/info\" style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"user-btn-text\">취소하기</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"editUserInfo-btn\">\r\n\t\t\t\t\t\t\t\t<div className=\"user-btn-text\">저장하기</div>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default EditUserEmail;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Login.tsx",["608","609","610","611","612","613","614","615","616"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/layout/reactToast.css\";\r\nimport \"../../styles/login.css\";\r\n\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HeaderRingca from \"../../components/Header/HeaderRingca\";\r\n// import Toastify from \"../../components/Toast\";\r\nimport ReactTwitterLogin from \"react-twitter-login\";\r\n// import ReactGoogleLogin from \"react-google-login\";\r\nimport { twitterOAuth2 } from 'twitter-oauth2';\r\nimport { Client } from \"twitter-api-sdk\";\r\n\r\nconst Login = () => {\r\n\r\n\t// const client = new Client(\"AAAAAAAAAAAAAAAAAAAAAOWsiwEAAAAADbR%2FLCPhXEE5vHgf%2BCli0CgKOjk%3DMjxq0SR9yVxDzuVCiN5sjmeiG26QYTSrIu6BM2sQozQY3ViVtd\");\r\n\r\n\t// function BtnToPageUp(){\r\n\t// \tfunction handleClick(e: any){\r\n\t\t\t\r\n\t// \t\tasync function main() {\r\n\t// \t\t\tconst tweet = await client.tweets.findTweetById(\"20\");\r\n\t// \t\t\tif(tweet.data){\r\n\t// \t\t\tconsole.log(tweet.data.text);\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t\tmain();\r\n\t// \t}\r\n\t// \treturn (\r\n\t// \t\t<button className=\"page-btn\" onClick={handleClick}>\r\n\t// \t\t\t<img alt=\"\" src=\"/buttons/move-next-page-btn.svg\" />\r\n\t// \t\t</button>\r\n\t// \t);\r\n\t// }\r\n\r\n\t\r\n\t\r\n\t// var Twitter = require('twitter');\r\n\r\n\t// var client = new Twitter({\r\n\t//   consumer_key: 'S0FVySANFNnlISMw5D1vSE8P0',\r\n\t//   consumer_secret: 'KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X',\r\n\t//   access_token_key: '1516353113430851586-BikPyEoaehv4mDqSnCLc5mMQGuigeR',\r\n\t//   access_token_secret: 'zReOE8IWZ5wbGnPC4D8AClbBqc1hXhDQZcbBf2OOar2vw'\r\n\t// });\r\n\r\n\t// function tweetPost(content: string) {\r\n\t//   client.post('statuses/update', {status: content}, function(error: any, tweet: any, response: any) {\r\n\t//     if (!error) {\r\n\t//       console.log(\"tweet success: \" + content);\r\n\t//     } else {\r\n\t//       console.log(error);\r\n\t//     }\r\n\t//   });\r\n\t// }\r\n\t// dotenv.config();\r\n\r\n\t// const app = express();\r\n\r\n\t// const authClient = new auth.OAuth2User({\r\n\t//   client_id: \"OHZuVXNLOU9Yd2xEZTM1Q3pSTl86MTpjaQ\",\r\n\t//   client_secret: \"R5LrpInanUZYCRH8l9aq5oUGBoxfAHNQTPjs8vhqB2zGjKI29m\",\r\n\t//   callback: \"https://127.0.0.1:3000/callback\",\r\n\t//   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n\t// });\r\n\r\n\t// // const authClient = new auth.OAuth2User({\r\n\t// //   client_id: process.env.CLIENT_ID as string,\r\n\t// //   client_secret: process.env.CLIENT_SECRET as string,\r\n\t// //   callback: \"https://127.0.0.1:3000/callback\",\r\n\t// //   scopes: [\"tweet.read\", \"users.read\", \"offline.access\"],\r\n\t// // });\r\n\r\n\t// const client = new Client(authClient);\r\n\r\n\t// const STATE = \"my-state\";\r\n\r\n\t// app.get(\"/callback\", async function (req, res) {\r\n\t//   try {\r\n\t//     const { code, state } = req.query;\r\n\t//     if (state !== STATE) return res.status(500).send(\"State isn't matching\");\r\n\t//     await authClient.requestAccessToken(code as string);\r\n\t//     res.redirect(\"/tweets\");\r\n\t//   } catch (error) {\r\n\t//     console.log(error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.get(\"/login\", async function (req, res) {\r\n\t//   const authUrl = authClient.generateAuthURL({\r\n\t//     state: STATE,\r\n\t//     code_challenge_method: \"plain\",\r\n\t//     code_challenge: \"test\",\r\n\t//   });\r\n\t//   res.redirect(authUrl);\r\n\t// });\r\n\r\n\t// app.get(\"/tweets\", async function (req, res) {\r\n\t//   try {\r\n\t//     const tweets = await client.tweets.findTweetById(\"20\");\r\n\t//     res.send(tweets);\r\n\t//   } catch (error) {\r\n\t//     console.log(\"tweets error\", error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.get(\"/revoke\", async function (req, res) {\r\n\t//   try {\r\n\t//     const response = await authClient.revokeAccessToken();\r\n\t//     res.send(response);\r\n\t//   } catch (error) {\r\n\t//     console.log(error);\r\n\t//   }\r\n\t// });\r\n\r\n\t// app.listen(3000, () => {\r\n\t//   console.log(`Go here to login: http://127.0.0.1:3000/login`);\r\n\t// });\r\n\r\n\t// \t// toastify 알람 실행 함수 만들기\r\n\t//   const notify = () => toast(\"질문의 답변이 등록되었습니다.\", {\r\n\t// \t\tautoClose: 700,\r\n\t// \t\tposition:\"top-center\",\r\n\t// \t\tpauseOnFocusLoss: true,\r\n\t// \t\thideProgressBar: true,\r\n\t// \t\tdraggable: true,\r\n\t// \t\tpauseOnHover: true,\r\n\t// \t\ttheme: \"dark\",\r\n\t// \t\tcloseButton: false,\r\n\t// \t\ttransition: Zoom,\r\n\t// \t\t// onOpen: () => window.alert('Called when I open'),\r\n\t// \t\t// onClose: () => window.alert('Called when I close')\r\n\t// })\r\n\tuseEffect(() => {\r\n\t\taxios\r\n\t\t\t.all([axios.get(\"/loginForm\"), axios.get(\"/\"), axios.get(\"\")])\r\n\t\t\t.then(\r\n\t\t\t\taxios.spread((res1, res2, res3) => {\r\n\t\t\t\t\tconsole.log(\"front loginForm\");\r\n\t\t\t\t\t// window.location.href = \"/loginForm\";\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\t// submitted==true여야 새로고침 되도록.\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/login\", data, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\twindow.location.replace(\"/home/unanswered\");\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\talert(\"아이디나 비밀번호가 올바르지 않습니다.\");\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw = () => {\r\n\t\tsetShowPw(!showPw);\r\n\t};\r\n\r\n\tfunction handlePwClick(e: any) {\r\n\t\ttoggleShowPw();\r\n\t}\r\n\r\n\tfunction ShowPw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-show-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-hide-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\t// PW toggle fin.\r\n\r\n\tfunction BtnToJoin() {\r\n\t\tfunction handleClick(e: any) {\r\n\t\t\twindow.location.href = \"/joinForm\";\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"login-join\" onClick={handleClick}>\r\n\t\t\t\t<div className=\"login-join-text\">아직 링카의 회원이 아니신가요?</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tconst responseErrorTwitter = async (response:any) => {\r\n        console.log(response);\r\n    };\r\n    const responseSuccessTwitter = async (response:any) => {\r\n        //do something\r\n        console.log(response.resources);\r\n    };\r\n\r\n\tconst onResponse = (resp:any) => {\r\n    console.log(resp);\r\n  };\r\n\t\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderRingca />\r\n\t\t\t\t{/* <ToastContainer/> */}\r\n\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-user-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t{...register(\"username\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t// placeholder=\"비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"Login-findPwd-text-box\">\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto=\"/findPassword\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\ttextDecorationColor: \"white\",\r\n\t\t\t\t\t\t\t\t\ttextDecorationThickness: \"0.5px\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"white\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t비밀번호를 잊으셨나요?\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{/* <form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"submit\">비밀번호 변경</button>\r\n\t\t\t\t</form> */}\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"user-btn\">\r\n\t\t\t\t\t\t\t<div className=\"user-btn-text\">로그인</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t{/* <TwitterLogin onFailure={responseErrorTwitter}\r\n                      onSuccess={responseSuccessTwitter}\r\n                      credentials=\"include\"\r\n                      customHeaders={\r\n                          {\r\n                              \"X-Requested-With\": \"XMLHttpRequest\",\r\n                          }\r\n                      }\r\n                      authenticationUrl=\"https://example.com/auth/twitter\"\r\n                      requestUrl=\"https://example.com/auth/twitter/url\">\r\n            Login with Twitter\r\n        </TwitterLogin> */}\r\n\r\n\t\t\t\t{/* <ReactTwitterLogin\r\n\t\t\t\t\tauthCallback={authHandler}\r\n\t\t\t\t\tconsumerKey=\"S0FVySANFNnlISMw5D1vSE8P0\" // We created this, remember?\r\n\t\t\t\t\tconsumerSecret=\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" // We created this, remember?\r\n\t\t\t\t\tcallbackUrl=\"http://localhost:3000/login/oauth2/code/twitter\" // You set this up in the twitter app settings, remember?\r\n\t\t\t\t/> */}\r\n\r\n\t\t\t\t{/* <ReactGoogleLogin\r\n\t\t\t\t\tclientId=\"229666542925-10vg43mj7b66bp06vkakne3spsr309pp.apps.googleusercontent.com\" // We created this earlier, remember?\r\n\t\t\t\t\tbuttonText=\"Login with Google\"\r\n\t\t\t\t\tonSuccess={onResponse}\r\n\t\t\t\t\tonFailure={onResponse}\r\n\t\t\t\t/> */}\r\n\t\t\t\t{/* <BtnToPageUp/> */}\r\n\r\n\t\t\t\t\t<a href=\"/oauth2/authorization/twitter\">트위터 로그인</a>\r\n\r\n\t\t\t\t\t<div className=\"login-join-box\">\r\n\t\t\t\t\t\t<BtnToJoin />\r\n\t\t\t\t\t\t{/* <button onClick={notify}/> */}\r\n\t\t\t\t\t\t{/* <Toastify text=\"hello\"/> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\FindPassword.tsx",["617","618","619","620"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport HeaderRingcaShort from \"../../components/Header/HeaderRingcaShort\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/login.css\";\r\n\r\nfunction FindPassword() {\r\n\ttype ResponseList = {\r\n\t\tbindingResultHasErrors: boolean;\r\n\t\tnoEmailLikeThat: boolean;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tbindingResultHasErrors: false,\r\n\t\tnoEmailLikeThat: false,\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/findPassword\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors() {\r\n\t\tif (response.bindingResultHasErrors && response.noEmailLikeThat) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"FindPassword-user-text-error\">\r\n\t\t\t\t\t\t올바르지 않은 형식입니다.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"FindPassword-user-text-error\">\r\n\t\t\t\t\t\t존재하지 않는 이메일입니다.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else if (response.bindingResultHasErrors) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"FindPassword-user-text-error\">\r\n\t\t\t\t\t데이터에 에러가 발생하였습니다.\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (response.noEmailLikeThat) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"FindPassword-user-text-error\">\r\n\t\t\t\t\t존재하지 않는 이메일입니다.\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\treturn (\r\n\t\t<div className=\"FindPassword-container\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderRingcaShort />\r\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} name=\"sendEmail\">\r\n\t\t\t\t\t<div className=\"FindPassword-info-text\">\r\n\t\t\t\t\t\t입력한 이메일로 임시 비밀번호가 전송됩니다.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t\t<div className=\"user-text\">이메일을 입력해주세요.</div>\r\n\t\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-email-light\">\r\n\t\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t{...register(\"userEmail\", {\r\n\t\t\t\t\t\t\t\t\t\trequired: \"가입할 때 입력한 이메일을 입력해주세요.\",\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<RedirectAndInputErrors />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in Findpassword-send-btn-box\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tclassName=\"FindPassword-send-btn\"\r\n\t\t\t\t\t\t\tid=\"checkEmail\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t비밀번호 발송\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FindPassword;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Logout.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Join.tsx",["621","622","623","624","625","626","627"],[],"import React, { useState, useEffect, useReducer } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/layout/layout.css\";\r\nimport \"../../styles/layout/header.css\";\r\nimport \"../../styles/user/userBox.css\";\r\nimport \"../../styles/user/userIcon.css\";\r\nimport \"../../styles/user/userHeader.css\";\r\nimport \"../../styles/join.css\";\r\n\r\nimport userEvent from \"@testing-library/user-event\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport HeaderRingcaShort from \"../../components/Header/HeaderRingcaShort\";\r\n\r\nconst Join = () => {\r\n\ttype ResponseList = {\r\n\t\tbindingResultHasErrors: boolean;\r\n\t\toverlappedUsername: boolean;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tbindingResultHasErrors: false,\r\n\t\toverlappedUsername: false,\r\n\t});\r\n\t// submitted==true여야 새로고침 되도록.\r\n\tconst [submitted, setSubmitted] = useState(false);\r\n\r\n\tconst onSubmit = async (data: any) => {\r\n\t\tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t\t// alert(JSON.stringify(data));\r\n\t\tconsole.log(data);\r\n\r\n\t\tawait axios\r\n\t\t\t.post(\"/joinForm\", data)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\"postHere\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetResponse(res.data);\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t\tsetSubmitted(true);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n\t};\r\n\r\n\tfunction RedirectAndInputErrors() {\r\n\t\tif (response.bindingResultHasErrors && response.overlappedUsername) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"user-text-error\">\r\n\t\t\t\t\t\t올바르지 않은 형식이 포함되어있습니다.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-text-error\">이미 존재하는 아이디입니다.</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t} else if (response.bindingResultHasErrors) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"user-text-error\">\r\n\t\t\t\t\t올바르지 않은 형식이 포함되어있습니다.\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (response.overlappedUsername) {\r\n\t\t\treturn <div className=\"user-text-error\">이미 존재하는 아이디입니다.</div>;\r\n\t\t} else if (submitted) {\r\n\t\t\t// 위 조건 만족할 때만 loginForm으로 새로고침\r\n\t\t\twindow.location.href = \"/loginForm\";\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n\r\n\t// PW toggle start.\r\n\tconst [showPw, setShowPw] = useState<boolean>(false);\r\n\tconst toggleShowPw = () => {\r\n\t\tsetShowPw(!showPw);\r\n\t};\r\n\r\n\tfunction handlePwClick(e: any) {\r\n\t\ttoggleShowPw();\r\n\t}\r\n\r\n\tfunction ShowPw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-show-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\r\n\tfunction HidePw(props: any) {\r\n\t\treturn (\r\n\t\t\t<button\r\n\t\t\t\tvalue=\"변경\"\r\n\t\t\t\tclassName=\"user-hide-pw\"\r\n\t\t\t\tonClick={handlePwClick}\r\n\t\t\t></button>\r\n\t\t);\r\n\t}\r\n\t// PW toggle fin.\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<HeaderRingcaShort />\r\n\t\t\t\t<div className=\"user-box\">\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">이름</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-user-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t{...register(\"userRingcardName\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">아이디</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-id-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t{...register(\"username\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">비밀번호</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div user-icon-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype={showPw ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\t// placeholder=\"비밀번호를 입력해주세요\"\r\n\t\t\t\t\t\t\t\t{...register(\"password\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"답변이 입력되지 않았습니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t\t{showPw ? (\r\n\t\t\t\t\t\t\t\t<ShowPw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<HidePw onClick={toggleShowPw} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t\t<div className=\"user-text\">이메일</div>\r\n\t\t\t\t\t\t<div className=\"user-box-div-light user-icon-email-light\">\r\n\t\t\t\t\t\t\t<span className=\"user-icon-bar\">|</span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName=\"user-inner-transparent\"\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t{...register(\"userEmail\", {\r\n\t\t\t\t\t\t\t\t\trequired: \"비밀번호 찾을 때 사용됩니다.\",\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t></input>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"user-box-in\">\r\n\t\t\t\t\t<RedirectAndInputErrors />\r\n\r\n\t\t\t\t\t{/* {\r\n\t\t\t\t\tbindingResultHasErrors\r\n\t\t\t\t\t? <div className=\"user-text\">bindingResultHasErrors</div>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\toverlappedUsername\r\n\t\t\t\t\t? <div className=\"user-text\">overlappedUsername</div>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t */}\r\n\t\t\t\t\t<button type=\"submit\" className=\"user-btn join-btn\">\r\n\t\t\t\t\t\t<div className=\"user-btn-text\">회원가입</div>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <div className=\"join-delete-box\">\r\n\t\t\t\t<div className=\"join-delete\">\r\n\t\t\t\t\t<a className=\"join-delete-text\" href=\"/\">링카 계정을 완전히 지우고 싶어요</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Join;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Modal\\ClearTrashcanModal.tsx",["628","629"],[],"import axios from \"axios\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/clearTrashcanModal.css\";\r\n\r\ninterface props {\r\n\topen: boolean;\r\n\tclose: () => void; // 함수 타입 정의할 때\r\n}\r\n\r\nconst ClearTrashcanModal = (props: props): ReactElement => {\r\n\tconst { open, close } = props;\r\n\r\n\t// const onClickHandler = () => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/logout\")\r\n\t// \t\t.then((response) => {\r\n\t// \t\t\twindow.location.replace(\"/loginForm\");\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err);\r\n\t// \t\t});\r\n\t// };\r\n\r\n\tconst handleClearTrashcanClick = async () => {\r\n\t\tawait axios\r\n\t\t\t.get(\"/home/trashcan/clearTrashcan\")\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t\"Successfully enter handleClearTrashcanClick in ClearTrashcanModal in HomeTrashcan :D\"\r\n\t\t\t\t);\r\n\t\t\t\tconsole.log(res.data);\r\n\r\n\t\t\t\twindow.history.go(0);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={open ? \"bg\" : \"\"} />\r\n\t\t\t<div className={open ? \"modal active\" : \"modal\"}>\r\n\t\t\t\t{open ? (\r\n\t\t\t\t\t<div className=\"ClearTrashcanModal-area\">\r\n\t\t\t\t\t\t<div className=\"ClearTrashcanModal-container\">\r\n\t\t\t\t\t\t\t휴지통에 있는 모든 질문들이\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t영구적으로 삭제됩니다.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t삭제하시겠습니까?\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<hr className=\"ClearTrashcanModal-hr\" />\r\n\t\t\t\t\t\t<div className=\"ClearTrashcanModal-footer\">\r\n\t\t\t\t\t\t\t<button className=\"ClearTrashcanModal-close-btn\" onClick={close}>\r\n\t\t\t\t\t\t\t\t취소\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"ClearTrashcanModal-delete-btn\"\r\n\t\t\t\t\t\t\t\tonClick={handleClearTrashcanClick}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t휴지통 비우기\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ClearTrashcanModal;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderNoProfile.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\Header.tsx",["630"],[],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport \"../../styles/layout/header.css\";\r\nimport Modal from \"../Modal/MenuModal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface Props {\r\n\tuserName: String | undefined;\r\n}\r\n\r\nfunction Header(props: Props) {\r\n\tconst userName = props.userName;\r\n\tconst handleHomeBtnClick = async () => {\r\n\t\twindow.location.href = \"/home/unanswered\";\r\n\t};\r\n\r\n\t// 모달창 노출 여부 state\r\n\tconst [showReq, setShowReq] = useState<boolean>(false);\r\n\r\n\tfunction openReq() {\r\n\t\tsetShowReq(!showReq);\r\n\t}\r\n\r\n\tfunction closeReq() {\r\n\t\tsetShowReq(!showReq);\r\n\t}\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<div className=\"header-blank\"></div>\r\n\r\n\t\t\t<div className=\"top-banner\">\r\n\t\t\t\t<div className=\"home-btn\" onClick={handleHomeBtnClick}>\r\n\t\t\t\t\t<img src=\"/buttons/home-icon.svg\" width=\"21px\" color=\"white\" alt=\"\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"profile-pic\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={\"/userHome/\" + userName}\r\n\t\t\t\t\t\tstyle={{ width: \"39px\", height: \"39px\" }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc=\"/profile-imgs/oring_1.png\"\r\n\t\t\t\t\t\t\twidth=\"35px\"\r\n\t\t\t\t\t\t\theight=\"35px\"\r\n\t\t\t\t\t\t\tcolor=\"white\"\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"menu-btn\" onClick={openReq}>\r\n\t\t\t\t\t<img src=\"/buttons/menu-icon.svg\" width=\"21px\" color=\"white\" alt=\"\" />\r\n\t\t\t\t\t<Modal open={showReq} close={closeReq} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingcaShort.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Modal\\MenuModal.tsx",["631"],[],"import axios from \"axios\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/layout/modal.css\";\r\n\r\ninterface props {\r\n\topen: boolean;\r\n\tclose: () => void; // 함수 타입 정의할 때\r\n}\r\n\r\nconst Modal = (props: props): ReactElement => {\r\n\tconst { open, close } = props;\r\n\r\n\t// const handleMyInfoClick = async () => {\r\n\t// \tawait axios\r\n\t// \t\t.get(\"/mypage/info\")\r\n\t// \t\t.then((res) => {\r\n\t// \t\t\twindow.location.href = \"/mypage/info\";\r\n\t// \t\t\tconsole.log(\r\n\t// \t\t\t\t\"Successfully enter handleMyInfoClick in QuestionNoteFooter :D\"\r\n\t// \t\t\t);\r\n\t// \t\t\tconsole.log(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err);\r\n\t// \t\t});\r\n\t// };\r\n\r\n\t// const onClickHandler = () => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/logout\")\r\n\t// \t\t.then((response) => {\r\n\t// \t\t\twindow.location.replace(\"/loginForm\");\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err);\r\n\t// \t\t});\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={open ? \"bg\" : \"\"} />\r\n\t\t\t<div className={open ? \"modal active\" : \"modal\"}>\r\n\t\t\t\t{open ? (\r\n\t\t\t\t\t<div className=\"area\">\r\n\t\t\t\t\t\t<div className=\"modal-close\">\r\n\t\t\t\t\t\t\t<button onClick={close}>\r\n\t\t\t\t\t\t\t\t<img src=\"/buttons/x.svg\" alt=\"\"></img>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<hr className=\"menu-modal-hr\" />\r\n\t\t\t\t\t\t<div className=\"menu-container\">\r\n\t\t\t\t\t\t\t<Link to={\"/mypage/info\"} style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t\t<div className=\"menu-element\">마이 페이지</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t<Link to={\"/logout\"} style={{ textDecoration: \"none\" }}>\r\n\t\t\t\t\t\t\t\t<div className=\"menu-element\">로그아웃</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Modal;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Modal\\SelectNoteModal.tsx",["632","633","634"],[],"import axios from \"axios\";\r\nimport React, { ReactElement } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/selectNoteModal.css\";\r\n\r\ninterface props {\r\n\topen: boolean;\r\n\tclose: () => void; // 함수 타입 정의할 때\r\n}\r\n\r\nconst SelectNoteModal = (props: props): ReactElement => {\r\n\tconst { open, close } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={open ? \"bg\" : \"\"} />\r\n\t\t\t<div className={open ? \"modal active\" : \"modal\"}>\r\n\t\t\t\t{open ? (\r\n\t\t\t\t\t<div className=\"SelectNoteModal-area\">\r\n\t\t\t\t\t\t<div className=\"SelectNoteModal-selected-box\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-note-color\"\r\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"#e9e1ec\" }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"SendQuestionForm-note-color-text\">연보라</div>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"SendQuestionForm-open-modal-btn\"\r\n\t\t\t\t\t\t\t\tsrc=\"/buttons/chevron-note-select-btn.svg\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* <div className=\"SelectNoteModal-hr-box\">\r\n\t\t\t\t\t\t\t<hr className=\"SelectNoteModal-hr\" />\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default SelectNoteModal;\r\n","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingca.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2.tsx",["635","636","637","638","639","640","641","642","643","644"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2Step3.tsx",["645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Cookie.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\index.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\reportWebVitals.ts",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\App.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\AppRouter.tsx",["669","670","671","672"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\utils\\isLogin.ts",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeUnanswered.tsx",["673"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeAnswered.tsx",["674"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeCollection.tsx",["675"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Login.tsx",["676","677","678","679","680","681","682","683","684"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Join.tsx",["685","686","687","688","689","690","691"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\FindPassword.tsx",["692","693","694","695"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\home\\HomeTrashcan.tsx",["696","697"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Logout.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2Step3.tsx",["698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721"],[],"import axios from \"axios\";\r\nimport React, {  useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport qs from \"qs\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useCookies } from \"react-cookie\";\r\n// import { setCookie } from \"./Cookie\";\r\n\r\nconst Oauth2Step3=()=>{\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies(['accessToken']);\r\n  \r\n  type ResponseList = {\r\n\t\tloginFirstTwitter: boolean;\r\n    usernameTwitter: String;\r\n\t};\r\n\tconst [response, setResponse] = useState<ResponseList>({\r\n\t\tloginFirstTwitter: false,\r\n    usernameTwitter: \"\",\r\n\t});\r\n\r\n  const { Client, auth } = require(\"twitter-api-sdk\");\r\n\r\n  const [accessToken, setAccessToken] = useState();\r\n  const [userMe, setUserMe] = useState<any>([]);\r\n\r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  const CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst ACCESS_TOKEN=process.env.REACT_APP_ACCESS_TOKEN;\r\n\tconst ACCESS_TOKEN_SECRET=process.env.REACT_APP_ACCESS_TOKEN_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\tconst BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  \r\n  // const TWITTER_STATE = \"twitter-increaser-state\";\r\n  const TWITTER_STATE = \"state\";\r\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\r\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\r\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\",\"tweet.write\"].join(\" \");\r\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const state = searchParams.get(\"state\");\r\n  const code = searchParams.get(\"code\");\r\n  \r\n  const authClient = new auth.OAuth2User({\r\n    client_id: CLIENT_ID,\r\n    client_secret: CLIENT_SECRET,\r\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\r\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"],\r\n  });\r\n\r\n  const client = new Client(authClient);\r\n\r\n  const params = {\r\n  expansions: \"author_id\",\r\n  \"user.fields\": [\"username\", \"created_at\"],\r\n  \"tweet.fields\": [\"geo\", \"entities\", \"context_annotations\"],\r\n};\r\n\r\nfunction BtnToTwitterLogin(){\r\n\tfunction handleClick(e: any){\r\n\r\n    const createFormParams = (params:any) => {\r\n        return Object.keys(params)\r\n            .map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)\r\n            .join('&')\r\n    }\r\n\r\n  if(code&&CLIENT_ID){\r\n    const data = qs.stringify({\r\n          code: code,\r\n          grant_type: 'authorization_code',\r\n          client_id: CLIENT_ID,\r\n          redirect_uri: 'http://localhost:3000/login/oauth2/code/twitter',\r\n          code_verifier: 'challenge',\r\n        });\r\n    \r\n    axios({\r\n    method: 'post',\r\n    url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/oauth2/token',\r\n\r\n    data: data,\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    }\r\n\r\n    }).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      console.log(res.data.access_token);\r\n      setAccessToken(res.data.access_token);\r\n\r\n      // setCookie('accessToken', res.data.access_token, {\r\n      //   httpOnly: true,\r\n      // });\r\n      setCookie('accessToken', {accessToken: res.data.access_token}, {path: '/'});\r\n\r\n      // const options = {\r\n      //   httpOnly: true,\r\n      //   // sameSite: 'none',\r\n      //   // secure: true,\r\n      //   // domain: 'localhost',\r\n      //   // maxAge: config.jwt.expiresInSec * 1000,\r\n      // };\r\n      // res.cookie('accessToken', res.data.access_token, options);\r\n      // alert(\"생성이 완료되었습니다.\");\r\n  })}}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n        TwitterLogin\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  function BtnToCreateTweet(){\r\n\t\tfunction handleClick(e: any){\r\n      const endpointURL = `https://api.twitter.com/2/tweets`;\r\n      const data = {\r\n        text: \"Hello Worldsss!!!!!!!!\"\r\n      };\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/tweets',\r\n\r\n        data: data,\r\n        headers: {\r\n          'Authorization': 'Bearer ' + accessToken,\r\n        }\r\n\r\n      }).then((res) => {\r\n        console.log(res);\r\n        // alert(\"생성이 완료되었습니다.\");\r\n        });\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n        CreateTweet\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  const BtnToUserMe =()=>{\r\n\t\t// function handleClick(e: any){\r\n\r\n    axios({\r\n      method: 'get',\r\n      url: 'https://cors-anywhere.herokuapp.com/https://api.twitter.com/2/users/me',\r\n\r\n      // data: data,\r\n      headers: {\r\n        'Authorization': 'Bearer ' +accessToken,\r\n      }\r\n    }).then(async(res) => {\r\n      console.log(res);\r\n      console.log(res.data.data);\r\n      setUserMe(res.data.data);\r\n      await new Promise((r) => setTimeout(r, 100));\r\n      await axios.post('/login/user/me', res.data.data)\r\n      .then(async(res) => {\r\n        console.log(res.data.usernameTwitter);\r\n        // console.log(userMe);\r\n        // const data = qs.stringify({\r\n        //   code: code,\r\n        //   grant_type: 'authorization_code',\r\n        //   client_id: CLIENT_ID,\r\n        //   redirect_uri: 'http://localhost:3000/login/oauth2/code/twitter',\r\n        //   code_verifier: 'challenge',\r\n        // });\r\n\r\n        const data = {username : res.data.usernameTwitter, password : \"twitterTemp\"}\r\n        await axios\r\n          .post(\"/login\", data, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          })\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            console.log(\"hello there replace to unanswered\")\r\n            window.location.replace(\"/home/unanswered\");\r\n          })\r\n          .catch(function (error) {\r\n            \r\n            console.log(error.config);\r\n          });\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tconsole.log(error.config);\r\n\t\t\t});\r\n      });\r\n\t\t// }\r\n\t\t// return (\r\n\t\t// \t<button onClick={handleClick}>\r\n    //     UserMe\r\n\t\t// \t</button>\r\n\t\t// );\r\n\t};\r\n\r\n  // const onSubmit = async (data: any) => {\r\n\t// \tawait new Promise((r) => setTimeout(r, 100));\r\n\r\n\t// \t// alert(JSON.stringify(data));\r\n\t// \tconsole.log(data);\r\n\r\n\t// \tawait axios.post('/login/user/me', data).then((res) => {\r\n\t// \t\t\t// setResponse(res.data);\r\n\t// \t\t\t// console.log(res.data);\r\n\t// \t\t\t// setSubmitted(true);\r\n  //       console.log(res);\r\n  //       // setResponse(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch(function (error) {\r\n\t// \t\t\tconsole.log(error.config);\r\n\t// \t\t});\r\n\r\n    // axios({\r\n    //     method: 'post',\r\n    //     url: 'https://localhost:8080/login/user/me',\r\n    //     headers :{'Content-Type' : 'application/json',\r\n    //               'Access-Control-Allow-Origin' : '*',\r\n    //               'Access-Control-Allow-Headers' : '*',\r\n    //               'Access-Control-Allow-Methods': 'GET, POST'\r\n    //             },\r\n    //     data: data,\r\n    //   });\r\n\t\r\n\r\n  const {\r\n\t\tregister,\r\n\t\thandleSubmit,\r\n\t\tformState: { isSubmitting, isDirty, errors },\r\n\t} = useForm();\r\n  \r\n  return (\r\n    <div>\r\n    <BtnToTwitterLogin/>\r\n    <BtnToCreateTweet/>\r\n    <form onSubmit={handleSubmit(BtnToUserMe)}>\r\n      <button type=\"submit\"> UserMe\t</button>\r\n    </form>\r\n\r\n    {/* <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n\t\t\t\t<input\r\n          value={userMe.id}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"id\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n\r\n        <input\r\n          value={userMe.name}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"name\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n\r\n        <input\r\n          value={userMe.username}\r\n          // placeholder=\"이름을 입력해주세요\"\r\n          {...register(\"username\", {\r\n            required: \"답변이 입력되지 않았습니다.\",\r\n          })}\r\n        ></input>\r\n        \r\n        <button type=\"submit\">\r\n          <div>저장하기</div>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n    </form> */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Oauth2Step3;","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\auth\\Oauth2.tsx",["722","723","724","725","726","727","728","729","730","731"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst Oauth2=()=>{\r\n  const { Client, auth } = require(\"twitter-api-sdk\");\r\n  \r\n  const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  const CLIENT_ID=process.env.REACT_APP_CLIENT_ID;\r\n\tconst CLIENT_SECRET=process.env.REACT_APP_CLIENT_SECRET;\r\n\tconst ACCESS_TOKEN=process.env.REACT_APP_ACCESS_TOKEN;\r\n\tconst ACCESS_TOKEN_SECRET=process.env.REACT_APP_ACCESS_TOKEN_SECRET;\r\n\tconst CALLBACK_URL=process.env.REACT_APP_CALLBACK_URL;\r\n\tconst BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  const authClient = new auth.OAuth2User({\r\n    client_id: CLIENT_ID,\r\n    client_secret: CLIENT_SECRET,\r\n    callback: \"http://localhost:3000/login/oauth2/code/twitter\",\r\n    scopes: [\"tweet.read\", \"users.read\", \"tweet.write\"],\r\n  });\r\n\r\n  const client = new Client(authClient);\r\n  const STATE = \"my-state\";\r\n\r\n  //Get authorization\r\n  const authUrl = authClient.generateAuthURL({\r\n    state: STATE,\r\n    code_challenge: \"challenge\",\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const TWITTER_STATE = \"twitter-increaser-state\";\r\n  const TWITTER_STATE = \"state\";\r\n  const TWITTER_CODE_CHALLENGE = \"challenge\";\r\n  const TWITTER_AUTH_URL = \"https://twitter.com/i/oauth2/authorize\";\r\n  const TWITTER_SCOPE = [\"tweet.read\", \"users.read\"].join(\" \");\r\n  // const TWITTER_SCOPE = [\"tweet.read\", \"users.read\", \"offline.access\"].join(\" \");\r\n\r\n  \r\n  useEffect(() => {\r\n  console.log(authUrl);\r\n  \r\n  //   const getURLWithQueryParams = (\r\n  //   baseUrl: string,\r\n  //   params: Record<string, any>\r\n  // ) => {\r\n  //   const query = Object.entries(params)\r\n  //     .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n  //     .join(\"&\")\r\n\r\n  //   return `${baseUrl}?${query}`\r\n  // }\r\n  // const getTwitterOAuthUrl = (redirectUri: string) =>\r\n  // getURLWithQueryParams(TWITTER_AUTH_URL, {\r\n  //   response_type: \"code\",\r\n  //   client_id: CLIENT_ID,\r\n  //   redirect_uri: redirectUri,\r\n  //   scope: TWITTER_SCOPE,\r\n  //   state: TWITTER_STATE,\r\n  //   code_challenge: TWITTER_CODE_CHALLENGE,\r\n  //   code_challenge_method: \"plain\",\r\n  // })\r\n  //   console.log(getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\"));\r\n  //   window.location.href=getTwitterOAuthUrl(\"https://localhost:8000/login/oauth2/code/twitter\");\r\n    \r\n\t}, []);\r\n  \r\n  \r\n  \r\n  \r\n  // const authHandler = (err:any, data:any) => {\r\n  //   console.log(err, data);\r\n  // };\r\n\r\n  // const [user, setUser] = useState<any>([]);\r\n  \r\n  // useEffect(() => {\r\n\t// \taxios\r\n\t// \t\t.get(\"/oauth2\")\r\n\t// \t\t.then((res) => {\r\n\t// \t\t\tsetUser(res.data);\r\n\t// \t\t\tconsole.log(res.data);\r\n\t// \t\t})\r\n\t// \t\t.catch((err) => {\r\n\t// \t\t\tconsole.log(err.config);\r\n\t// \t\t\tconsole.log(err.response.data);\r\n\t// \t\t});\r\n\t// }, []);\r\n\r\n\r\n  // const client = new TwitterApi({ appKey: \"S0FVySANFNnlISMw5D1vSE8P0\", appSecret: \"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\" });\r\n\r\n  // const BEARER_TOKEN=process.env.REACT_APP_BEARER_TOKEN;\r\n\r\n  // Consuming a Stream\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function OauthTwitter() {\r\n  //     const stream = client.tweets.sampleStream({\r\n  //       \"tweet.fields\": [\"author_id\"],\r\n  //     });\r\n  //     for await (const tweet of stream) {\r\n  //       console.log(tweet.data?.author_id);\r\n  //     }\r\n      \r\n  //     return(null);\r\n  //   }\r\n  //   return(<div><OauthTwitter/></div>)\r\n  // }\r\n\r\n\r\n  // Getting a Tweet\r\n  // if(BEARER_TOKEN){\r\n  //   const client = new Client(BEARER_TOKEN);\r\n\r\n  //   async function GettingATweet() {\r\n  //     const tweet = await client.tweets.findTweetById(\"20\");\r\n  //     // console.log(tweet.data.text);\r\n  //     console.log(tweet);\r\n  //   }\r\n      \r\n  //     return(null);\r\n  // }\r\n\r\n\r\n  // oauth2-bearer.ts \r\n  // if(BEARER_TOKEN){\r\n  //   async function Oauth2Bearer() {\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  //   }\r\n  // }\r\n\r\n  // if(BEARER_TOKEN){\r\n  //     const client = new Client(BEARER_TOKEN);\r\n  //     const { data } = await client.users.findUserByUsername(\"TwitterDev\");\r\n  //     if (!data) throw new Error(\"Couldn't find user\");\r\n  //     let count = 0;\r\n  //     for await (const followers of client.users.usersIdFollowers(data.id)) {\r\n  //       console.log(followers);\r\n  //       if (++count === 3) {\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //     return (<div></div>);\r\n  // }\r\n\r\n  // const CONSUMER_KEY=process.env.REACT_APP_CONSUMER_KEY;\r\n  // const CONSUMER_SECRET=process.env.REACT_APP_CONSUMER_SECRET;\r\n  // function TestOauth(){\r\n  //   if(CONSUMER_KEY&&CONSUMER_SECRET){return(<TwitterLogin\r\n  //     authCallback={authHandler}\r\n  //     consumerKey={CONSUMER_KEY}\r\n  //     consumerSecret={CONSUMER_SECRET}\r\n  //   />)}\r\n  //   else{\r\n  //     return(<div></div>)\r\n  //   }\r\n  // }\r\n  // return (<p>1<GettingATweet/></p>)\r\n\r\n  // const authHandler = (err:any, data:any) => {\r\n  //   console.log(err, data);\r\n  // };\r\n\r\n\r\n  function BtnToTwitterLogin(){\r\n\t\tfunction handleClick(e: any){\r\n\tconst getURLWithQueryParams = (\r\n    baseUrl: string,\r\n    params: Record<string, any>\r\n  ) => {\r\n    const query = Object.entries(params)\r\n      .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\r\n      .join(\"&\")\r\n\r\n    return `${baseUrl}?${query}`\r\n  }\r\n  const getTwitterOAuthUrl = (redirectUri: string) =>\r\n  getURLWithQueryParams(TWITTER_AUTH_URL, {\r\n    response_type: \"code\",\r\n    client_id: CLIENT_ID,\r\n    redirect_uri: redirectUri,\r\n    scope: TWITTER_SCOPE,\r\n    state: TWITTER_STATE,\r\n    code_challenge: TWITTER_CODE_CHALLENGE,\r\n    code_challenge_method: \"plain\",\r\n  })\r\n\r\n  // window.location.href=getTwitterOAuthUrl(\"http://localhost:3000/login/oauth2/code/twitter\");\r\n  window.location.href=authUrl;\r\n    \r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button onClick={handleClick}>\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n  \r\n  const printRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleDownloadImage = async () => {\r\n    const element:any = printRef.current;\r\n    const canvas = await html2canvas(element);\r\n\r\n    const data = canvas.toDataURL('image/jpg');\r\n    const link = document.createElement('a');\r\n\r\n    if (typeof link.download === 'string') {\r\n      link.href = data;\r\n      link.download = 'image.jpg';\r\n\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } else {\r\n      window.open(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <TestOauth/>\r\n    // <TwitterLogin\r\n    //       authCallback={authHandler}\r\n    //       consumerKey={\"S0FVySANFNnlISMw5D1vSE8P0\"}\r\n    //       consumerSecret={\"KCu23eNrVftMqQeefWJTIei5Klju341e78BypImTVfw338Mm0X\"}\r\n    //       callbackUrl={\"https://alexandrtovmach.github.io/react-twitter-login/\"}\r\n    //       buttonTheme={\"dark\"}\r\n    //     \t/>\r\n    <div>\r\n    <BtnToTwitterLogin/>\r\n\r\n    \t<div>\r\n\t\t\t\t<button type=\"button\" onClick={handleDownloadImage}>\r\n\t\t\t\t\tDownload as Image\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div>I will not be in the image.</div>\r\n\t\t\t\t<div ref={printRef}>I will be in the image.</div>\r\n    \t</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Oauth2;","C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditPassword.tsx",["732","733","734","735"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\UserInfo.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\DeleteAccount.tsx",["736","737","738"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserRingcardName.tsx",["739","740","741","742"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\mypage\\EditUserEmail.tsx",["743","744","745","746"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionAnswered.tsx",["747","748"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\question\\QuestionUnanswered.tsx",["749","750"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\question\\AnswerCompletedPage.tsx",["751","752"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\anony\\UserHome.tsx",["753","754","755","756"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\pages\\anony\\QuestionAnony.tsx",["757"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\auth\\PrivateRoute.tsx",["758"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Navigation.tsx",["759","760","761"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteList.tsx",["762"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\UserProfile.tsx",["763","764","765"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingcaShort.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\Header.tsx",["766"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderNoProfile.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Toast.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Header\\HeaderRingca.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Modal\\ClearTrashcanModal.tsx",["767","768"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\AnswerFormQuestionNote.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\AnsweredQuestionNote.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerFormQuestionNote.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormQuestionAnony.tsx",["769"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\SendQuestionFormUserHome.tsx",["770"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteListAnony.tsx",["771","772","773","774","775","776"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNote.tsx",["777"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Modal\\MenuModal.tsx",["778"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\AnswerForm.tsx",["779","780","781","782","783"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\NowDate.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\HyperlinkBox.tsx",["784"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\EditAnswerForm.tsx",[],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteAnony.tsx",["785","786"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\Modal\\SelectNoteModal.tsx",["787","788","789"],[],"C:\\Users\\yuleg\\Dev\\Ringca\\ORIN33copy\\ringcard\\ringcard_frontend\\src\\components\\QuestionNoteFooter.tsx",["790","791","792","793","794"],[],{"ruleId":"795","severity":1,"message":"796","line":1,"column":17,"nodeType":"797","messageId":"798","endLine":1,"endColumn":25},{"ruleId":"795","severity":1,"message":"799","line":1,"column":27,"nodeType":"797","messageId":"798","endLine":1,"endColumn":36},{"ruleId":"795","severity":1,"message":"800","line":4,"column":8,"nodeType":"797","messageId":"798","endLine":4,"endColumn":18},{"ruleId":"795","severity":1,"message":"801","line":21,"column":8,"nodeType":"797","messageId":"798","endLine":21,"endColumn":13},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"796","line":2,"column":17,"nodeType":"797","messageId":"798","endLine":2,"endColumn":25},{"ruleId":"795","severity":1,"message":"803","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":14},{"ruleId":"795","severity":1,"message":"804","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":147,"column":16,"nodeType":"797","messageId":"798","endLine":147,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":147,"column":30,"nodeType":"797","messageId":"798","endLine":147,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":147,"column":39,"nodeType":"797","messageId":"798","endLine":147,"endColumn":45},{"ruleId":"795","severity":1,"message":"808","line":9,"column":8,"nodeType":"797","messageId":"798","endLine":9,"endColumn":13},{"ruleId":"809","severity":1,"message":"810","line":35,"column":5,"nodeType":"811","endLine":35,"endColumn":7,"suggestions":"812"},{"ruleId":"809","severity":1,"message":"810","line":32,"column":5,"nodeType":"811","endLine":32,"endColumn":7,"suggestions":"813"},{"ruleId":"809","severity":1,"message":"810","line":32,"column":5,"nodeType":"811","endLine":32,"endColumn":7,"suggestions":"814"},{"ruleId":"809","severity":1,"message":"810","line":32,"column":5,"nodeType":"811","endLine":32,"endColumn":7,"suggestions":"815"},{"ruleId":"795","severity":1,"message":"816","line":3,"column":21,"nodeType":"797","messageId":"798","endLine":3,"endColumn":36},{"ruleId":"795","severity":1,"message":"817","line":10,"column":19,"nodeType":"797","messageId":"798","endLine":10,"endColumn":30},{"ruleId":"795","severity":1,"message":"818","line":2,"column":38,"nodeType":"797","messageId":"798","endLine":2,"endColumn":47},{"ruleId":"795","severity":1,"message":"819","line":6,"column":8,"nodeType":"797","messageId":"798","endLine":6,"endColumn":24},{"ruleId":"795","severity":1,"message":"818","line":2,"column":38,"nodeType":"797","messageId":"798","endLine":2,"endColumn":47},{"ruleId":"795","severity":1,"message":"820","line":7,"column":8,"nodeType":"797","messageId":"798","endLine":7,"endColumn":20},{"ruleId":"795","severity":1,"message":"821","line":9,"column":10,"nodeType":"797","messageId":"798","endLine":9,"endColumn":15},{"ruleId":"795","severity":1,"message":"822","line":9,"column":17,"nodeType":"797","messageId":"798","endLine":9,"endColumn":31},{"ruleId":"795","severity":1,"message":"823","line":9,"column":33,"nodeType":"797","messageId":"798","endLine":9,"endColumn":37},{"ruleId":"809","severity":1,"message":"824","line":39,"column":5,"nodeType":"811","endLine":39,"endColumn":7,"suggestions":"825"},{"ruleId":"795","severity":1,"message":"826","line":2,"column":8,"nodeType":"797","messageId":"798","endLine":2,"endColumn":18},{"ruleId":"795","severity":1,"message":"827","line":8,"column":10,"nodeType":"797","messageId":"798","endLine":8,"endColumn":22},{"ruleId":"795","severity":1,"message":"828","line":5,"column":10,"nodeType":"797","messageId":"798","endLine":5,"endColumn":19},{"ruleId":"795","severity":1,"message":"829","line":18,"column":9,"nodeType":"797","messageId":"798","endLine":18,"endColumn":23},{"ruleId":"795","severity":1,"message":"830","line":20,"column":18,"nodeType":"797","messageId":"798","endLine":20,"endColumn":27},{"ruleId":"795","severity":1,"message":"831","line":20,"column":29,"nodeType":"797","messageId":"798","endLine":20,"endColumn":41},{"ruleId":"795","severity":1,"message":"832","line":5,"column":16,"nodeType":"797","messageId":"798","endLine":5,"endColumn":21},{"ruleId":"795","severity":1,"message":"833","line":5,"column":23,"nodeType":"797","messageId":"798","endLine":5,"endColumn":29},{"ruleId":"795","severity":1,"message":"834","line":6,"column":8,"nodeType":"797","messageId":"798","endLine":6,"endColumn":26},{"ruleId":"795","severity":1,"message":"835","line":64,"column":8,"nodeType":"797","messageId":"798","endLine":64,"endColumn":29},{"ruleId":"795","severity":1,"message":"836","line":79,"column":8,"nodeType":"797","messageId":"798","endLine":79,"endColumn":29},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"799","line":2,"column":10,"nodeType":"797","messageId":"798","endLine":2,"endColumn":19},{"ruleId":"795","severity":1,"message":"796","line":2,"column":21,"nodeType":"797","messageId":"798","endLine":2,"endColumn":29},{"ruleId":"795","severity":1,"message":"805","line":63,"column":16,"nodeType":"797","messageId":"798","endLine":63,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":63,"column":30,"nodeType":"797","messageId":"798","endLine":63,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":63,"column":39,"nodeType":"797","messageId":"798","endLine":63,"endColumn":45},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"837","line":2,"column":10,"nodeType":"797","messageId":"798","endLine":2,"endColumn":13},{"ruleId":"795","severity":1,"message":"799","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":19},{"ruleId":"795","severity":1,"message":"796","line":3,"column":21,"nodeType":"797","messageId":"798","endLine":3,"endColumn":29},{"ruleId":"795","severity":1,"message":"826","line":4,"column":8,"nodeType":"797","messageId":"798","endLine":4,"endColumn":18},{"ruleId":"838","severity":1,"message":"839","line":25,"column":18,"nodeType":"840","messageId":"841","endLine":25,"endColumn":20},{"ruleId":"795","severity":1,"message":"803","line":6,"column":10,"nodeType":"797","messageId":"798","endLine":6,"endColumn":14},{"ruleId":"795","severity":1,"message":"842","line":15,"column":8,"nodeType":"797","messageId":"798","endLine":15,"endColumn":11},{"ruleId":"795","severity":1,"message":"803","line":1,"column":10,"nodeType":"797","messageId":"798","endLine":1,"endColumn":14},{"ruleId":"809","severity":1,"message":"843","line":41,"column":5,"nodeType":"811","endLine":41,"endColumn":7,"suggestions":"844"},{"ruleId":"795","severity":1,"message":"845","line":83,"column":11,"nodeType":"797","messageId":"798","endLine":83,"endColumn":38},{"ruleId":"795","severity":1,"message":"846","line":7,"column":10,"nodeType":"797","messageId":"798","endLine":7,"endColumn":19},{"ruleId":"795","severity":1,"message":"847","line":4,"column":10,"nodeType":"797","messageId":"798","endLine":4,"endColumn":18},{"ruleId":"795","severity":1,"message":"804","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":78,"column":16,"nodeType":"797","messageId":"798","endLine":78,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":78,"column":30,"nodeType":"797","messageId":"798","endLine":78,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":78,"column":39,"nodeType":"797","messageId":"798","endLine":78,"endColumn":45},{"ruleId":"795","severity":1,"message":"804","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":86,"column":16,"nodeType":"797","messageId":"798","endLine":86,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":86,"column":30,"nodeType":"797","messageId":"798","endLine":86,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":86,"column":39,"nodeType":"797","messageId":"798","endLine":86,"endColumn":45},{"ruleId":"795","severity":1,"message":"848","line":16,"column":8,"nodeType":"797","messageId":"798","endLine":16,"endColumn":25},{"ruleId":"795","severity":1,"message":"849","line":18,"column":10,"nodeType":"797","messageId":"798","endLine":18,"endColumn":23},{"ruleId":"795","severity":1,"message":"850","line":19,"column":10,"nodeType":"797","messageId":"798","endLine":19,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":183,"column":16,"nodeType":"797","messageId":"798","endLine":183,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":183,"column":30,"nodeType":"797","messageId":"798","endLine":183,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":183,"column":39,"nodeType":"797","messageId":"798","endLine":183,"endColumn":45},{"ruleId":"795","severity":1,"message":"851","line":228,"column":8,"nodeType":"797","messageId":"798","endLine":228,"endColumn":28},{"ruleId":"795","severity":1,"message":"852","line":231,"column":11,"nodeType":"797","messageId":"798","endLine":231,"endColumn":33},{"ruleId":"795","severity":1,"message":"853","line":236,"column":8,"nodeType":"797","messageId":"798","endLine":236,"endColumn":18},{"ruleId":"795","severity":1,"message":"799","line":2,"column":10,"nodeType":"797","messageId":"798","endLine":2,"endColumn":19},{"ruleId":"795","severity":1,"message":"805","line":73,"column":16,"nodeType":"797","messageId":"798","endLine":73,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":73,"column":30,"nodeType":"797","messageId":"798","endLine":73,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":73,"column":39,"nodeType":"797","messageId":"798","endLine":73,"endColumn":45},{"ruleId":"795","severity":1,"message":"799","line":1,"column":27,"nodeType":"797","messageId":"798","endLine":1,"endColumn":36},{"ruleId":"795","severity":1,"message":"854","line":1,"column":38,"nodeType":"797","messageId":"798","endLine":1,"endColumn":48},{"ruleId":"795","severity":1,"message":"855","line":11,"column":8,"nodeType":"797","messageId":"798","endLine":11,"endColumn":17},{"ruleId":"795","severity":1,"message":"856","line":13,"column":10,"nodeType":"797","messageId":"798","endLine":13,"endColumn":21},{"ruleId":"795","severity":1,"message":"805","line":77,"column":16,"nodeType":"797","messageId":"798","endLine":77,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":77,"column":30,"nodeType":"797","messageId":"798","endLine":77,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":77,"column":39,"nodeType":"797","messageId":"798","endLine":77,"endColumn":45},{"ruleId":"795","severity":1,"message":"796","line":2,"column":31,"nodeType":"797","messageId":"798","endLine":2,"endColumn":39},{"ruleId":"795","severity":1,"message":"803","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":14},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"803","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":14},{"ruleId":"795","severity":1,"message":"857","line":12,"column":16,"nodeType":"797","messageId":"798","endLine":12,"endColumn":21},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"858","line":8,"column":9,"nodeType":"797","messageId":"798","endLine":8,"endColumn":21},{"ruleId":"795","severity":1,"message":"859","line":9,"column":9,"nodeType":"797","messageId":"798","endLine":9,"endColumn":24},{"ruleId":"795","severity":1,"message":"860","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":20},{"ruleId":"795","severity":1,"message":"861","line":13,"column":8,"nodeType":"797","messageId":"798","endLine":13,"endColumn":27},{"ruleId":"795","severity":1,"message":"862","line":14,"column":8,"nodeType":"797","messageId":"798","endLine":14,"endColumn":20},{"ruleId":"795","severity":1,"message":"863","line":15,"column":8,"nodeType":"797","messageId":"798","endLine":15,"endColumn":20},{"ruleId":"795","severity":1,"message":"864","line":24,"column":9,"nodeType":"797","messageId":"798","endLine":24,"endColumn":15},{"ruleId":"809","severity":1,"message":"865","line":74,"column":5,"nodeType":"811","endLine":74,"endColumn":7,"suggestions":"866"},{"ruleId":"795","severity":1,"message":"867","line":197,"column":9,"nodeType":"797","messageId":"798","endLine":197,"endColumn":27},{"ruleId":"795","severity":1,"message":"868","line":11,"column":10,"nodeType":"797","messageId":"798","endLine":11,"endColumn":17},{"ruleId":"795","severity":1,"message":"831","line":11,"column":30,"nodeType":"797","messageId":"798","endLine":11,"endColumn":42},{"ruleId":"795","severity":1,"message":"869","line":17,"column":9,"nodeType":"797","messageId":"798","endLine":17,"endColumn":17},{"ruleId":"795","severity":1,"message":"870","line":17,"column":19,"nodeType":"797","messageId":"798","endLine":17,"endColumn":30},{"ruleId":"795","severity":1,"message":"871","line":25,"column":10,"nodeType":"797","messageId":"798","endLine":25,"endColumn":16},{"ruleId":"795","severity":1,"message":"858","line":27,"column":9,"nodeType":"797","messageId":"798","endLine":27,"endColumn":21},{"ruleId":"795","severity":1,"message":"859","line":28,"column":9,"nodeType":"797","messageId":"798","endLine":28,"endColumn":24},{"ruleId":"795","severity":1,"message":"860","line":31,"column":8,"nodeType":"797","messageId":"798","endLine":31,"endColumn":20},{"ruleId":"795","severity":1,"message":"861","line":32,"column":8,"nodeType":"797","messageId":"798","endLine":32,"endColumn":27},{"ruleId":"795","severity":1,"message":"862","line":33,"column":8,"nodeType":"797","messageId":"798","endLine":33,"endColumn":20},{"ruleId":"795","severity":1,"message":"863","line":34,"column":8,"nodeType":"797","messageId":"798","endLine":34,"endColumn":20},{"ruleId":"795","severity":1,"message":"872","line":38,"column":9,"nodeType":"797","messageId":"798","endLine":38,"endColumn":22},{"ruleId":"795","severity":1,"message":"873","line":39,"column":9,"nodeType":"797","messageId":"798","endLine":39,"endColumn":31},{"ruleId":"795","severity":1,"message":"874","line":40,"column":9,"nodeType":"797","messageId":"798","endLine":40,"endColumn":25},{"ruleId":"795","severity":1,"message":"875","line":41,"column":9,"nodeType":"797","messageId":"798","endLine":41,"endColumn":22},{"ruleId":"795","severity":1,"message":"876","line":45,"column":9,"nodeType":"797","messageId":"798","endLine":45,"endColumn":14},{"ruleId":"795","severity":1,"message":"864","line":55,"column":9,"nodeType":"797","messageId":"798","endLine":55,"endColumn":15},{"ruleId":"795","severity":1,"message":"877","line":57,"column":9,"nodeType":"797","messageId":"798","endLine":57,"endColumn":15},{"ruleId":"795","severity":1,"message":"878","line":66,"column":11,"nodeType":"797","messageId":"798","endLine":66,"endColumn":27},{"ruleId":"795","severity":1,"message":"879","line":120,"column":13,"nodeType":"797","messageId":"798","endLine":120,"endColumn":24},{"ruleId":"795","severity":1,"message":"880","line":233,"column":3,"nodeType":"797","messageId":"798","endLine":233,"endColumn":11},{"ruleId":"795","severity":1,"message":"805","line":235,"column":16,"nodeType":"797","messageId":"798","endLine":235,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":235,"column":30,"nodeType":"797","messageId":"798","endLine":235,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":235,"column":39,"nodeType":"797","messageId":"798","endLine":235,"endColumn":45},{"ruleId":"795","severity":1,"message":"796","line":1,"column":17,"nodeType":"797","messageId":"798","endLine":1,"endColumn":25},{"ruleId":"795","severity":1,"message":"799","line":1,"column":27,"nodeType":"797","messageId":"798","endLine":1,"endColumn":36},{"ruleId":"795","severity":1,"message":"800","line":4,"column":8,"nodeType":"797","messageId":"798","endLine":4,"endColumn":18},{"ruleId":"795","severity":1,"message":"801","line":21,"column":8,"nodeType":"797","messageId":"798","endLine":21,"endColumn":13},{"ruleId":"809","severity":1,"message":"810","line":32,"column":5,"nodeType":"811","endLine":32,"endColumn":7,"suggestions":"881"},{"ruleId":"809","severity":1,"message":"810","line":32,"column":5,"nodeType":"811","endLine":32,"endColumn":7,"suggestions":"882"},{"ruleId":"809","severity":1,"message":"810","line":32,"column":5,"nodeType":"811","endLine":32,"endColumn":7,"suggestions":"883"},{"ruleId":"795","severity":1,"message":"848","line":16,"column":8,"nodeType":"797","messageId":"798","endLine":16,"endColumn":25},{"ruleId":"795","severity":1,"message":"849","line":18,"column":10,"nodeType":"797","messageId":"798","endLine":18,"endColumn":23},{"ruleId":"795","severity":1,"message":"850","line":19,"column":10,"nodeType":"797","messageId":"798","endLine":19,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":183,"column":16,"nodeType":"797","messageId":"798","endLine":183,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":183,"column":30,"nodeType":"797","messageId":"798","endLine":183,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":183,"column":39,"nodeType":"797","messageId":"798","endLine":183,"endColumn":45},{"ruleId":"795","severity":1,"message":"851","line":228,"column":8,"nodeType":"797","messageId":"798","endLine":228,"endColumn":28},{"ruleId":"795","severity":1,"message":"852","line":231,"column":11,"nodeType":"797","messageId":"798","endLine":231,"endColumn":33},{"ruleId":"795","severity":1,"message":"853","line":236,"column":8,"nodeType":"797","messageId":"798","endLine":236,"endColumn":18},{"ruleId":"795","severity":1,"message":"799","line":1,"column":27,"nodeType":"797","messageId":"798","endLine":1,"endColumn":36},{"ruleId":"795","severity":1,"message":"854","line":1,"column":38,"nodeType":"797","messageId":"798","endLine":1,"endColumn":48},{"ruleId":"795","severity":1,"message":"855","line":11,"column":8,"nodeType":"797","messageId":"798","endLine":11,"endColumn":17},{"ruleId":"795","severity":1,"message":"856","line":13,"column":10,"nodeType":"797","messageId":"798","endLine":13,"endColumn":21},{"ruleId":"795","severity":1,"message":"805","line":77,"column":16,"nodeType":"797","messageId":"798","endLine":77,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":77,"column":30,"nodeType":"797","messageId":"798","endLine":77,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":77,"column":39,"nodeType":"797","messageId":"798","endLine":77,"endColumn":45},{"ruleId":"795","severity":1,"message":"799","line":2,"column":10,"nodeType":"797","messageId":"798","endLine":2,"endColumn":19},{"ruleId":"795","severity":1,"message":"805","line":73,"column":16,"nodeType":"797","messageId":"798","endLine":73,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":73,"column":30,"nodeType":"797","messageId":"798","endLine":73,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":73,"column":39,"nodeType":"797","messageId":"798","endLine":73,"endColumn":45},{"ruleId":"795","severity":1,"message":"808","line":9,"column":8,"nodeType":"797","messageId":"798","endLine":9,"endColumn":13},{"ruleId":"809","severity":1,"message":"810","line":35,"column":5,"nodeType":"811","endLine":35,"endColumn":7,"suggestions":"884"},{"ruleId":"795","severity":1,"message":"868","line":11,"column":10,"nodeType":"797","messageId":"798","endLine":11,"endColumn":17},{"ruleId":"795","severity":1,"message":"831","line":11,"column":30,"nodeType":"797","messageId":"798","endLine":11,"endColumn":42},{"ruleId":"795","severity":1,"message":"869","line":17,"column":9,"nodeType":"797","messageId":"798","endLine":17,"endColumn":17},{"ruleId":"795","severity":1,"message":"870","line":17,"column":19,"nodeType":"797","messageId":"798","endLine":17,"endColumn":30},{"ruleId":"795","severity":1,"message":"871","line":25,"column":10,"nodeType":"797","messageId":"798","endLine":25,"endColumn":16},{"ruleId":"795","severity":1,"message":"858","line":27,"column":9,"nodeType":"797","messageId":"798","endLine":27,"endColumn":21},{"ruleId":"795","severity":1,"message":"859","line":28,"column":9,"nodeType":"797","messageId":"798","endLine":28,"endColumn":24},{"ruleId":"795","severity":1,"message":"860","line":31,"column":8,"nodeType":"797","messageId":"798","endLine":31,"endColumn":20},{"ruleId":"795","severity":1,"message":"861","line":32,"column":8,"nodeType":"797","messageId":"798","endLine":32,"endColumn":27},{"ruleId":"795","severity":1,"message":"862","line":33,"column":8,"nodeType":"797","messageId":"798","endLine":33,"endColumn":20},{"ruleId":"795","severity":1,"message":"863","line":34,"column":8,"nodeType":"797","messageId":"798","endLine":34,"endColumn":20},{"ruleId":"795","severity":1,"message":"872","line":38,"column":9,"nodeType":"797","messageId":"798","endLine":38,"endColumn":22},{"ruleId":"795","severity":1,"message":"873","line":39,"column":9,"nodeType":"797","messageId":"798","endLine":39,"endColumn":31},{"ruleId":"795","severity":1,"message":"874","line":40,"column":9,"nodeType":"797","messageId":"798","endLine":40,"endColumn":25},{"ruleId":"795","severity":1,"message":"875","line":41,"column":9,"nodeType":"797","messageId":"798","endLine":41,"endColumn":22},{"ruleId":"795","severity":1,"message":"876","line":45,"column":9,"nodeType":"797","messageId":"798","endLine":45,"endColumn":14},{"ruleId":"795","severity":1,"message":"864","line":55,"column":9,"nodeType":"797","messageId":"798","endLine":55,"endColumn":15},{"ruleId":"795","severity":1,"message":"877","line":57,"column":9,"nodeType":"797","messageId":"798","endLine":57,"endColumn":15},{"ruleId":"795","severity":1,"message":"878","line":66,"column":11,"nodeType":"797","messageId":"798","endLine":66,"endColumn":27},{"ruleId":"795","severity":1,"message":"879","line":120,"column":13,"nodeType":"797","messageId":"798","endLine":120,"endColumn":24},{"ruleId":"795","severity":1,"message":"880","line":233,"column":3,"nodeType":"797","messageId":"798","endLine":233,"endColumn":11},{"ruleId":"795","severity":1,"message":"805","line":235,"column":16,"nodeType":"797","messageId":"798","endLine":235,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":235,"column":30,"nodeType":"797","messageId":"798","endLine":235,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":235,"column":39,"nodeType":"797","messageId":"798","endLine":235,"endColumn":45},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"858","line":8,"column":9,"nodeType":"797","messageId":"798","endLine":8,"endColumn":21},{"ruleId":"795","severity":1,"message":"859","line":9,"column":9,"nodeType":"797","messageId":"798","endLine":9,"endColumn":24},{"ruleId":"795","severity":1,"message":"860","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":20},{"ruleId":"795","severity":1,"message":"861","line":13,"column":8,"nodeType":"797","messageId":"798","endLine":13,"endColumn":27},{"ruleId":"795","severity":1,"message":"862","line":14,"column":8,"nodeType":"797","messageId":"798","endLine":14,"endColumn":20},{"ruleId":"795","severity":1,"message":"863","line":15,"column":8,"nodeType":"797","messageId":"798","endLine":15,"endColumn":20},{"ruleId":"795","severity":1,"message":"864","line":24,"column":9,"nodeType":"797","messageId":"798","endLine":24,"endColumn":15},{"ruleId":"809","severity":1,"message":"865","line":74,"column":5,"nodeType":"811","endLine":74,"endColumn":7,"suggestions":"885"},{"ruleId":"795","severity":1,"message":"867","line":197,"column":9,"nodeType":"797","messageId":"798","endLine":197,"endColumn":27},{"ruleId":"795","severity":1,"message":"804","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":147,"column":16,"nodeType":"797","messageId":"798","endLine":147,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":147,"column":30,"nodeType":"797","messageId":"798","endLine":147,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":147,"column":39,"nodeType":"797","messageId":"798","endLine":147,"endColumn":45},{"ruleId":"795","severity":1,"message":"805","line":63,"column":16,"nodeType":"797","messageId":"798","endLine":63,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":63,"column":30,"nodeType":"797","messageId":"798","endLine":63,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":63,"column":39,"nodeType":"797","messageId":"798","endLine":63,"endColumn":45},{"ruleId":"795","severity":1,"message":"804","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":78,"column":16,"nodeType":"797","messageId":"798","endLine":78,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":78,"column":30,"nodeType":"797","messageId":"798","endLine":78,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":78,"column":39,"nodeType":"797","messageId":"798","endLine":78,"endColumn":45},{"ruleId":"795","severity":1,"message":"804","line":12,"column":8,"nodeType":"797","messageId":"798","endLine":12,"endColumn":16},{"ruleId":"795","severity":1,"message":"805","line":86,"column":16,"nodeType":"797","messageId":"798","endLine":86,"endColumn":28},{"ruleId":"795","severity":1,"message":"806","line":86,"column":30,"nodeType":"797","messageId":"798","endLine":86,"endColumn":37},{"ruleId":"795","severity":1,"message":"807","line":86,"column":39,"nodeType":"797","messageId":"798","endLine":86,"endColumn":45},{"ruleId":"795","severity":1,"message":"818","line":2,"column":38,"nodeType":"797","messageId":"798","endLine":2,"endColumn":47},{"ruleId":"795","severity":1,"message":"819","line":6,"column":8,"nodeType":"797","messageId":"798","endLine":6,"endColumn":24},{"ruleId":"795","severity":1,"message":"818","line":2,"column":38,"nodeType":"797","messageId":"798","endLine":2,"endColumn":47},{"ruleId":"795","severity":1,"message":"820","line":7,"column":8,"nodeType":"797","messageId":"798","endLine":7,"endColumn":20},{"ruleId":"795","severity":1,"message":"816","line":3,"column":21,"nodeType":"797","messageId":"798","endLine":3,"endColumn":36},{"ruleId":"795","severity":1,"message":"817","line":10,"column":19,"nodeType":"797","messageId":"798","endLine":10,"endColumn":30},{"ruleId":"795","severity":1,"message":"821","line":9,"column":10,"nodeType":"797","messageId":"798","endLine":9,"endColumn":15},{"ruleId":"795","severity":1,"message":"822","line":9,"column":17,"nodeType":"797","messageId":"798","endLine":9,"endColumn":31},{"ruleId":"795","severity":1,"message":"823","line":9,"column":33,"nodeType":"797","messageId":"798","endLine":9,"endColumn":37},{"ruleId":"809","severity":1,"message":"824","line":39,"column":5,"nodeType":"811","endLine":39,"endColumn":7,"suggestions":"886"},{"ruleId":"809","severity":1,"message":"843","line":41,"column":5,"nodeType":"811","endLine":41,"endColumn":7,"suggestions":"887"},{"ruleId":"795","severity":1,"message":"847","line":4,"column":10,"nodeType":"797","messageId":"798","endLine":4,"endColumn":18},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"796","line":2,"column":17,"nodeType":"797","messageId":"798","endLine":2,"endColumn":25},{"ruleId":"795","severity":1,"message":"803","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":14},{"ruleId":"795","severity":1,"message":"826","line":2,"column":8,"nodeType":"797","messageId":"798","endLine":2,"endColumn":18},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"799","line":2,"column":10,"nodeType":"797","messageId":"798","endLine":2,"endColumn":19},{"ruleId":"795","severity":1,"message":"796","line":2,"column":21,"nodeType":"797","messageId":"798","endLine":2,"endColumn":29},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"796","line":2,"column":31,"nodeType":"797","messageId":"798","endLine":2,"endColumn":39},{"ruleId":"795","severity":1,"message":"803","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":14},{"ruleId":"795","severity":1,"message":"846","line":7,"column":10,"nodeType":"797","messageId":"798","endLine":7,"endColumn":19},{"ruleId":"795","severity":1,"message":"845","line":83,"column":11,"nodeType":"797","messageId":"798","endLine":83,"endColumn":38},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"837","line":2,"column":10,"nodeType":"797","messageId":"798","endLine":2,"endColumn":13},{"ruleId":"795","severity":1,"message":"799","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":19},{"ruleId":"795","severity":1,"message":"796","line":3,"column":21,"nodeType":"797","messageId":"798","endLine":3,"endColumn":29},{"ruleId":"795","severity":1,"message":"826","line":4,"column":8,"nodeType":"797","messageId":"798","endLine":4,"endColumn":18},{"ruleId":"838","severity":1,"message":"839","line":25,"column":18,"nodeType":"840","messageId":"841","endLine":25,"endColumn":20},{"ruleId":"795","severity":1,"message":"827","line":8,"column":10,"nodeType":"797","messageId":"798","endLine":8,"endColumn":22},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"828","line":5,"column":10,"nodeType":"797","messageId":"798","endLine":5,"endColumn":19},{"ruleId":"795","severity":1,"message":"829","line":18,"column":9,"nodeType":"797","messageId":"798","endLine":18,"endColumn":23},{"ruleId":"795","severity":1,"message":"830","line":20,"column":18,"nodeType":"797","messageId":"798","endLine":20,"endColumn":27},{"ruleId":"795","severity":1,"message":"831","line":20,"column":29,"nodeType":"797","messageId":"798","endLine":20,"endColumn":41},{"ruleId":"795","severity":1,"message":"888","line":198,"column":9,"nodeType":"797","messageId":"798","endLine":198,"endColumn":28},{"ruleId":"795","severity":1,"message":"803","line":1,"column":10,"nodeType":"797","messageId":"798","endLine":1,"endColumn":14},{"ruleId":"795","severity":1,"message":"803","line":6,"column":10,"nodeType":"797","messageId":"798","endLine":6,"endColumn":14},{"ruleId":"795","severity":1,"message":"842","line":15,"column":8,"nodeType":"797","messageId":"798","endLine":15,"endColumn":11},{"ruleId":"795","severity":1,"message":"802","line":1,"column":8,"nodeType":"797","messageId":"798","endLine":1,"endColumn":13},{"ruleId":"795","severity":1,"message":"803","line":3,"column":10,"nodeType":"797","messageId":"798","endLine":3,"endColumn":14},{"ruleId":"795","severity":1,"message":"857","line":12,"column":16,"nodeType":"797","messageId":"798","endLine":12,"endColumn":21},{"ruleId":"795","severity":1,"message":"832","line":5,"column":16,"nodeType":"797","messageId":"798","endLine":5,"endColumn":21},{"ruleId":"795","severity":1,"message":"833","line":5,"column":23,"nodeType":"797","messageId":"798","endLine":5,"endColumn":29},{"ruleId":"795","severity":1,"message":"834","line":6,"column":8,"nodeType":"797","messageId":"798","endLine":6,"endColumn":26},{"ruleId":"795","severity":1,"message":"835","line":64,"column":8,"nodeType":"797","messageId":"798","endLine":64,"endColumn":29},{"ruleId":"795","severity":1,"message":"836","line":79,"column":8,"nodeType":"797","messageId":"798","endLine":79,"endColumn":29},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Navigation' is defined but never used.","'Oauth' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'Toastify' is defined but never used.","'isSubmitting' is assigned a value but never used.","'isDirty' is assigned a value but never used.","'errors' is assigned a value but never used.","'Toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.","ArrayExpression",["889"],["890"],["891"],["892"],"'useSearchParams' is defined but never used.","'setUserName' is assigned a value but never used.","'Component' is defined but never used.","'QuestionNoteList' is defined but never used.","'QuestionList' is defined but never used.","'toast' is defined but never used.","'ToastContainer' is defined but never used.","'Zoom' is defined but never used.","React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["893"],"'Pagination' is defined but never used.","'forEachChild' is defined but never used.","'getCookie' is defined but never used.","'answerContents' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'QuestionUnanswered' is defined but never used.","'handleSendAnswerClick' is assigned a value but never used.","'handleEditAnswerClick' is assigned a value but never used.","'url' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'idx' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'questionId'. Either include it or remove the dependency array.",["894"],"'clickSelectNoteColorHandler' is defined but never used.","'IQuestion' is defined but never used.","'Navigate' is defined but never used.","'ReactTwitterLogin' is defined but never used.","'twitterOAuth2' is defined but never used.","'Client' is defined but never used.","'responseErrorTwitter' is assigned a value but never used.","'responseSuccessTwitter' is assigned a value but never used.","'onResponse' is assigned a value but never used.","'useReducer' is defined but never used.","'userEvent' is defined but never used.","'useNavigate' is defined but never used.","'close' is assigned a value but never used.","'CONSUMER_KEY' is assigned a value but never used.","'CONSUMER_SECRET' is assigned a value but never used.","'ACCESS_TOKEN' is assigned a value but never used.","'ACCESS_TOKEN_SECRET' is assigned a value but never used.","'CALLBACK_URL' is assigned a value but never used.","'BEARER_TOKEN' is assigned a value but never used.","'client' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authUrl'. Either include it or remove the dependency array.",["895"],"'getTwitterOAuthUrl' is assigned a value but never used.","'cookies' is assigned a value but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'userMe' is assigned a value but never used.","'TWITTER_STATE' is assigned a value but never used.","'TWITTER_CODE_CHALLENGE' is assigned a value but never used.","'TWITTER_AUTH_URL' is assigned a value but never used.","'TWITTER_SCOPE' is assigned a value but never used.","'state' is assigned a value but never used.","'params' is assigned a value but never used.","'createFormParams' is assigned a value but never used.","'endpointURL' is assigned a value but never used.","'register' is assigned a value but never used.",["896"],["897"],["898"],["899"],["900"],["901"],["902"],"'handleDownloadImage' is assigned a value but never used.",{"desc":"903","fix":"904"},{"desc":"903","fix":"905"},{"desc":"903","fix":"906"},{"desc":"903","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"903","fix":"914"},{"desc":"903","fix":"915"},{"desc":"903","fix":"916"},{"desc":"903","fix":"917"},{"desc":"912","fix":"918"},{"desc":"908","fix":"919"},{"desc":"910","fix":"920"},"Update the dependencies array to be: [page]",{"range":"921","text":"922"},{"range":"923","text":"922"},{"range":"924","text":"922"},{"range":"925","text":"922"},"Update the dependencies array to be: [userName]",{"range":"926","text":"927"},"Update the dependencies array to be: [questionId]",{"range":"928","text":"929"},"Update the dependencies array to be: [authUrl]",{"range":"930","text":"931"},{"range":"932","text":"922"},{"range":"933","text":"922"},{"range":"934","text":"922"},{"range":"935","text":"922"},{"range":"936","text":"931"},{"range":"937","text":"927"},{"range":"938","text":"929"},[1265,1267],"[page]",[1108,1110],[1112,1114],[1115,1117],[1381,1383],"[userName]",[1415,1417],"[questionId]",[2412,2414],"[authUrl]",[1115,1117],[1108,1110],[1112,1114],[1265,1267],[2412,2414],[1381,1383],[1415,1417]]